{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2010 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar DetectorResult_1 = require(\"../common/DetectorResult\");\n/**\n * <p>Extends {@link DetectorResult} with more information specific to the Aztec format,\n * like the number of layers and whether it's compact.</p>\n *\n * @author Sean Owen\n */\n\n\nvar AztecDetectorResult =\n/** @class */\nfunction (_super) {\n  __extends(AztecDetectorResult, _super);\n\n  function AztecDetectorResult(bits, points, compact, nbDatablocks, nbLayers) {\n    var _this = _super.call(this, bits, points) || this;\n\n    _this.compact = compact;\n    _this.nbDatablocks = nbDatablocks;\n    _this.nbLayers = nbLayers;\n    return _this;\n  }\n\n  AztecDetectorResult.prototype.getNbLayers = function () {\n    return this.nbLayers;\n  };\n\n  AztecDetectorResult.prototype.getNbDatablocks = function () {\n    return this.nbDatablocks;\n  };\n\n  AztecDetectorResult.prototype.isCompact = function () {\n    return this.compact;\n  };\n\n  return AztecDetectorResult;\n}(DetectorResult_1.default);\n\nexports.default = AztecDetectorResult;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA;AAEA;;;;;;;;AAMA;AAAA;AAAA;AAAiDA;;AAM7C,+BAAmBC,IAAnB,EACIC,MADJ,EAEIC,OAFJ,EAGIC,YAHJ,EAIIC,QAJJ,EAIoB;AAJpB,gBAKIC,kBAAML,IAAN,EAAYC,MAAZ,KAAmB,IALvB;;AAMIK,SAAI,CAACJ,OAAL,GAAeA,OAAf;AACAI,SAAI,CAACH,YAAL,GAAoBA,YAApB;AACAG,SAAI,CAACF,QAAL,GAAgBA,QAAhB;;AACH;;AAEMG,8CAAP;AACI,WAAO,KAAKH,QAAZ;AACH,GAFM;;AAIAG,kDAAP;AACI,WAAO,KAAKJ,YAAZ;AACH,GAFM;;AAIAI,4CAAP;AACI,WAAO,KAAKL,OAAZ;AACH,GAFM;;AAGX;AA5BA,EAAiDM,wBAAjD","names":["__extends","bits","points","compact","nbDatablocks","nbLayers","_super","_this","AztecDetectorResult","DetectorResult_1"],"sources":["../../../src/core/aztec/AztecDetectorResult.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}