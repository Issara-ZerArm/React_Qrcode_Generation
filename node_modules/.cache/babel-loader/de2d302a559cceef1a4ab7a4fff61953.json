{"ast":null,"code":"\"use strict\";\n/*\n * Copyright (C) 2010 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar AbstractUPCEANReader_1 = require(\"./AbstractUPCEANReader\");\n\nvar UPCEANExtension5Support_1 = require(\"./UPCEANExtension5Support\");\n\nvar UPCEANExtension2Support_1 = require(\"./UPCEANExtension2Support\");\n\nvar UPCEANExtensionSupport =\n/** @class */\nfunction () {\n  function UPCEANExtensionSupport() {}\n\n  UPCEANExtensionSupport.decodeRow = function (rowNumber, row, rowOffset) {\n    var extensionStartRange = AbstractUPCEANReader_1.default.findGuardPattern(row, rowOffset, false, this.EXTENSION_START_PATTERN, new Array(this.EXTENSION_START_PATTERN.length).fill(0));\n\n    try {\n      // return null;\n      var fiveSupport = new UPCEANExtension5Support_1.default();\n      return fiveSupport.decodeRow(rowNumber, row, extensionStartRange);\n    } catch (err) {\n      // return null;\n      var twoSupport = new UPCEANExtension2Support_1.default();\n      return twoSupport.decodeRow(rowNumber, row, extensionStartRange);\n    }\n  };\n\n  UPCEANExtensionSupport.EXTENSION_START_PATTERN = [1, 1, 2];\n  return UPCEANExtensionSupport;\n}();\n\nexports.default = UPCEANExtensionSupport;","map":null,"metadata":{},"sourceType":"script"}