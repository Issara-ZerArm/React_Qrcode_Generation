{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BrowserCodeReader_1 = require(\"./BrowserCodeReader\");\n\nvar QRCodeReader_1 = require(\"../core/qrcode/QRCodeReader\");\n/**\n * @deprecated Moving to @zxing/browser\n *\n * QR Code reader to use from browser.\n */\n\n\nvar BrowserQRCodeReader =\n/** @class */\nfunction (_super) {\n  __extends(BrowserQRCodeReader, _super);\n  /**\n   * Creates an instance of BrowserQRCodeReader.\n   * @param {number} [timeBetweenScansMillis=500] the time delay between subsequent decode tries\n   */\n\n\n  function BrowserQRCodeReader(timeBetweenScansMillis) {\n    if (timeBetweenScansMillis === void 0) {\n      timeBetweenScansMillis = 500;\n    }\n\n    return _super.call(this, new QRCodeReader_1.default(), timeBetweenScansMillis) || this;\n  }\n\n  return BrowserQRCodeReader;\n}(BrowserCodeReader_1.BrowserCodeReader);\n\nexports.BrowserQRCodeReader = BrowserQRCodeReader;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;;;;;;;AAKA;AAAA;AAAA;AAAyCA;AACrC;;;;;;AAIA,+BAAmBC,sBAAnB,EAAuD;AAApC;AAAAA;AAAoC;;WACnDC,kBAAM,IAAIC,sBAAJ,EAAN,EAA0BF,sBAA1B,KAAiD;AACpD;;AACL;AARA,EAAyCG,qCAAzC;;AAAaC","names":["__extends","timeBetweenScansMillis","_super","QRCodeReader_1","BrowserCodeReader_1","exports"],"sources":["../../src/browser/BrowserQRCodeReader.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}