{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar StringBuilder_1 = require(\"../../util/StringBuilder\");\n/**\n * @author satorux@google.com (Satoru Takabayashi) - creator\n * @author dswitkin@google.com (Daniel Switkin) - ported from C++\n */\n\n\nvar QRCode =\n/** @class */\nfunction () {\n  function QRCode() {\n    this.maskPattern = -1;\n  }\n\n  QRCode.prototype.getMode = function () {\n    return this.mode;\n  };\n\n  QRCode.prototype.getECLevel = function () {\n    return this.ecLevel;\n  };\n\n  QRCode.prototype.getVersion = function () {\n    return this.version;\n  };\n\n  QRCode.prototype.getMaskPattern = function () {\n    return this.maskPattern;\n  };\n\n  QRCode.prototype.getMatrix = function () {\n    return this.matrix;\n  };\n  /*@Override*/\n\n\n  QRCode.prototype.toString = function () {\n    var result = new StringBuilder_1.default(); // (200)\n\n    result.append('<<\\n');\n    result.append(' mode: ');\n    result.append(this.mode ? this.mode.toString() : 'null');\n    result.append('\\n ecLevel: ');\n    result.append(this.ecLevel ? this.ecLevel.toString() : 'null');\n    result.append('\\n version: ');\n    result.append(this.version ? this.version.toString() : 'null');\n    result.append('\\n maskPattern: ');\n    result.append(this.maskPattern.toString());\n\n    if (this.matrix) {\n      result.append('\\n matrix:\\n');\n      result.append(this.matrix.toString());\n    } else {\n      result.append('\\n matrix: null\\n');\n    }\n\n    result.append('>>\\n');\n    return result.toString();\n  };\n\n  QRCode.prototype.setMode = function (value) {\n    this.mode = value;\n  };\n\n  QRCode.prototype.setECLevel = function (value) {\n    this.ecLevel = value;\n  };\n\n  QRCode.prototype.setVersion = function (version) {\n    this.version = version;\n  };\n\n  QRCode.prototype.setMaskPattern = function (value\n  /*int*/\n  ) {\n    this.maskPattern = value;\n  };\n\n  QRCode.prototype.setMatrix = function (value) {\n    this.matrix = value;\n  }; // Check if \"mask_pattern\" is valid.\n\n\n  QRCode.isValidMaskPattern = function (maskPattern\n  /*int*/\n  ) {\n    return maskPattern >= 0 && maskPattern < QRCode.NUM_MASK_PATTERNS;\n  };\n\n  QRCode.NUM_MASK_PATTERNS = 8;\n  return QRCode;\n}();\n\nexports.default = QRCode;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;AAqBA;AAGA;;;;;;AAIA;AAAA;AAAA;AAUI;AACI,SAAKA,WAAL,GAAmB,CAAC,CAApB;AACH;;AAEMC,6BAAP;AACI,WAAO,KAAKC,IAAZ;AACH,GAFM;;AAIAD,gCAAP;AACI,WAAO,KAAKE,OAAZ;AACH,GAFM;;AAIAF,gCAAP;AACI,WAAO,KAAKG,OAAZ;AACH,GAFM;;AAIAH,oCAAP;AACI,WAAO,KAAKD,WAAZ;AACH,GAFM;;AAIAC,+BAAP;AACI,WAAO,KAAKI,MAAZ;AACH,GAFM;AAIP;;;AACOJ,8BAAP;AACI,QAAMK,MAAM,GAAG,IAAIC,uBAAJ,EAAf,CADJ,CACwC;;AACpCD,UAAM,CAACE,MAAP,CAAc,MAAd;AACAF,UAAM,CAACE,MAAP,CAAc,SAAd;AACAF,UAAM,CAACE,MAAP,CAAc,KAAKN,IAAL,GAAY,KAAKA,IAAL,CAAUO,QAAV,EAAZ,GAAmC,MAAjD;AACAH,UAAM,CAACE,MAAP,CAAc,cAAd;AACAF,UAAM,CAACE,MAAP,CAAc,KAAKL,OAAL,GAAe,KAAKA,OAAL,CAAaM,QAAb,EAAf,GAAyC,MAAvD;AACAH,UAAM,CAACE,MAAP,CAAc,cAAd;AACAF,UAAM,CAACE,MAAP,CAAc,KAAKJ,OAAL,GAAe,KAAKA,OAAL,CAAaK,QAAb,EAAf,GAAyC,MAAvD;AACAH,UAAM,CAACE,MAAP,CAAc,kBAAd;AACAF,UAAM,CAACE,MAAP,CAAc,KAAKR,WAAL,CAAiBS,QAAjB,EAAd;;AACA,QAAI,KAAKJ,MAAT,EAAiB;AACbC,YAAM,CAACE,MAAP,CAAc,cAAd;AACAF,YAAM,CAACE,MAAP,CAAc,KAAKH,MAAL,CAAYI,QAAZ,EAAd;AACH,KAHD,MAGO;AACHH,YAAM,CAACE,MAAP,CAAc,mBAAd;AACH;;AACDF,UAAM,CAACE,MAAP,CAAc,MAAd;AACA,WAAOF,MAAM,CAACG,QAAP,EAAP;AACH,GAnBM;;AAqBAR,6BAAP,UAAeS,KAAf,EAA0B;AACtB,SAAKR,IAAL,GAAYQ,KAAZ;AACH,GAFM;;AAIAT,gCAAP,UAAkBS,KAAlB,EAA6C;AACzC,SAAKP,OAAL,GAAeO,KAAf;AACH,GAFM;;AAIAT,gCAAP,UAAkBG,OAAlB,EAAkC;AAC9B,SAAKA,OAAL,GAAeA,OAAf;AACH,GAFM;;AAIAH,oCAAP,UAAsBS;AAAc;AAApC,IAA2C;AACvC,SAAKV,WAAL,GAAmBU,KAAnB;AACH,GAFM;;AAIAT,+BAAP,UAAiBS,KAAjB,EAAkC;AAC9B,SAAKL,MAAL,GAAcK,KAAd;AACH,GAFM,CAxEX,CA4EI;;;AACcT,8BAAd,UAAiCD;AAAoB;AAArD,IAA4D;AACxD,WAAOA,WAAW,IAAI,CAAf,IAAoBA,WAAW,GAAGC,MAAM,CAACU,iBAAhD;AACH,GAFa;;AA3EAV,6BAAoB,CAApB;AA+ElB;AAjFA;;kBAAqBA","names":["maskPattern","QRCode","mode","ecLevel","version","matrix","result","StringBuilder_1","append","toString","value","NUM_MASK_PATTERNS"],"sources":["../../../../src/core/qrcode/encoder/QRCode.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}