{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar UnsupportedOperationException_1 = require(\"../UnsupportedOperationException\");\n\nvar CharacterSetECI_1 = require(\"../common/CharacterSetECI\");\n/**\n * Responsible for en/decoding strings.\n */\n\n\nvar StringEncoding =\n/** @class */\nfunction () {\n  function StringEncoding() {}\n  /**\n   * Decodes some Uint8Array to a string format.\n   */\n\n\n  StringEncoding.decode = function (bytes, encoding) {\n    var encodingName = this.encodingName(encoding);\n\n    if (this.customDecoder) {\n      return this.customDecoder(bytes, encodingName);\n    } // Increases browser support.\n\n\n    if (typeof TextDecoder === 'undefined' || this.shouldDecodeOnFallback(encodingName)) {\n      return this.decodeFallback(bytes, encodingName);\n    }\n\n    return new TextDecoder(encodingName).decode(bytes);\n  };\n  /**\n   * Checks if the decoding method should use the fallback for decoding\n   * once Node TextDecoder doesn't support all encoding formats.\n   *\n   * @param encodingName\n   */\n\n\n  StringEncoding.shouldDecodeOnFallback = function (encodingName) {\n    return !StringEncoding.isBrowser() && encodingName === 'ISO-8859-1';\n  };\n  /**\n   * Encodes some string into a Uint8Array.\n   */\n\n\n  StringEncoding.encode = function (s, encoding) {\n    var encodingName = this.encodingName(encoding);\n\n    if (this.customEncoder) {\n      return this.customEncoder(s, encodingName);\n    } // Increases browser support.\n\n\n    if (typeof TextEncoder === 'undefined') {\n      return this.encodeFallback(s);\n    } // TextEncoder only encodes to UTF8 by default as specified by encoding.spec.whatwg.org\n\n\n    return new TextEncoder().encode(s);\n  };\n\n  StringEncoding.isBrowser = function () {\n    return typeof window !== 'undefined' && {}.toString.call(window) === '[object Window]';\n  };\n  /**\n   * Returns the string value from some encoding character set.\n   */\n\n\n  StringEncoding.encodingName = function (encoding) {\n    return typeof encoding === 'string' ? encoding : encoding.getName();\n  };\n  /**\n   * Returns character set from some encoding character set.\n   */\n\n\n  StringEncoding.encodingCharacterSet = function (encoding) {\n    if (encoding instanceof CharacterSetECI_1.default) {\n      return encoding;\n    }\n\n    return CharacterSetECI_1.default.getCharacterSetECIByName(encoding);\n  };\n  /**\n   * Runs a fallback for the native decoding funcion.\n   */\n\n\n  StringEncoding.decodeFallback = function (bytes, encoding) {\n    var characterSet = this.encodingCharacterSet(encoding);\n\n    if (StringEncoding.isDecodeFallbackSupported(characterSet)) {\n      var s = '';\n\n      for (var i = 0, length_1 = bytes.length; i < length_1; i++) {\n        var h = bytes[i].toString(16);\n\n        if (h.length < 2) {\n          h = '0' + h;\n        }\n\n        s += '%' + h;\n      }\n\n      return decodeURIComponent(s);\n    }\n\n    if (characterSet.equals(CharacterSetECI_1.default.UnicodeBigUnmarked)) {\n      return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n    }\n\n    throw new UnsupportedOperationException_1.default(\"Encoding \" + this.encodingName(encoding) + \" not supported by fallback.\");\n  };\n\n  StringEncoding.isDecodeFallbackSupported = function (characterSet) {\n    return characterSet.equals(CharacterSetECI_1.default.UTF8) || characterSet.equals(CharacterSetECI_1.default.ISO8859_1) || characterSet.equals(CharacterSetECI_1.default.ASCII);\n  };\n  /**\n   * Runs a fallback for the native encoding funcion.\n   *\n   * @see https://stackoverflow.com/a/17192845/4367683\n   */\n\n\n  StringEncoding.encodeFallback = function (s) {\n    var encodedURIstring = btoa(unescape(encodeURIComponent(s)));\n    var charList = encodedURIstring.split('');\n    var uintArray = [];\n\n    for (var i = 0; i < charList.length; i++) {\n      uintArray.push(charList[i].charCodeAt(0));\n    }\n\n    return new Uint8Array(uintArray);\n  };\n\n  return StringEncoding;\n}();\n\nexports.default = StringEncoding;","map":{"version":3,"mappings":"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","names":["StringEncoding","bytes","encoding","encodingName","customDecoder","TextDecoder","shouldDecodeOnFallback","decodeFallback","decode","isBrowser","s","customEncoder","TextEncoder","encodeFallback","encode","window","toString","call","getName","CharacterSetECI_1","getCharacterSetECIByName","characterSet","encodingCharacterSet","isDecodeFallbackSupported","i","length_1","length","h","decodeURIComponent","equals","UnicodeBigUnmarked","String","fromCharCode","apply","Uint16Array","buffer","UnsupportedOperationException_1","UTF8","ISO8859_1","ASCII","encodedURIstring","btoa","unescape","encodeURIComponent","charList","split","uintArray","push","charCodeAt","Uint8Array"],"sources":["../../../src/core/util/StringEncoding.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}