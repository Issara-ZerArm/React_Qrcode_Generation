{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2010 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ResultPoint_1 = require(\"../../ResultPoint\");\n\nvar AztecDetectorResult_1 = require(\"../AztecDetectorResult\");\n\nvar MathUtils_1 = require(\"../../common/detector/MathUtils\");\n\nvar WhiteRectangleDetector_1 = require(\"../../common/detector/WhiteRectangleDetector\");\n\nvar GenericGF_1 = require(\"../../common/reedsolomon/GenericGF\");\n\nvar ReedSolomonDecoder_1 = require(\"../../common/reedsolomon/ReedSolomonDecoder\");\n\nvar NotFoundException_1 = require(\"../../NotFoundException\");\n\nvar GridSamplerInstance_1 = require(\"../../common/GridSamplerInstance\");\n\nvar Integer_1 = require(\"../../util/Integer\");\n\nvar Point =\n/** @class */\nfunction () {\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype.toResultPoint = function () {\n    return new ResultPoint_1.default(this.getX(), this.getY());\n  };\n\n  Point.prototype.getX = function () {\n    return this.x;\n  };\n\n  Point.prototype.getY = function () {\n    return this.y;\n  };\n\n  return Point;\n}();\n\nexports.Point = Point;\n/**\n * Encapsulates logic that can detect an Aztec Code in an image, even if the Aztec Code\n * is rotated or skewed, or partially obscured.\n *\n * @author David Olivier\n * @author Frank Yellin\n */\n\nvar Detector =\n/** @class */\nfunction () {\n  function Detector(image) {\n    this.EXPECTED_CORNER_BITS = new Int32Array([0xee0, 0x1dc, 0x83b, 0x707]);\n    this.image = image;\n  }\n\n  Detector.prototype.detect = function () {\n    return this.detectMirror(false);\n  };\n  /**\n   * Detects an Aztec Code in an image.\n   *\n   * @param isMirror if true, image is a mirror-image of original\n   * @return {@link AztecDetectorResult} encapsulating results of detecting an Aztec Code\n   * @throws NotFoundException if no Aztec Code can be found\n   */\n\n\n  Detector.prototype.detectMirror = function (isMirror) {\n    // 1. Get the center of the aztec matrix\n    var pCenter = this.getMatrixCenter(); // 2. Get the center points of the four diagonal points just outside the bull's eye\n    //  [topRight, bottomRight, bottomLeft, topLeft]\n\n    var bullsEyeCorners = this.getBullsEyeCorners(pCenter);\n\n    if (isMirror) {\n      var temp = bullsEyeCorners[0];\n      bullsEyeCorners[0] = bullsEyeCorners[2];\n      bullsEyeCorners[2] = temp;\n    } // 3. Get the size of the matrix and other parameters from the bull's eye\n\n\n    this.extractParameters(bullsEyeCorners); // 4. Sample the grid\n\n    var bits = this.sampleGrid(this.image, bullsEyeCorners[this.shift % 4], bullsEyeCorners[(this.shift + 1) % 4], bullsEyeCorners[(this.shift + 2) % 4], bullsEyeCorners[(this.shift + 3) % 4]); // 5. Get the corners of the matrix.\n\n    var corners = this.getMatrixCornerPoints(bullsEyeCorners);\n    return new AztecDetectorResult_1.default(bits, corners, this.compact, this.nbDataBlocks, this.nbLayers);\n  };\n  /**\n   * Extracts the number of data layers and data blocks from the layer around the bull's eye.\n   *\n   * @param bullsEyeCorners the array of bull's eye corners\n   * @throws NotFoundException in case of too many errors or invalid parameters\n   */\n\n\n  Detector.prototype.extractParameters = function (bullsEyeCorners) {\n    if (!this.isValidPoint(bullsEyeCorners[0]) || !this.isValidPoint(bullsEyeCorners[1]) || !this.isValidPoint(bullsEyeCorners[2]) || !this.isValidPoint(bullsEyeCorners[3])) {\n      throw new NotFoundException_1.default();\n    }\n\n    var length = 2 * this.nbCenterLayers; // Get the bits around the bull's eye\n\n    var sides = new Int32Array([this.sampleLine(bullsEyeCorners[0], bullsEyeCorners[1], length), this.sampleLine(bullsEyeCorners[1], bullsEyeCorners[2], length), this.sampleLine(bullsEyeCorners[2], bullsEyeCorners[3], length), this.sampleLine(bullsEyeCorners[3], bullsEyeCorners[0], length) // Top\n    ]); // bullsEyeCorners[shift] is the corner of the bulls'eye that has three\n    // orientation marks.\n    // sides[shift] is the row/column that goes from the corner with three\n    // orientation marks to the corner with two.\n\n    this.shift = this.getRotation(sides, length); // Flatten the parameter bits into a single 28- or 40-bit long\n\n    var parameterData = 0;\n\n    for (var i = 0; i < 4; i++) {\n      var side = sides[(this.shift + i) % 4];\n\n      if (this.compact) {\n        // Each side of the form ..XXXXXXX. where Xs are parameter data\n        parameterData <<= 7;\n        parameterData += side >> 1 & 0x7F;\n      } else {\n        // Each side of the form ..XXXXX.XXXXX. where Xs are parameter data\n        parameterData <<= 10;\n        parameterData += (side >> 2 & 0x1f << 5) + (side >> 1 & 0x1F);\n      }\n    } // Corrects parameter data using RS.  Returns just the data portion\n    // without the error correction.\n\n\n    var correctedData = this.getCorrectedParameterData(parameterData, this.compact);\n\n    if (this.compact) {\n      // 8 bits:  2 bits layers and 6 bits data blocks\n      this.nbLayers = (correctedData >> 6) + 1;\n      this.nbDataBlocks = (correctedData & 0x3F) + 1;\n    } else {\n      // 16 bits:  5 bits layers and 11 bits data blocks\n      this.nbLayers = (correctedData >> 11) + 1;\n      this.nbDataBlocks = (correctedData & 0x7FF) + 1;\n    }\n  };\n\n  Detector.prototype.getRotation = function (sides, length) {\n    // In a normal pattern, we expect to See\n    //   **    .*             D       A\n    //   *      *\n    //\n    //   .      *\n    //   ..    ..             C       B\n    //\n    // Grab the 3 bits from each of the sides the form the locator pattern and concatenate\n    // into a 12-bit integer.  Start with the bit at A\n    var cornerBits = 0;\n    sides.forEach(function (side, idx, arr) {\n      // XX......X where X's are orientation marks\n      var t = (side >> length - 2 << 1) + (side & 1);\n      cornerBits = (cornerBits << 3) + t;\n    }); // for (var side in sides) {\n    //     // XX......X where X's are orientation marks\n    //     var t = ((side >> (length - 2)) << 1) + (side & 1);\n    //     cornerBits = (cornerBits << 3) + t;\n    // }\n    // Mov the bottom bit to the top, so that the three bits of the locator pattern at A are\n    // together.  cornerBits is now:\n    //  3 orientation bits at A || 3 orientation bits at B || ... || 3 orientation bits at D\n\n    cornerBits = ((cornerBits & 1) << 11) + (cornerBits >> 1); // The result shift indicates which element of BullsEyeCorners[] goes into the top-left\n    // corner. Since the four rotation values have a Hamming distance of 8, we\n    // can easily tolerate two errors.\n\n    for (var shift = 0; shift < 4; shift++) {\n      if (Integer_1.default.bitCount(cornerBits ^ this.EXPECTED_CORNER_BITS[shift]) <= 2) {\n        return shift;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  };\n  /**\n   * Corrects the parameter bits using Reed-Solomon algorithm.\n   *\n   * @param parameterData parameter bits\n   * @param compact true if this is a compact Aztec code\n   * @throws NotFoundException if the array contains too many errors\n   */\n\n\n  Detector.prototype.getCorrectedParameterData = function (parameterData, compact) {\n    var numCodewords;\n    var numDataCodewords;\n\n    if (compact) {\n      numCodewords = 7;\n      numDataCodewords = 2;\n    } else {\n      numCodewords = 10;\n      numDataCodewords = 4;\n    }\n\n    var numECCodewords = numCodewords - numDataCodewords;\n    var parameterWords = new Int32Array(numCodewords);\n\n    for (var i = numCodewords - 1; i >= 0; --i) {\n      parameterWords[i] = parameterData & 0xF;\n      parameterData >>= 4;\n    }\n\n    try {\n      var rsDecoder = new ReedSolomonDecoder_1.default(GenericGF_1.default.AZTEC_PARAM);\n      rsDecoder.decode(parameterWords, numECCodewords);\n    } catch (ignored) {\n      throw new NotFoundException_1.default();\n    } // Toss the error correction.  Just return the data as an integer\n\n\n    var result = 0;\n\n    for (var i = 0; i < numDataCodewords; i++) {\n      result = (result << 4) + parameterWords[i];\n    }\n\n    return result;\n  };\n  /**\n   * Finds the corners of a bull-eye centered on the passed point.\n   * This returns the centers of the diagonal points just outside the bull's eye\n   * Returns [topRight, bottomRight, bottomLeft, topLeft]\n   *\n   * @param pCenter Center point\n   * @return The corners of the bull-eye\n   * @throws NotFoundException If no valid bull-eye can be found\n   */\n\n\n  Detector.prototype.getBullsEyeCorners = function (pCenter) {\n    var pina = pCenter;\n    var pinb = pCenter;\n    var pinc = pCenter;\n    var pind = pCenter;\n    var color = true;\n\n    for (this.nbCenterLayers = 1; this.nbCenterLayers < 9; this.nbCenterLayers++) {\n      var pouta = this.getFirstDifferent(pina, color, 1, -1);\n      var poutb = this.getFirstDifferent(pinb, color, 1, 1);\n      var poutc = this.getFirstDifferent(pinc, color, -1, 1);\n      var poutd = this.getFirstDifferent(pind, color, -1, -1); // d      a\n      //\n      // c      b\n\n      if (this.nbCenterLayers > 2) {\n        var q = this.distancePoint(poutd, pouta) * this.nbCenterLayers / (this.distancePoint(pind, pina) * (this.nbCenterLayers + 2));\n\n        if (q < 0.75 || q > 1.25 || !this.isWhiteOrBlackRectangle(pouta, poutb, poutc, poutd)) {\n          break;\n        }\n      }\n\n      pina = pouta;\n      pinb = poutb;\n      pinc = poutc;\n      pind = poutd;\n      color = !color;\n    }\n\n    if (this.nbCenterLayers !== 5 && this.nbCenterLayers !== 7) {\n      throw new NotFoundException_1.default();\n    }\n\n    this.compact = this.nbCenterLayers === 5; // Expand the square by .5 pixel in each direction so that we're on the border\n    // between the white square and the black square\n\n    var pinax = new ResultPoint_1.default(pina.getX() + 0.5, pina.getY() - 0.5);\n    var pinbx = new ResultPoint_1.default(pinb.getX() + 0.5, pinb.getY() + 0.5);\n    var pincx = new ResultPoint_1.default(pinc.getX() - 0.5, pinc.getY() + 0.5);\n    var pindx = new ResultPoint_1.default(pind.getX() - 0.5, pind.getY() - 0.5); // Expand the square so that its corners are the centers of the points\n    // just outside the bull's eye.\n\n    return this.expandSquare([pinax, pinbx, pincx, pindx], 2 * this.nbCenterLayers - 3, 2 * this.nbCenterLayers);\n  };\n  /**\n   * Finds a candidate center point of an Aztec code from an image\n   *\n   * @return the center point\n   */\n\n\n  Detector.prototype.getMatrixCenter = function () {\n    var pointA;\n    var pointB;\n    var pointC;\n    var pointD; // Get a white rectangle that can be the border of the matrix in center bull's eye or\n\n    try {\n      var cornerPoints = new WhiteRectangleDetector_1.default(this.image).detect();\n      pointA = cornerPoints[0];\n      pointB = cornerPoints[1];\n      pointC = cornerPoints[2];\n      pointD = cornerPoints[3];\n    } catch (e) {\n      // This exception can be in case the initial rectangle is white\n      // In that case, surely in the bull's eye, we try to expand the rectangle.\n      var cx_1 = this.image.getWidth() / 2;\n      var cy_1 = this.image.getHeight() / 2;\n      pointA = this.getFirstDifferent(new Point(cx_1 + 7, cy_1 - 7), false, 1, -1).toResultPoint();\n      pointB = this.getFirstDifferent(new Point(cx_1 + 7, cy_1 + 7), false, 1, 1).toResultPoint();\n      pointC = this.getFirstDifferent(new Point(cx_1 - 7, cy_1 + 7), false, -1, 1).toResultPoint();\n      pointD = this.getFirstDifferent(new Point(cx_1 - 7, cy_1 - 7), false, -1, -1).toResultPoint();\n    } // Compute the center of the rectangle\n\n\n    var cx = MathUtils_1.default.round((pointA.getX() + pointD.getX() + pointB.getX() + pointC.getX()) / 4.0);\n    var cy = MathUtils_1.default.round((pointA.getY() + pointD.getY() + pointB.getY() + pointC.getY()) / 4.0); // Redetermine the white rectangle starting from previously computed center.\n    // This will ensure that we end up with a white rectangle in center bull's eye\n    // in order to compute a more accurate center.\n\n    try {\n      var cornerPoints = new WhiteRectangleDetector_1.default(this.image, 15, cx, cy).detect();\n      pointA = cornerPoints[0];\n      pointB = cornerPoints[1];\n      pointC = cornerPoints[2];\n      pointD = cornerPoints[3];\n    } catch (e) {\n      // This exception can be in case the initial rectangle is white\n      // In that case we try to expand the rectangle.\n      pointA = this.getFirstDifferent(new Point(cx + 7, cy - 7), false, 1, -1).toResultPoint();\n      pointB = this.getFirstDifferent(new Point(cx + 7, cy + 7), false, 1, 1).toResultPoint();\n      pointC = this.getFirstDifferent(new Point(cx - 7, cy + 7), false, -1, 1).toResultPoint();\n      pointD = this.getFirstDifferent(new Point(cx - 7, cy - 7), false, -1, -1).toResultPoint();\n    } // Recompute the center of the rectangle\n\n\n    cx = MathUtils_1.default.round((pointA.getX() + pointD.getX() + pointB.getX() + pointC.getX()) / 4.0);\n    cy = MathUtils_1.default.round((pointA.getY() + pointD.getY() + pointB.getY() + pointC.getY()) / 4.0);\n    return new Point(cx, cy);\n  };\n  /**\n   * Gets the Aztec code corners from the bull's eye corners and the parameters.\n   *\n   * @param bullsEyeCorners the array of bull's eye corners\n   * @return the array of aztec code corners\n   */\n\n\n  Detector.prototype.getMatrixCornerPoints = function (bullsEyeCorners) {\n    return this.expandSquare(bullsEyeCorners, 2 * this.nbCenterLayers, this.getDimension());\n  };\n  /**\n   * Creates a BitMatrix by sampling the provided image.\n   * topLeft, topRight, bottomRight, and bottomLeft are the centers of the squares on the\n   * diagonal just outside the bull's eye.\n   */\n\n\n  Detector.prototype.sampleGrid = function (image, topLeft, topRight, bottomRight, bottomLeft) {\n    var sampler = GridSamplerInstance_1.default.getInstance();\n    var dimension = this.getDimension();\n    var low = dimension / 2 - this.nbCenterLayers;\n    var high = dimension / 2 + this.nbCenterLayers;\n    return sampler.sampleGrid(image, dimension, dimension, low, low, // topleft\n    high, low, // topright\n    high, high, // bottomright\n    low, high, // bottomleft\n    topLeft.getX(), topLeft.getY(), topRight.getX(), topRight.getY(), bottomRight.getX(), bottomRight.getY(), bottomLeft.getX(), bottomLeft.getY());\n  };\n  /**\n   * Samples a line.\n   *\n   * @param p1   start point (inclusive)\n   * @param p2   end point (exclusive)\n   * @param size number of bits\n   * @return the array of bits as an int (first bit is high-order bit of result)\n   */\n\n\n  Detector.prototype.sampleLine = function (p1, p2, size) {\n    var result = 0;\n    var d = this.distanceResultPoint(p1, p2);\n    var moduleSize = d / size;\n    var px = p1.getX();\n    var py = p1.getY();\n    var dx = moduleSize * (p2.getX() - p1.getX()) / d;\n    var dy = moduleSize * (p2.getY() - p1.getY()) / d;\n\n    for (var i = 0; i < size; i++) {\n      if (this.image.get(MathUtils_1.default.round(px + i * dx), MathUtils_1.default.round(py + i * dy))) {\n        result |= 1 << size - i - 1;\n      }\n    }\n\n    return result;\n  };\n  /**\n   * @return true if the border of the rectangle passed in parameter is compound of white points only\n   *         or black points only\n   */\n\n\n  Detector.prototype.isWhiteOrBlackRectangle = function (p1, p2, p3, p4) {\n    var corr = 3;\n    p1 = new Point(p1.getX() - corr, p1.getY() + corr);\n    p2 = new Point(p2.getX() - corr, p2.getY() - corr);\n    p3 = new Point(p3.getX() + corr, p3.getY() - corr);\n    p4 = new Point(p4.getX() + corr, p4.getY() + corr);\n    var cInit = this.getColor(p4, p1);\n\n    if (cInit === 0) {\n      return false;\n    }\n\n    var c = this.getColor(p1, p2);\n\n    if (c !== cInit) {\n      return false;\n    }\n\n    c = this.getColor(p2, p3);\n\n    if (c !== cInit) {\n      return false;\n    }\n\n    c = this.getColor(p3, p4);\n    return c === cInit;\n  };\n  /**\n   * Gets the color of a segment\n   *\n   * @return 1 if segment more than 90% black, -1 if segment is more than 90% white, 0 else\n   */\n\n\n  Detector.prototype.getColor = function (p1, p2) {\n    var d = this.distancePoint(p1, p2);\n    var dx = (p2.getX() - p1.getX()) / d;\n    var dy = (p2.getY() - p1.getY()) / d;\n    var error = 0;\n    var px = p1.getX();\n    var py = p1.getY();\n    var colorModel = this.image.get(p1.getX(), p1.getY());\n    var iMax = Math.ceil(d);\n\n    for (var i = 0; i < iMax; i++) {\n      px += dx;\n      py += dy;\n\n      if (this.image.get(MathUtils_1.default.round(px), MathUtils_1.default.round(py)) !== colorModel) {\n        error++;\n      }\n    }\n\n    var errRatio = error / d;\n\n    if (errRatio > 0.1 && errRatio < 0.9) {\n      return 0;\n    }\n\n    return errRatio <= 0.1 === colorModel ? 1 : -1;\n  };\n  /**\n   * Gets the coordinate of the first point with a different color in the given direction\n   */\n\n\n  Detector.prototype.getFirstDifferent = function (init, color, dx, dy) {\n    var x = init.getX() + dx;\n    var y = init.getY() + dy;\n\n    while (this.isValid(x, y) && this.image.get(x, y) === color) {\n      x += dx;\n      y += dy;\n    }\n\n    x -= dx;\n    y -= dy;\n\n    while (this.isValid(x, y) && this.image.get(x, y) === color) {\n      x += dx;\n    }\n\n    x -= dx;\n\n    while (this.isValid(x, y) && this.image.get(x, y) === color) {\n      y += dy;\n    }\n\n    y -= dy;\n    return new Point(x, y);\n  };\n  /**\n   * Expand the square represented by the corner points by pushing out equally in all directions\n   *\n   * @param cornerPoints the corners of the square, which has the bull's eye at its center\n   * @param oldSide the original length of the side of the square in the target bit matrix\n   * @param newSide the new length of the size of the square in the target bit matrix\n   * @return the corners of the expanded square\n   */\n\n\n  Detector.prototype.expandSquare = function (cornerPoints, oldSide, newSide) {\n    var ratio = newSide / (2.0 * oldSide);\n    var dx = cornerPoints[0].getX() - cornerPoints[2].getX();\n    var dy = cornerPoints[0].getY() - cornerPoints[2].getY();\n    var centerx = (cornerPoints[0].getX() + cornerPoints[2].getX()) / 2.0;\n    var centery = (cornerPoints[0].getY() + cornerPoints[2].getY()) / 2.0;\n    var result0 = new ResultPoint_1.default(centerx + ratio * dx, centery + ratio * dy);\n    var result2 = new ResultPoint_1.default(centerx - ratio * dx, centery - ratio * dy);\n    dx = cornerPoints[1].getX() - cornerPoints[3].getX();\n    dy = cornerPoints[1].getY() - cornerPoints[3].getY();\n    centerx = (cornerPoints[1].getX() + cornerPoints[3].getX()) / 2.0;\n    centery = (cornerPoints[1].getY() + cornerPoints[3].getY()) / 2.0;\n    var result1 = new ResultPoint_1.default(centerx + ratio * dx, centery + ratio * dy);\n    var result3 = new ResultPoint_1.default(centerx - ratio * dx, centery - ratio * dy);\n    var results = [result0, result1, result2, result3];\n    return results;\n  };\n\n  Detector.prototype.isValid = function (x, y) {\n    return x >= 0 && x < this.image.getWidth() && y > 0 && y < this.image.getHeight();\n  };\n\n  Detector.prototype.isValidPoint = function (point) {\n    var x = MathUtils_1.default.round(point.getX());\n    var y = MathUtils_1.default.round(point.getY());\n    return this.isValid(x, y);\n  };\n\n  Detector.prototype.distancePoint = function (a, b) {\n    return MathUtils_1.default.distance(a.getX(), a.getY(), b.getX(), b.getY());\n  };\n\n  Detector.prototype.distanceResultPoint = function (a, b) {\n    return MathUtils_1.default.distance(a.getX(), a.getY(), b.getX(), b.getY());\n  };\n\n  Detector.prototype.getDimension = function () {\n    if (this.compact) {\n      return 4 * this.nbLayers + 11;\n    }\n\n    if (this.nbLayers <= 4) {\n      return 4 * this.nbLayers + 15;\n    }\n\n    return 4 * this.nbLayers + 2 * (Integer_1.default.truncDivision(this.nbLayers - 4, 8) + 1) + 15;\n  };\n\n  return Detector;\n}();\n\nexports.default = Detector;","map":{"version":3,"mappings":"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","names":["x","y","Point","ResultPoint_1","getX","getY","exports","image","Int32Array","Detector","detectMirror","isMirror","pCenter","getMatrixCenter","bullsEyeCorners","getBullsEyeCorners","temp","extractParameters","bits","sampleGrid","shift","corners","getMatrixCornerPoints","AztecDetectorResult_1","compact","nbDataBlocks","nbLayers","isValidPoint","NotFoundException_1","length","nbCenterLayers","sides","sampleLine","getRotation","parameterData","i","side","correctedData","getCorrectedParameterData","cornerBits","forEach","idx","arr","t","Integer_1","bitCount","EXPECTED_CORNER_BITS","numCodewords","numDataCodewords","numECCodewords","parameterWords","rsDecoder","ReedSolomonDecoder_1","GenericGF_1","AZTEC_PARAM","decode","ignored","result","pina","pinb","pinc","pind","color","pouta","getFirstDifferent","poutb","poutc","poutd","q","distancePoint","isWhiteOrBlackRectangle","pinax","pinbx","pincx","pindx","expandSquare","pointA","pointB","pointC","pointD","cornerPoints","WhiteRectangleDetector_1","detect","e","cx_1","getWidth","cy_1","getHeight","toResultPoint","cx","MathUtils_1","round","cy","getDimension","topLeft","topRight","bottomRight","bottomLeft","sampler","GridSamplerInstance_1","getInstance","dimension","low","high","p1","p2","size","d","distanceResultPoint","moduleSize","px","py","dx","dy","get","p3","p4","corr","cInit","getColor","c","error","colorModel","iMax","Math","ceil","errRatio","init","isValid","oldSide","newSide","ratio","centerx","centery","result0","result2","result1","result3","results","point","a","b","distance","truncDivision"],"sources":["../../../../src/core/aztec/detector/Detector.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}