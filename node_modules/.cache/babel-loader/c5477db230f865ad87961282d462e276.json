{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n\nvar DecodeHintType_1 = require(\"../DecodeHintType\");\n\nvar Result_1 = require(\"../Result\");\n\nvar ResultMetadataType_1 = require(\"../ResultMetadataType\");\n\nvar ResultPoint_1 = require(\"../ResultPoint\");\n\nvar UPCEANExtensionSupport_1 = require(\"./UPCEANExtensionSupport\");\n\nvar AbstractUPCEANReader_1 = require(\"./AbstractUPCEANReader\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n\nvar FormatException_1 = require(\"../FormatException\");\n\nvar ChecksumException_1 = require(\"../ChecksumException\");\n/**\n * <p>Encapsulates functionality and implementation that is common to UPC and EAN families\n * of one-dimensional barcodes.</p>\n *\n * @author dswitkin@google.com (Daniel Switkin)\n * @author Sean Owen\n * @author alasdair@google.com (Alasdair Mackintosh)\n */\n\n\nvar UPCEANReader =\n/** @class */\nfunction (_super) {\n  __extends(UPCEANReader, _super);\n\n  function UPCEANReader() {\n    var _this = _super.call(this) || this;\n\n    _this.decodeRowStringBuffer = '';\n    UPCEANReader.L_AND_G_PATTERNS = UPCEANReader.L_PATTERNS.map(function (arr) {\n      return arr.slice();\n    });\n\n    for (var i = 10; i < 20; i++) {\n      var widths = UPCEANReader.L_PATTERNS[i - 10];\n      var reversedWidths = new Array(widths.length);\n\n      for (var j = 0; j < widths.length; j++) {\n        reversedWidths[j] = widths[widths.length - j - 1];\n      }\n\n      UPCEANReader.L_AND_G_PATTERNS[i] = reversedWidths;\n    }\n\n    return _this;\n  }\n\n  UPCEANReader.prototype.decodeRow = function (rowNumber, row, hints) {\n    var startGuardRange = UPCEANReader.findStartGuardPattern(row);\n    var resultPointCallback = hints == null ? null : hints.get(DecodeHintType_1.default.NEED_RESULT_POINT_CALLBACK);\n\n    if (resultPointCallback != null) {\n      var resultPoint_1 = new ResultPoint_1.default((startGuardRange[0] + startGuardRange[1]) / 2.0, rowNumber);\n      resultPointCallback.foundPossibleResultPoint(resultPoint_1);\n    }\n\n    var budello = this.decodeMiddle(row, startGuardRange, this.decodeRowStringBuffer);\n    var endStart = budello.rowOffset;\n    var result = budello.resultString;\n\n    if (resultPointCallback != null) {\n      var resultPoint_2 = new ResultPoint_1.default(endStart, rowNumber);\n      resultPointCallback.foundPossibleResultPoint(resultPoint_2);\n    }\n\n    var endRange = UPCEANReader.decodeEnd(row, endStart);\n\n    if (resultPointCallback != null) {\n      var resultPoint_3 = new ResultPoint_1.default((endRange[0] + endRange[1]) / 2.0, rowNumber);\n      resultPointCallback.foundPossibleResultPoint(resultPoint_3);\n    } // Make sure there is a quiet zone at least as big as the end pattern after the barcode. The\n    // spec might want more whitespace, but in practice this is the maximum we can count on.\n\n\n    var end = endRange[1];\n    var quietEnd = end + (end - endRange[0]);\n\n    if (quietEnd >= row.getSize() || !row.isRange(end, quietEnd, false)) {\n      throw new NotFoundException_1.default();\n    }\n\n    var resultString = result.toString(); // UPC/EAN should never be less than 8 chars anyway\n\n    if (resultString.length < 8) {\n      throw new FormatException_1.default();\n    }\n\n    if (!UPCEANReader.checkChecksum(resultString)) {\n      throw new ChecksumException_1.default();\n    }\n\n    var left = (startGuardRange[1] + startGuardRange[0]) / 2.0;\n    var right = (endRange[1] + endRange[0]) / 2.0;\n    var format = this.getBarcodeFormat();\n    var resultPoint = [new ResultPoint_1.default(left, rowNumber), new ResultPoint_1.default(right, rowNumber)];\n    var decodeResult = new Result_1.default(resultString, null, 0, resultPoint, format, new Date().getTime());\n    var extensionLength = 0;\n\n    try {\n      var extensionResult = UPCEANExtensionSupport_1.default.decodeRow(rowNumber, row, endRange[1]);\n      decodeResult.putMetadata(ResultMetadataType_1.default.UPC_EAN_EXTENSION, extensionResult.getText());\n      decodeResult.putAllMetadata(extensionResult.getResultMetadata());\n      decodeResult.addResultPoints(extensionResult.getResultPoints());\n      extensionLength = extensionResult.getText().length;\n    } catch (err) {}\n\n    var allowedExtensions = hints == null ? null : hints.get(DecodeHintType_1.default.ALLOWED_EAN_EXTENSIONS);\n\n    if (allowedExtensions != null) {\n      var valid = false;\n\n      for (var length_1 in allowedExtensions) {\n        if (extensionLength.toString() === length_1) {\n          // check me\n          valid = true;\n          break;\n        }\n      }\n\n      if (!valid) {\n        throw new NotFoundException_1.default();\n      }\n    }\n\n    if (format === BarcodeFormat_1.default.EAN_13 || format === BarcodeFormat_1.default.UPC_A) {// let countryID = eanManSupport.lookupContryIdentifier(resultString); todo\n      // if (countryID != null) {\n      //     decodeResult.putMetadata(ResultMetadataType.POSSIBLE_COUNTRY, countryID);\n      // }\n    }\n\n    return decodeResult;\n  };\n\n  UPCEANReader.checkChecksum = function (s) {\n    return UPCEANReader.checkStandardUPCEANChecksum(s);\n  };\n\n  UPCEANReader.checkStandardUPCEANChecksum = function (s) {\n    var length = s.length;\n    if (length === 0) return false;\n    var check = parseInt(s.charAt(length - 1), 10);\n    return UPCEANReader.getStandardUPCEANChecksum(s.substring(0, length - 1)) === check;\n  };\n\n  UPCEANReader.getStandardUPCEANChecksum = function (s) {\n    var length = s.length;\n    var sum = 0;\n\n    for (var i = length - 1; i >= 0; i -= 2) {\n      var digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n\n      if (digit < 0 || digit > 9) {\n        throw new FormatException_1.default();\n      }\n\n      sum += digit;\n    }\n\n    sum *= 3;\n\n    for (var i = length - 2; i >= 0; i -= 2) {\n      var digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n\n      if (digit < 0 || digit > 9) {\n        throw new FormatException_1.default();\n      }\n\n      sum += digit;\n    }\n\n    return (1000 - sum) % 10;\n  };\n\n  UPCEANReader.decodeEnd = function (row, endStart) {\n    return UPCEANReader.findGuardPattern(row, endStart, false, UPCEANReader.START_END_PATTERN, new Array(UPCEANReader.START_END_PATTERN.length).fill(0));\n  };\n\n  return UPCEANReader;\n}(AbstractUPCEANReader_1.default);\n\nexports.default = UPCEANReader;","map":{"version":3,"mappings":"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","names":["__extends","_super","_this","decodeRowStringBuffer","UPCEANReader","L_AND_G_PATTERNS","L_PATTERNS","map","arr","slice","i","widths","reversedWidths","Array","length","j","rowNumber","row","hints","startGuardRange","findStartGuardPattern","resultPointCallback","get","DecodeHintType_1","NEED_RESULT_POINT_CALLBACK","resultPoint_1","ResultPoint_1","foundPossibleResultPoint","budello","decodeMiddle","endStart","rowOffset","result","resultString","resultPoint_2","endRange","decodeEnd","resultPoint_3","end","quietEnd","getSize","isRange","NotFoundException_1","toString","FormatException_1","checkChecksum","ChecksumException_1","left","right","format","getBarcodeFormat","resultPoint","decodeResult","Result_1","Date","getTime","extensionLength","extensionResult","UPCEANExtensionSupport_1","decodeRow","putMetadata","ResultMetadataType_1","UPC_EAN_EXTENSION","getText","putAllMetadata","getResultMetadata","addResultPoints","getResultPoints","err","allowedExtensions","ALLOWED_EAN_EXTENSIONS","valid","length_1","BarcodeFormat_1","EAN_13","UPC_A","s","checkStandardUPCEANChecksum","check","parseInt","charAt","getStandardUPCEANChecksum","substring","sum","digit","charCodeAt","findGuardPattern","START_END_PATTERN","fill","AbstractUPCEANReader_1"],"sources":["../../../src/core/oned/UPCEANReader.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}