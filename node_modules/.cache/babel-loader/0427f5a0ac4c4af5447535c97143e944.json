{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * <p>Encapsulates the parameters for one error-correction block in one symbol version.\n * This includes the number of data codewords, and the number of times a block with these\n * parameters is used consecutively in the QR code version's format.</p>\n */\n\nvar ECB =\n/** @class */\nfunction () {\n  function ECB(count\n  /*int*/\n  , dataCodewords\n  /*int*/\n  ) {\n    this.count = count;\n    this.dataCodewords = dataCodewords;\n  }\n\n  ECB.prototype.getCount = function () {\n    return this.count;\n  };\n\n  ECB.prototype.getDataCodewords = function () {\n    return this.dataCodewords;\n  };\n\n  return ECB;\n}();\n\nexports.default = ECB;","map":{"version":3,"mappings":";;;;;AAAA;;;;;;AAKA;AAAA;AAAA;AAII,eAAmBA;AAAc;AAAjC,IAA0CC;AAAsB;AAAhE,IAAuE;AACnE,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACH;;AAEMC,2BAAP;AACI,WAAO,KAAKF,KAAZ;AACH,GAFM;;AAIAE,mCAAP;AACI,WAAO,KAAKD,aAAZ;AACH,GAFM;;AAGX;AAAC,CAhBD","names":["count","dataCodewords","ECB"],"sources":["../../../../src/core/qrcode/decoder/ECB.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}