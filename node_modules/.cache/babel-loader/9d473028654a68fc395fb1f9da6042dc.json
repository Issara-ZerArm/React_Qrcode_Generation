{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar OneDReader_1 = require(\"./OneDReader\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n\nvar FormatException_1 = require(\"../FormatException\");\n/**\n * <p>Encapsulates functionality and implementation that is common to UPC and EAN families\n * of one-dimensional barcodes.</p>\n *\n * @author dswitkin@google.com (Daniel Switkin)\n * @author Sean Owen\n * @author alasdair@google.com (Alasdair Mackintosh)\n */\n\n\nvar AbstractUPCEANReader =\n/** @class */\nfunction (_super) {\n  __extends(AbstractUPCEANReader, _super);\n\n  function AbstractUPCEANReader() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.decodeRowStringBuffer = '';\n    return _this;\n  } // private final UPCEANExtensionSupport extensionReader;\n  // private final EANManufacturerOrgSupport eanManSupport;\n\n  /*\n  protected UPCEANReader() {\n      decodeRowStringBuffer = new StringBuilder(20);\n      extensionReader = new UPCEANExtensionSupport();\n      eanManSupport = new EANManufacturerOrgSupport();\n  }\n  */\n\n\n  AbstractUPCEANReader.findStartGuardPattern = function (row) {\n    var foundStart = false;\n    var startRange = null;\n    var nextStart = 0;\n    var counters = [0, 0, 0];\n\n    while (!foundStart) {\n      counters = [0, 0, 0];\n      startRange = AbstractUPCEANReader.findGuardPattern(row, nextStart, false, this.START_END_PATTERN, counters);\n      var start = startRange[0];\n      nextStart = startRange[1];\n      var quietStart = start - (nextStart - start);\n\n      if (quietStart >= 0) {\n        foundStart = row.isRange(quietStart, start, false);\n      }\n    }\n\n    return startRange;\n  };\n\n  AbstractUPCEANReader.checkChecksum = function (s) {\n    return AbstractUPCEANReader.checkStandardUPCEANChecksum(s);\n  };\n\n  AbstractUPCEANReader.checkStandardUPCEANChecksum = function (s) {\n    var length = s.length;\n    if (length === 0) return false;\n    var check = parseInt(s.charAt(length - 1), 10);\n    return AbstractUPCEANReader.getStandardUPCEANChecksum(s.substring(0, length - 1)) === check;\n  };\n\n  AbstractUPCEANReader.getStandardUPCEANChecksum = function (s) {\n    var length = s.length;\n    var sum = 0;\n\n    for (var i = length - 1; i >= 0; i -= 2) {\n      var digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n\n      if (digit < 0 || digit > 9) {\n        throw new FormatException_1.default();\n      }\n\n      sum += digit;\n    }\n\n    sum *= 3;\n\n    for (var i = length - 2; i >= 0; i -= 2) {\n      var digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n\n      if (digit < 0 || digit > 9) {\n        throw new FormatException_1.default();\n      }\n\n      sum += digit;\n    }\n\n    return (1000 - sum) % 10;\n  };\n\n  AbstractUPCEANReader.decodeEnd = function (row, endStart) {\n    return AbstractUPCEANReader.findGuardPattern(row, endStart, false, AbstractUPCEANReader.START_END_PATTERN, new Array(AbstractUPCEANReader.START_END_PATTERN.length).fill(0));\n  };\n\n  AbstractUPCEANReader.findGuardPattern = function (row, rowOffset, whiteFirst, pattern, counters) {\n    var width = row.getSize();\n    rowOffset = whiteFirst ? row.getNextUnset(rowOffset) : row.getNextSet(rowOffset);\n    var counterPosition = 0;\n    var patternStart = rowOffset;\n    var patternLength = pattern.length;\n    var isWhite = whiteFirst;\n\n    for (var x = rowOffset; x < width; x++) {\n      if (row.get(x) !== isWhite) {\n        counters[counterPosition]++;\n      } else {\n        if (counterPosition === patternLength - 1) {\n          if (OneDReader_1.default.patternMatchVariance(counters, pattern, AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE) < AbstractUPCEANReader.MAX_AVG_VARIANCE) {\n            return [patternStart, x];\n          }\n\n          patternStart += counters[0] + counters[1];\n          var slice = counters.slice(2, counters.length);\n\n          for (var i = 0; i < counterPosition - 1; i++) {\n            counters[i] = slice[i];\n          }\n\n          counters[counterPosition - 1] = 0;\n          counters[counterPosition] = 0;\n          counterPosition--;\n        } else {\n          counterPosition++;\n        }\n\n        counters[counterPosition] = 1;\n        isWhite = !isWhite;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  };\n\n  AbstractUPCEANReader.decodeDigit = function (row, counters, rowOffset, patterns) {\n    this.recordPattern(row, rowOffset, counters);\n    var bestVariance = this.MAX_AVG_VARIANCE;\n    var bestMatch = -1;\n    var max = patterns.length;\n\n    for (var i = 0; i < max; i++) {\n      var pattern = patterns[i];\n      var variance = OneDReader_1.default.patternMatchVariance(counters, pattern, AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE);\n\n      if (variance < bestVariance) {\n        bestVariance = variance;\n        bestMatch = i;\n      }\n    }\n\n    if (bestMatch >= 0) {\n      return bestMatch;\n    } else {\n      throw new NotFoundException_1.default();\n    }\n  }; // These two values are critical for determining how permissive the decoding will be.\n  // We've arrived at these values through a lot of trial and error. Setting them any higher\n  // lets false positives creep in quickly.\n\n\n  AbstractUPCEANReader.MAX_AVG_VARIANCE = 0.48;\n  AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE = 0.7;\n  /**\n   * Start/end guard pattern.\n   */\n\n  AbstractUPCEANReader.START_END_PATTERN = [1, 1, 1];\n  /**\n   * Pattern marking the middle of a UPC/EAN pattern, separating the two halves.\n   */\n\n  AbstractUPCEANReader.MIDDLE_PATTERN = [1, 1, 1, 1, 1];\n  /**\n   * end guard pattern.\n   */\n\n  AbstractUPCEANReader.END_PATTERN = [1, 1, 1, 1, 1, 1];\n  /**\n   * \"Odd\", or \"L\" patterns used to encode UPC/EAN digits.\n   */\n\n  AbstractUPCEANReader.L_PATTERNS = [[3, 2, 1, 1], [2, 2, 2, 1], [2, 1, 2, 2], [1, 4, 1, 1], [1, 1, 3, 2], [1, 2, 3, 1], [1, 1, 1, 4], [1, 3, 1, 2], [1, 2, 1, 3], [3, 1, 1, 2]];\n  return AbstractUPCEANReader;\n}(OneDReader_1.default);\n\nexports.default = AbstractUPCEANReader;","map":{"version":3,"mappings":"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","names":["__extends","_this","AbstractUPCEANReader","row","foundStart","startRange","nextStart","counters","findGuardPattern","START_END_PATTERN","start","quietStart","isRange","s","checkStandardUPCEANChecksum","length","check","parseInt","charAt","getStandardUPCEANChecksum","substring","sum","i","digit","charCodeAt","FormatException_1","endStart","Array","fill","rowOffset","whiteFirst","pattern","width","getSize","getNextUnset","getNextSet","counterPosition","patternStart","patternLength","isWhite","x","get","OneDReader_1","patternMatchVariance","MAX_INDIVIDUAL_VARIANCE","MAX_AVG_VARIANCE","slice","NotFoundException_1","patterns","recordPattern","bestVariance","bestMatch","max","variance"],"sources":["../../../src/core/oned/AbstractUPCEANReader.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}