{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BarcodeFormat_1 = require(\"../../../BarcodeFormat\");\n\nvar NotFoundException_1 = require(\"../../../NotFoundException\");\n\nvar Result_1 = require(\"../../../Result\");\n\nvar MathUtils_1 = require(\"../../../common/detector/MathUtils\");\n\nvar AbstractRSSReader_1 = require(\"../../rss/AbstractRSSReader\");\n\nvar DataCharacter_1 = require(\"../../rss/DataCharacter\");\n\nvar FinderPattern_1 = require(\"../../rss/FinderPattern\");\n\nvar RSSUtils_1 = require(\"../../rss/RSSUtils\");\n\nvar AbstractExpandedDecoderComplement_1 = require(\"./decoders/AbstractExpandedDecoderComplement\");\n\nvar ExpandedPair_1 = require(\"./ExpandedPair\");\n\nvar ExpandedRow_1 = require(\"./ExpandedRow\");\n\nvar BitArrayBuilder_1 = require(\"./BitArrayBuilder\");\n\nvar System_1 = require(\"../../../util/System\"); // import java.util.ArrayList;\n// import java.util.Iterator;\n// import java.util.List;\n// import java.util.Map;\n// import java.util.Collections;\n\n\nvar RSSExpandedReader =\n/** @class */\nfunction (_super) {\n  __extends(RSSExpandedReader, _super);\n\n  function RSSExpandedReader() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.pairs = new Array(RSSExpandedReader.MAX_PAIRS);\n    _this.rows = new Array();\n    _this.startEnd = [2];\n    return _this;\n  }\n\n  RSSExpandedReader.prototype.decodeRow = function (rowNumber, row, hints) {\n    // Rows can start with even pattern in case in prev rows there where odd number of patters.\n    // So lets try twice\n    //this.pairs.clear();\n    this.pairs.length = 0;\n    this.startFromEven = false;\n\n    try {\n      return RSSExpandedReader.constructResult(this.decodeRow2pairs(rowNumber, row));\n    } catch (e) {\n      // OK\n      console.log(e);\n    }\n\n    this.pairs.length = 0;\n    this.startFromEven = true;\n    return RSSExpandedReader.constructResult(this.decodeRow2pairs(rowNumber, row));\n  };\n\n  RSSExpandedReader.prototype.reset = function () {\n    this.pairs.length = 0;\n    this.rows.length = 0;\n  }; // Not private for testing\n\n\n  RSSExpandedReader.prototype.decodeRow2pairs = function (rowNumber, row) {\n    var done = false;\n\n    while (!done) {\n      try {\n        this.pairs.push(this.retrieveNextPair(row, this.pairs, rowNumber));\n      } catch (NotFoundException) {\n        if (!this.pairs.length) {\n          throw new NotFoundException();\n        } // exit this loop when retrieveNextPair() fails and throws\n\n\n        done = true;\n      }\n    } // TODO: verify sequence of finder patterns as in checkPairSequence()\n\n\n    if (this.checkChecksum()) {\n      return this.pairs;\n    }\n\n    var tryStackedDecode;\n\n    if (this.rows.length) {\n      tryStackedDecode = true;\n    } else {\n      tryStackedDecode = false;\n    } //let tryStackedDecode = !this.rows.isEmpty();\n\n\n    this.storeRow(rowNumber, false); // TODO: deal with reversed rows\n\n    if (tryStackedDecode) {\n      // When the image is 180-rotated, then rows are sorted in wrong direction.\n      // Try twice with both the directions.\n      var ps = this.checkRowsBoolean(false);\n\n      if (ps != null) {\n        return ps;\n      }\n\n      ps = this.checkRowsBoolean(true);\n\n      if (ps != null) {\n        return ps;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  }; //Need to Verify\n\n\n  RSSExpandedReader.prototype.checkRowsBoolean = function (reverse) {\n    // Limit number of rows we are checking\n    // We use recursive algorithm with pure complexity and don't want it to take forever\n    // Stacked barcode can have up to 11 rows, so 25 seems reasonable enough\n    if (this.rows.length > 25) {\n      this.rows.length = 0; // We will never have a chance to get result, so clear it\n\n      return null;\n    }\n\n    this.pairs.length = 0;\n\n    if (reverse) {\n      this.rows = this.rows.reverse(); //Collections.reverse(this.rows);\n    }\n\n    var ps = null;\n\n    try {\n      ps = this.checkRows(new Array(), 0);\n    } catch (e) {\n      // OK\n      console.log(e);\n    }\n\n    if (reverse) {\n      this.rows = this.rows.reverse(); //Collections.reverse(this.rows);\n    }\n\n    return ps;\n  }; // Try to construct a valid rows sequence\n  // Recursion is used to implement backtracking\n\n\n  RSSExpandedReader.prototype.checkRows = function (collectedRows, currentRow) {\n    var e_1, _a;\n\n    for (var i = currentRow; i < this.rows.length; i++) {\n      var row = this.rows[i];\n      this.pairs.length = 0;\n\n      try {\n        for (var collectedRows_1 = __values(collectedRows), collectedRows_1_1 = collectedRows_1.next(); !collectedRows_1_1.done; collectedRows_1_1 = collectedRows_1.next()) {\n          var collectedRow = collectedRows_1_1.value;\n          this.pairs.push(collectedRow.getPairs());\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (collectedRows_1_1 && !collectedRows_1_1.done && (_a = collectedRows_1.return)) _a.call(collectedRows_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      this.pairs.push(row.getPairs());\n\n      if (!RSSExpandedReader.isValidSequence(this.pairs)) {\n        continue;\n      }\n\n      if (this.checkChecksum()) {\n        return this.pairs;\n      }\n\n      var rs = new Array(collectedRows);\n      rs.push(row);\n\n      try {\n        // Recursion: try to add more rows\n        return this.checkRows(rs, i + 1);\n      } catch (e) {\n        // We failed, try the next candidate\n        console.log(e);\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  }; // Whether the pairs form a valid find pattern sequence,\n  // either complete or a prefix\n\n\n  RSSExpandedReader.isValidSequence = function (pairs) {\n    var e_2, _a;\n\n    try {\n      for (var _b = __values(RSSExpandedReader.FINDER_PATTERN_SEQUENCES), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var sequence = _c.value;\n\n        if (pairs.length > sequence.length) {\n          continue;\n        }\n\n        var stop_1 = true;\n\n        for (var j = 0; j < pairs.length; j++) {\n          if (pairs[j].getFinderPattern().getValue() != sequence[j]) {\n            stop_1 = false;\n            break;\n          }\n        }\n\n        if (stop_1) {\n          return true;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return false;\n  };\n\n  RSSExpandedReader.prototype.storeRow = function (rowNumber, wasReversed) {\n    // Discard if duplicate above or below; otherwise insert in order by row number.\n    var insertPos = 0;\n    var prevIsSame = false;\n    var nextIsSame = false;\n\n    while (insertPos < this.rows.length) {\n      var erow = this.rows[insertPos];\n\n      if (erow.getRowNumber() > rowNumber) {\n        nextIsSame = erow.isEquivalent(this.pairs);\n        break;\n      }\n\n      prevIsSame = erow.isEquivalent(this.pairs);\n      insertPos++;\n    }\n\n    if (nextIsSame || prevIsSame) {\n      return;\n    } // When the row was partially decoded (e.g. 2 pairs found instead of 3),\n    // it will prevent us from detecting the barcode.\n    // Try to merge partial rows\n    // Check whether the row is part of an allready detected row\n\n\n    if (RSSExpandedReader.isPartialRow(this.pairs, this.rows)) {\n      return;\n    }\n\n    this.rows.push(insertPos, new ExpandedRow_1.default(this.pairs, rowNumber, wasReversed));\n    this.removePartialRows(this.pairs, this.rows);\n  }; // Remove all the rows that contains only specified pairs\n\n\n  RSSExpandedReader.prototype.removePartialRows = function (pairs, rows) {\n    var e_3, _a, e_4, _b, e_5, _c;\n\n    try {\n      // for (Iterator<ExpandedRow> iterator = rows.iterator(); iterator.hasNext();) {\n      //   ExpandedRow r = iterator.next();\n      //   if (r.getPairs().size() == pairs.size()) {\n      //     continue;\n      //   }\n      //   boolean allFound = true;\n      //   for (ExpandedPair p : r.getPairs()) {\n      //     boolean found = false;\n      //     for (ExpandedPair pp : pairs) {\n      //       if (p.equals(pp)) {\n      //         found = true;\n      //         break;\n      //       }\n      //     }\n      //     if (!found) {\n      //       allFound = false;\n      //       break;\n      //     }\n      //   }\n      //   if (allFound) {\n      //     // 'pairs' contains all the pairs from the row 'r'\n      //     iterator.remove();\n      //   }\n      // }\n      for (var rows_1 = __values(rows), rows_1_1 = rows_1.next(); !rows_1_1.done; rows_1_1 = rows_1.next()) {\n        var row = rows_1_1.value;\n\n        if (row.getPairs().length === pairs.length) {\n          continue;\n        }\n\n        var allFound = true;\n\n        try {\n          for (var _d = __values(row.getPairs()), _e = _d.next(); !_e.done; _e = _d.next()) {\n            var p = _e.value;\n            var found = false;\n\n            try {\n              for (var pairs_1 = __values(pairs), pairs_1_1 = pairs_1.next(); !pairs_1_1.done; pairs_1_1 = pairs_1.next()) {\n                var pp = pairs_1_1.value;\n\n                if (ExpandedPair_1.default.equals(p, pp)) {\n                  found = true;\n                  break;\n                }\n              }\n            } catch (e_5_1) {\n              e_5 = {\n                error: e_5_1\n              };\n            } finally {\n              try {\n                if (pairs_1_1 && !pairs_1_1.done && (_c = pairs_1.return)) _c.call(pairs_1);\n              } finally {\n                if (e_5) throw e_5.error;\n              }\n            }\n\n            if (!found) {\n              allFound = false;\n            }\n          }\n        } catch (e_4_1) {\n          e_4 = {\n            error: e_4_1\n          };\n        } finally {\n          try {\n            if (_e && !_e.done && (_b = _d.return)) _b.call(_d);\n          } finally {\n            if (e_4) throw e_4.error;\n          }\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (rows_1_1 && !rows_1_1.done && (_a = rows_1.return)) _a.call(rows_1);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  }; // Returns true when one of the rows already contains all the pairs\n\n\n  RSSExpandedReader.isPartialRow = function (pairs, rows) {\n    var e_6, _a, e_7, _b, e_8, _c;\n\n    try {\n      for (var rows_2 = __values(rows), rows_2_1 = rows_2.next(); !rows_2_1.done; rows_2_1 = rows_2.next()) {\n        var r = rows_2_1.value;\n        var allFound = true;\n\n        try {\n          for (var pairs_2 = __values(pairs), pairs_2_1 = pairs_2.next(); !pairs_2_1.done; pairs_2_1 = pairs_2.next()) {\n            var p = pairs_2_1.value;\n            var found = false;\n\n            try {\n              for (var _d = __values(r.getPairs()), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var pp = _e.value;\n\n                if (p.equals(pp)) {\n                  found = true;\n                  break;\n                }\n              }\n            } catch (e_8_1) {\n              e_8 = {\n                error: e_8_1\n              };\n            } finally {\n              try {\n                if (_e && !_e.done && (_c = _d.return)) _c.call(_d);\n              } finally {\n                if (e_8) throw e_8.error;\n              }\n            }\n\n            if (!found) {\n              allFound = false;\n              break;\n            }\n          }\n        } catch (e_7_1) {\n          e_7 = {\n            error: e_7_1\n          };\n        } finally {\n          try {\n            if (pairs_2_1 && !pairs_2_1.done && (_b = pairs_2.return)) _b.call(pairs_2);\n          } finally {\n            if (e_7) throw e_7.error;\n          }\n        }\n\n        if (allFound) {\n          // the row 'r' contain all the pairs from 'pairs'\n          return true;\n        }\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (rows_2_1 && !rows_2_1.done && (_a = rows_2.return)) _a.call(rows_2);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    return false;\n  }; // Only used for unit testing\n\n\n  RSSExpandedReader.prototype.getRows = function () {\n    return this.rows;\n  }; // Not private for unit testing\n\n\n  RSSExpandedReader.constructResult = function (pairs) {\n    var binary = BitArrayBuilder_1.default.buildBitArray(pairs);\n    var decoder = AbstractExpandedDecoderComplement_1.createDecoder(binary);\n    var resultingString = decoder.parseInformation();\n    var firstPoints = pairs[0].getFinderPattern().getResultPoints();\n    var lastPoints = pairs[pairs.length - 1].getFinderPattern().getResultPoints();\n    var points = [firstPoints[0], firstPoints[1], lastPoints[0], lastPoints[1]];\n    return new Result_1.default(resultingString, null, null, points, BarcodeFormat_1.default.RSS_EXPANDED, null);\n  };\n\n  RSSExpandedReader.prototype.checkChecksum = function () {\n    var firstPair = this.pairs.get(0);\n    var checkCharacter = firstPair.getLeftChar();\n    var firstCharacter = firstPair.getRightChar();\n\n    if (firstCharacter == null) {\n      return false;\n    }\n\n    var checksum = firstCharacter.getChecksumPortion();\n    var s = 2;\n\n    for (var i = 1; i < this.pairs.size(); ++i) {\n      var currentPair = this.pairs.get(i);\n      checksum += currentPair.getLeftChar().getChecksumPortion();\n      s++;\n      var currentRightChar = currentPair.getRightChar();\n\n      if (currentRightChar != null) {\n        checksum += currentRightChar.getChecksumPortion();\n        s++;\n      }\n    }\n\n    checksum %= 211;\n    var checkCharacterValue = 211 * (s - 4) + checksum;\n    return checkCharacterValue == checkCharacter.getValue();\n  };\n\n  RSSExpandedReader.getNextSecondBar = function (row, initialPos) {\n    var currentPos;\n\n    if (row.get(initialPos)) {\n      currentPos = row.getNextUnset(initialPos);\n      currentPos = row.getNextSet(currentPos);\n    } else {\n      currentPos = row.getNextSet(initialPos);\n      currentPos = row.getNextUnset(currentPos);\n    }\n\n    return currentPos;\n  }; // not private for testing\n\n\n  RSSExpandedReader.prototype.retrieveNextPair = function (row, previousPairs, rowNumber) {\n    var isOddPattern = previousPairs.length % 2 == 0;\n\n    if (this.startFromEven) {\n      isOddPattern = !isOddPattern;\n    }\n\n    var pattern;\n    var keepFinding = true;\n    var forcedOffset = -1;\n\n    do {\n      this.findNextPair(row, previousPairs, forcedOffset);\n      pattern = this.parseFoundFinderPattern(row, rowNumber, isOddPattern);\n\n      if (pattern == null) {\n        forcedOffset = RSSExpandedReader.getNextSecondBar(row, this.startEnd[0]);\n      } else {\n        keepFinding = false;\n      }\n    } while (keepFinding); // When stacked symbol is split over multiple rows, there's no way to guess if this pair can be last or not.\n    // boolean mayBeLast = checkPairSequence(previousPairs, pattern);\n\n\n    var leftChar = this.decodeDataCharacter(row, pattern, isOddPattern, true);\n\n    if (!this.isEmptyPair(previousPairs) && previousPairs[previousPairs.length - 1].mustBeLast()) {\n      throw new NotFoundException_1.default();\n    }\n\n    var rightChar;\n\n    try {\n      rightChar = this.decodeDataCharacter(row, pattern, isOddPattern, false);\n    } catch (e) {\n      rightChar = null;\n      console.log(e);\n    }\n\n    return new ExpandedPair_1.default(leftChar, rightChar, pattern, true);\n  };\n\n  RSSExpandedReader.prototype.isEmptyPair = function (pairs) {\n    if (pairs.length === 0) {\n      return true;\n    }\n\n    return false;\n  };\n\n  RSSExpandedReader.prototype.findNextPair = function (row, previousPairs, forcedOffset) {\n    var counters = this.getDecodeFinderCounters();\n    counters[0] = 0;\n    counters[1] = 0;\n    counters[2] = 0;\n    counters[3] = 0;\n    var width = row.getSize();\n    var rowOffset;\n\n    if (forcedOffset >= 0) {\n      rowOffset = forcedOffset;\n    } else if (this.isEmptyPair(previousPairs)) {\n      rowOffset = 0;\n    } else {\n      var lastPair = previousPairs[previousPairs.length - 1];\n      rowOffset = lastPair.getFinderPattern().getStartEnd()[1];\n    }\n\n    var searchingEvenPair = previousPairs.length % 2 != 0;\n\n    if (this.startFromEven) {\n      searchingEvenPair = !searchingEvenPair;\n    }\n\n    var isWhite = false;\n\n    while (rowOffset < width) {\n      isWhite = !row.get(rowOffset);\n\n      if (!isWhite) {\n        break;\n      }\n\n      rowOffset++;\n    }\n\n    var counterPosition = 0;\n    var patternStart = rowOffset;\n\n    for (var x = rowOffset; x < width; x++) {\n      if (row.get(x) != isWhite) {\n        counters[counterPosition]++;\n      } else {\n        if (counterPosition == 3) {\n          if (searchingEvenPair) {\n            RSSExpandedReader.reverseCounters(counters);\n          }\n\n          if (RSSExpandedReader.isFinderPattern(counters)) {\n            this.startEnd[0] = patternStart;\n            this.startEnd[1] = x;\n            return;\n          }\n\n          if (searchingEvenPair) {\n            RSSExpandedReader.reverseCounters(counters);\n          }\n\n          patternStart += counters[0] + counters[1];\n          counters[0] = counters[2];\n          counters[1] = counters[3];\n          counters[2] = 0;\n          counters[3] = 0;\n          counterPosition--;\n        } else {\n          counterPosition++;\n        }\n\n        counters[counterPosition] = 1;\n        isWhite = !isWhite;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  };\n\n  RSSExpandedReader.reverseCounters = function (counters) {\n    var length = counters.length;\n\n    for (var i = 0; i < length / 2; ++i) {\n      var tmp = counters[i];\n      counters[i] = counters[length - i - 1];\n      counters[length - i - 1] = tmp;\n    }\n  };\n\n  RSSExpandedReader.prototype.parseFoundFinderPattern = function (row, rowNumber, oddPattern) {\n    // Actually we found elements 2-5.\n    var firstCounter;\n    var start;\n    var end;\n\n    if (oddPattern) {\n      // If pattern number is odd, we need to locate element 1 *before* the current block.\n      var firstElementStart = this.startEnd[0] - 1; // Locate element 1\n\n      while (firstElementStart >= 0 && !row.get(firstElementStart)) {\n        firstElementStart--;\n      }\n\n      firstElementStart++;\n      firstCounter = this.startEnd[0] - firstElementStart;\n      start = firstElementStart;\n      end = this.startEnd[1];\n    } else {\n      // If pattern number is even, the pattern is reversed, so we need to locate element 1 *after* the current block.\n      start = this.startEnd[0];\n      end = row.getNextUnset(this.startEnd[1] + 1);\n      firstCounter = end - this.startEnd[1];\n    } // Make 'counters' hold 1-4\n\n\n    var counters = this.getDecodeFinderCounters();\n    System_1.default.arraycopy(counters, 0, counters, 1, counters.length - 1);\n    counters[0] = firstCounter;\n    var value;\n\n    try {\n      value = this.parseFinderValue(counters, RSSExpandedReader.FINDER_PATTERNS);\n    } catch (e) {\n      return null;\n      console.log(e);\n    } //return new FinderPattern(value, new int[] { start, end }, start, end, rowNumber});\n\n\n    return new FinderPattern_1.default(value, [start, end], start, end, rowNumber);\n  };\n\n  RSSExpandedReader.prototype.decodeDataCharacter = function (row, pattern, isOddPattern, leftChar) {\n    var counters = this.getDataCharacterCounters();\n\n    for (var x = 0; x < counters.length; x++) {\n      counters[x] = 0;\n    }\n\n    if (leftChar) {\n      RSSExpandedReader.recordPatternInReverse(row, pattern.getStartEnd()[0], counters);\n    } else {\n      RSSExpandedReader.recordPattern(row, pattern.getStartEnd()[1], counters); // reverse it\n\n      for (var i = 0, j = counters.length - 1; i < j; i++, j--) {\n        var temp = counters[i];\n        counters[i] = counters[j];\n        counters[j] = temp;\n      }\n    } //counters[] has the pixels of the module\n\n\n    var numModules = 17; //left and right data characters have all the same length\n\n    var elementWidth = MathUtils_1.default.sum(new Int32Array(counters)) / numModules; // Sanity check: element width for pattern and the character should match\n\n    var expectedElementWidth = (pattern.getStartEnd()[1] - pattern.getStartEnd()[0]) / 15.0;\n\n    if (Math.abs(elementWidth - expectedElementWidth) / expectedElementWidth > 0.3) {\n      throw new NotFoundException_1.default();\n    }\n\n    var oddCounts = this.getOddCounts();\n    var evenCounts = this.getEvenCounts();\n    var oddRoundingErrors = this.getOddRoundingErrors();\n    var evenRoundingErrors = this.getEvenRoundingErrors();\n\n    for (var i = 0; i < counters.length; i++) {\n      var value_1 = 1.0 * counters[i] / elementWidth;\n      var count = value_1 + 0.5; // Round\n\n      if (count < 1) {\n        if (value_1 < 0.3) {\n          throw new NotFoundException_1.default();\n        }\n\n        count = 1;\n      } else if (count > 8) {\n        if (value_1 > 8.7) {\n          throw new NotFoundException_1.default();\n        }\n\n        count = 8;\n      }\n\n      var offset = i / 2;\n\n      if ((i & 0x01) == 0) {\n        oddCounts[offset] = count;\n        oddRoundingErrors[offset] = value_1 - count;\n      } else {\n        evenCounts[offset] = count;\n        evenRoundingErrors[offset] = value_1 - count;\n      }\n    }\n\n    this.adjustOddEvenCounts(numModules);\n    var weightRowNumber = 4 * pattern.getValue() + (isOddPattern ? 0 : 2) + (leftChar ? 0 : 1) - 1;\n    var oddSum = 0;\n    var oddChecksumPortion = 0;\n\n    for (var i = oddCounts.length - 1; i >= 0; i--) {\n      if (RSSExpandedReader.isNotA1left(pattern, isOddPattern, leftChar)) {\n        var weight = RSSExpandedReader.WEIGHTS[weightRowNumber][2 * i];\n        oddChecksumPortion += oddCounts[i] * weight;\n      }\n\n      oddSum += oddCounts[i];\n    }\n\n    var evenChecksumPortion = 0; //int evenSum = 0;\n\n    for (var i = evenCounts.length - 1; i >= 0; i--) {\n      if (RSSExpandedReader.isNotA1left(pattern, isOddPattern, leftChar)) {\n        var weight = RSSExpandedReader.WEIGHTS[weightRowNumber][2 * i + 1];\n        evenChecksumPortion += evenCounts[i] * weight;\n      } //evenSum += evenCounts[i];\n\n    }\n\n    var checksumPortion = oddChecksumPortion + evenChecksumPortion;\n\n    if ((oddSum & 0x01) != 0 || oddSum > 13 || oddSum < 4) {\n      throw new NotFoundException_1.default();\n    }\n\n    var group = (13 - oddSum) / 2;\n    var oddWidest = RSSExpandedReader.SYMBOL_WIDEST[group];\n    var evenWidest = 9 - oddWidest;\n    var vOdd = RSSUtils_1.default.getRSSvalue(oddCounts, oddWidest, true);\n    var vEven = RSSUtils_1.default.getRSSvalue(evenCounts, evenWidest, false);\n    var tEven = RSSExpandedReader.EVEN_TOTAL_SUBSET[group];\n    var gSum = RSSExpandedReader.GSUM[group];\n    var value = vOdd * tEven + vEven + gSum;\n    return new DataCharacter_1.default(value, checksumPortion);\n  };\n\n  RSSExpandedReader.isNotA1left = function (pattern, isOddPattern, leftChar) {\n    // A1: pattern.getValue is 0 (A), and it's an oddPattern, and it is a left char\n    return !(pattern.getValue() == 0 && isOddPattern && leftChar);\n  };\n\n  RSSExpandedReader.prototype.adjustOddEvenCounts = function (numModules) {\n    var oddSum = MathUtils_1.default.sum(new Int32Array(this.getOddCounts()));\n    var evenSum = MathUtils_1.default.sum(new Int32Array(this.getEvenCounts()));\n    var incrementOdd = false;\n    var decrementOdd = false;\n\n    if (oddSum > 13) {\n      decrementOdd = true;\n    } else if (oddSum < 4) {\n      incrementOdd = true;\n    }\n\n    var incrementEven = false;\n    var decrementEven = false;\n\n    if (evenSum > 13) {\n      decrementEven = true;\n    } else if (evenSum < 4) {\n      incrementEven = true;\n    }\n\n    var mismatch = oddSum + evenSum - numModules;\n    var oddParityBad = (oddSum & 0x01) == 1;\n    var evenParityBad = (evenSum & 0x01) == 0;\n\n    if (mismatch == 1) {\n      if (oddParityBad) {\n        if (evenParityBad) {\n          throw new NotFoundException_1.default();\n        }\n\n        decrementOdd = true;\n      } else {\n        if (!evenParityBad) {\n          throw new NotFoundException_1.default();\n        }\n\n        decrementEven = true;\n      }\n    } else if (mismatch == -1) {\n      if (oddParityBad) {\n        if (evenParityBad) {\n          throw new NotFoundException_1.default();\n        }\n\n        incrementOdd = true;\n      } else {\n        if (!evenParityBad) {\n          throw new NotFoundException_1.default();\n        }\n\n        incrementEven = true;\n      }\n    } else if (mismatch == 0) {\n      if (oddParityBad) {\n        if (!evenParityBad) {\n          throw new NotFoundException_1.default();\n        } // Both bad\n\n\n        if (oddSum < evenSum) {\n          incrementOdd = true;\n          decrementEven = true;\n        } else {\n          decrementOdd = true;\n          incrementEven = true;\n        }\n      } else {\n        if (evenParityBad) {\n          throw new NotFoundException_1.default();\n        } // Nothing to do!\n\n      }\n    } else {\n      throw new NotFoundException_1.default();\n    }\n\n    if (incrementOdd) {\n      if (decrementOdd) {\n        throw new NotFoundException_1.default();\n      }\n\n      RSSExpandedReader.increment(this.getOddCounts(), this.getOddRoundingErrors());\n    }\n\n    if (decrementOdd) {\n      RSSExpandedReader.decrement(this.getOddCounts(), this.getOddRoundingErrors());\n    }\n\n    if (incrementEven) {\n      if (decrementEven) {\n        throw new NotFoundException_1.default();\n      }\n\n      RSSExpandedReader.increment(this.getEvenCounts(), this.getOddRoundingErrors());\n    }\n\n    if (decrementEven) {\n      RSSExpandedReader.decrement(this.getEvenCounts(), this.getEvenRoundingErrors());\n    }\n  };\n\n  RSSExpandedReader.SYMBOL_WIDEST = [7, 5, 4, 3, 1];\n  RSSExpandedReader.EVEN_TOTAL_SUBSET = [4, 20, 52, 104, 204];\n  RSSExpandedReader.GSUM = [0, 348, 1388, 2948, 3988];\n  RSSExpandedReader.FINDER_PATTERNS = [[1, 8, 4, 1], [3, 6, 4, 1], [3, 4, 6, 1], [3, 2, 8, 1], [2, 6, 5, 1], [2, 2, 9, 1] // F\n  ];\n  RSSExpandedReader.WEIGHTS = [[1, 3, 9, 27, 81, 32, 96, 77], [20, 60, 180, 118, 143, 7, 21, 63], [189, 145, 13, 39, 117, 140, 209, 205], [193, 157, 49, 147, 19, 57, 171, 91], [62, 186, 136, 197, 169, 85, 44, 132], [185, 133, 188, 142, 4, 12, 36, 108], [113, 128, 173, 97, 80, 29, 87, 50], [150, 28, 84, 41, 123, 158, 52, 156], [46, 138, 203, 187, 139, 206, 196, 166], [76, 17, 51, 153, 37, 111, 122, 155], [43, 129, 176, 106, 107, 110, 119, 146], [16, 48, 144, 10, 30, 90, 59, 177], [109, 116, 137, 200, 178, 112, 125, 164], [70, 210, 208, 202, 184, 130, 179, 115], [134, 191, 151, 31, 93, 68, 204, 190], [148, 22, 66, 198, 172, 94, 71, 2], [6, 18, 54, 162, 64, 192, 154, 40], [120, 149, 25, 75, 14, 42, 126, 167], [79, 26, 78, 23, 69, 207, 199, 175], [103, 98, 83, 38, 114, 131, 182, 124], [161, 61, 183, 127, 170, 88, 53, 159], [55, 165, 73, 8, 24, 72, 5, 15], [45, 135, 194, 160, 58, 174, 100, 89]];\n  RSSExpandedReader.FINDER_PAT_A = 0;\n  RSSExpandedReader.FINDER_PAT_B = 1;\n  RSSExpandedReader.FINDER_PAT_C = 2;\n  RSSExpandedReader.FINDER_PAT_D = 3;\n  RSSExpandedReader.FINDER_PAT_E = 4;\n  RSSExpandedReader.FINDER_PAT_F = 5;\n  RSSExpandedReader.FINDER_PATTERN_SEQUENCES = [[RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A], [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B], [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_D], [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_C], [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_F], [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_F, RSSExpandedReader.FINDER_PAT_F], [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_D], [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_E], [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_F, RSSExpandedReader.FINDER_PAT_F], [RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_A, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_B, RSSExpandedReader.FINDER_PAT_C, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_D, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_E, RSSExpandedReader.FINDER_PAT_F, RSSExpandedReader.FINDER_PAT_F]];\n  RSSExpandedReader.MAX_PAIRS = 11;\n  return RSSExpandedReader;\n}(AbstractRSSReader_1.default);\n\nexports.default = RSSExpandedReader;","map":{"version":3,"mappings":"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","names":["__extends","_this","Array","RSSExpandedReader","MAX_PAIRS","rowNumber","row","hints","pairs","length","startFromEven","constructResult","decodeRow2pairs","e","console","log","rows","done","push","retrieveNextPair","NotFoundException","checkChecksum","tryStackedDecode","storeRow","ps","checkRowsBoolean","NotFoundException_1","reverse","checkRows","collectedRows","currentRow","i","collectedRows_1_1","collectedRow","getPairs","isValidSequence","rs","FINDER_PATTERN_SEQUENCES","_c","sequence","stop_1","j","getFinderPattern","getValue","wasReversed","insertPos","prevIsSame","nextIsSame","erow","getRowNumber","isEquivalent","isPartialRow","ExpandedRow_1","removePartialRows","rows_1_1","allFound","_e","p","found","pairs_1_1","pp","ExpandedPair_1","equals","rows_2_1","r","pairs_2_1","binary","BitArrayBuilder_1","buildBitArray","decoder","AbstractExpandedDecoderComplement_1","resultingString","parseInformation","firstPoints","getResultPoints","lastPoints","points","Result_1","BarcodeFormat_1","RSS_EXPANDED","firstPair","get","checkCharacter","getLeftChar","firstCharacter","getRightChar","checksum","getChecksumPortion","s","size","currentPair","currentRightChar","checkCharacterValue","initialPos","currentPos","getNextUnset","getNextSet","previousPairs","isOddPattern","pattern","keepFinding","forcedOffset","findNextPair","parseFoundFinderPattern","getNextSecondBar","startEnd","leftChar","decodeDataCharacter","isEmptyPair","mustBeLast","rightChar","counters","getDecodeFinderCounters","width","getSize","rowOffset","lastPair","getStartEnd","searchingEvenPair","isWhite","counterPosition","patternStart","x","reverseCounters","isFinderPattern","tmp","oddPattern","firstCounter","start","end","firstElementStart","System_1","arraycopy","value","parseFinderValue","FINDER_PATTERNS","FinderPattern_1","getDataCharacterCounters","recordPatternInReverse","recordPattern","temp","numModules","elementWidth","MathUtils_1","sum","Int32Array","expectedElementWidth","Math","abs","oddCounts","getOddCounts","evenCounts","getEvenCounts","oddRoundingErrors","getOddRoundingErrors","evenRoundingErrors","getEvenRoundingErrors","value_1","count","offset","adjustOddEvenCounts","weightRowNumber","oddSum","oddChecksumPortion","isNotA1left","weight","WEIGHTS","evenChecksumPortion","checksumPortion","group","oddWidest","SYMBOL_WIDEST","evenWidest","vOdd","RSSUtils_1","getRSSvalue","vEven","tEven","EVEN_TOTAL_SUBSET","gSum","GSUM","DataCharacter_1","evenSum","incrementOdd","decrementOdd","incrementEven","decrementEven","mismatch","oddParityBad","evenParityBad","increment","decrement","FINDER_PAT_A","FINDER_PAT_B","FINDER_PAT_C","FINDER_PAT_D","FINDER_PAT_E","FINDER_PAT_F","AbstractRSSReader_1"],"sources":["../../../../../src/core/oned/rss/expanded/RSSExpandedReader.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}