{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Test project\\\\Test Project\\\\react_qrcode_generation_scanner-main\\\\react_qrcode_generation_scanner-main\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, Card, CardContent, makeStyles, Grid } from '@material-ui/core';\nimport QrReader from 'react-qr-reader';\nimport Button from '@mui/material/Button';\nimport Beep from '../src/Assets/censor-beep-01.mp3';\nimport useSound from 'use-sound';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\nimport SendIcon from '@mui/icons-material/Send';\nimport axios from 'axios';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport FilledInput from '@mui/material/FilledInput';\nimport IconButton from '@mui/material/IconButton';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport DirectionsIcon from '@mui/icons-material/Directions';\nimport QrCode2Icon from '@mui/icons-material/QrCode2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [scanResult, setScanResult] = useState('');\n  const classes = useStyles();\n  const [play] = useSound(Beep);\n\n  const handleErrorWebCam = error => {\n    console.log(error);\n  };\n\n  const handleScanWebCam = result => {\n    if (result) {\n      play();\n      setScanResult(result);\n      setOpen(false);\n    }\n  };\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const [flash, setflash] = useState(false);\n  const [scanvalue, setscanvalue] = useState(\"\"); // const barcodeScannerComponentHandleUpdate = (result) => {\n  //   if (result) {\n  //     play()\n  //     setLog([...logs, result.text]);\n  //     setOpen(false)\n  //     setStopStream(true)\n  //   }\n  // };\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.conatiner,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.title,\n        children: \"Qr Scan test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            '& > :not(style)': {\n              m: 3,\n              width: '30ch'\n            }\n          },\n          noValidate: true,\n          autoComplete: \"off\",\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            component: \"form\",\n            sx: {\n              p: '4px 8px',\n              display: 'flex',\n              alignItems: 'center',\n              width: 1200\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputBase, {\n              placeholder: \"\\u0E04\\u0E49\\u0E19\\u0E2B\\u0E32\",\n              value: scanResult,\n              onChange: e => setScanResult(e.target.value),\n              inputProps: {\n                'aria-label': 'search google maps'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              type: \"submit\",\n              sx: {\n                p: '10px'\n              },\n              \"aria-label\": \"search\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                height: 28,\n                m: 0.5\n              },\n              orientation: \"vertical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"primary\",\n              onClick: handleOpen,\n              sx: {\n                p: '10px'\n              },\n              \"aria-label\": \"directions\",\n              children: /*#__PURE__*/_jsxDEV(QrCode2Icon, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          open: open,\n          onClose: handleClose,\n          \"aria-labelledby\": \"modal-modal-title\",\n          \"aria-describedby\": \"modal-modal-description\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: style,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Qr Code Scan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(BarcodeScannerComponent, {\n                style: {\n                  width: '100%',\n                  align: 'center'\n                },\n                delay: 500,\n                onUpdate: (err, result) => {\n                  if (result) {\n                    handleScanWebCam(result.text);\n                    setscanvalue(result.text);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cphGQX/ft9uoNbCyf5Apdypscv8=\", false, function () {\n  return [useStyles, useSound];\n});\n\n_c = App;\nconst useStyles = makeStyles(theme => ({\n  conatiner: {\n    marginTop: 10\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: '#E2E3FF',\n    color: '#00000',\n    padding: 20\n  }\n}));\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Project/Test project/Test Project/react_qrcode_generation_scanner-main/react_qrcode_generation_scanner-main/src/App.js"],"names":["React","useState","Container","Card","CardContent","makeStyles","Grid","QrReader","Button","Beep","useSound","TextField","Box","Typography","Modal","BarcodeScannerComponent","SendIcon","axios","AccountCircle","InputAdornment","FormControl","FilledInput","IconButton","Paper","InputBase","Divider","MenuIcon","SearchIcon","DirectionsIcon","QrCode2Icon","App","scanResult","setScanResult","classes","useStyles","play","handleErrorWebCam","error","console","log","handleScanWebCam","result","setOpen","open","handleOpen","handleClose","flash","setflash","scanvalue","setscanvalue","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","conatiner","title","m","display","alignItems","e","target","value","height","align","err","text","theme","marginTop","justifyContent","background","color","padding"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Container, Card, CardContent, makeStyles, Grid } from '@material-ui/core';\nimport QrReader from 'react-qr-reader';\nimport Button from '@mui/material/Button';\nimport Beep from '../src/Assets/censor-beep-01.mp3'\nimport useSound from 'use-sound';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\nimport SendIcon from '@mui/icons-material/Send';\nimport axios from 'axios';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl'\nimport FilledInput from '@mui/material/FilledInput';\nimport IconButton from '@mui/material/IconButton';\n\n\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\n\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport DirectionsIcon from '@mui/icons-material/Directions';\nimport QrCode2Icon from '@mui/icons-material/QrCode2';\n\n\n\nfunction App() {\n  const [scanResult, setScanResult] = useState('');\n  const classes = useStyles();\n  const [play] = useSound(Beep);\n\n  const handleErrorWebCam = (error) => {\n    console.log(error);\n  }\n  const handleScanWebCam = (result) => {\n    if (result) {\n      play()\n      setScanResult(result);\n      setOpen(false)\n    }\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const [flash, setflash] = useState(false)\n\n  const [scanvalue, setscanvalue] = useState(\"\")\n\n  // const barcodeScannerComponentHandleUpdate = (result) => {\n  //   if (result) {\n  //     play()\n  //     setLog([...logs, result.text]);\n\n  //     setOpen(false)\n  //     setStopStream(true)\n  //   }\n  // };\n\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n  };\n  return (\n    <Container className={classes.conatiner}>\n      <Card>\n        <h2 className={classes.title}>Qr Scan test</h2>\n\n\n\n        <CardContent align=\"center\">\n          <Box\n            component=\"form\"\n            sx={{\n              '& > :not(style)': { m: 3, width: '30ch' },\n            }}\n            noValidate\n            autoComplete=\"off\"\n            align=\"center\"\n          >\n\n            <Paper\n              component=\"form\"\n              sx={{ p: '4px 8px', display: 'flex', alignItems: 'center', width: 1200 }}\n            >\n\n              <InputBase\n                placeholder=\"ค้นหา\"\n                value={scanResult}\n                onChange={(e) => setScanResult(e.target.value)}\n                inputProps={{ 'aria-label': 'search google maps' }}\n              />\n              <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\">\n                <SearchIcon />\n              </IconButton>\n              <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n              <IconButton color=\"primary\" onClick={handleOpen} sx={{ p: '10px' }} aria-label=\"directions\">\n                <QrCode2Icon fontSize=\"large\"/>\n              </IconButton>\n            </Paper>\n\n            {/* <TextField\n              id=\"filled-adornment-password\"\n              value={scanResult}\n              onChange={(e) => setScanResult(e.target.value)}\n              endAdornment={\n\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick=\"\"\n\n                  edge=\"end\"\n                >\n\n                </IconButton>\n\n              }\n            /> */}\n\n          </Box>\n\n          <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n          >\n            <Box sx={style}>\n              <Grid>\n                <h3>Qr Code Scan</h3>\n                {/* <BarcodeScannerComponent\n                  delay={300}\n                  style={{ width: '%', align: 'center' }}\n                  onError={handleErrorWebCam}\n                  onScan={handleScanWebCam}\n                /> */}\n\n                <BarcodeScannerComponent\n                  style={{ width: '100%', align: 'center' }}\n                  delay={500}\n      \n                  onUpdate={(err, result) => {\n                    if (result) {\n                      handleScanWebCam(result.text);\n                      setscanvalue(result.text)\n                    }\n\n                  }}\n                />\n                \n              </Grid>\n            </Box>\n          </Modal>\n        </CardContent>\n      </Card>\n\n\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  conatiner: {\n    marginTop: 10\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: '#E2E3FF',\n    color: '#00000',\n    padding: 20\n  }\n\n}));\nexport default App;\n"]},"metadata":{},"sourceType":"module"}