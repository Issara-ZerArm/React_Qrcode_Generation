{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar AI01decoder_1 = require(\"./AI01decoder\");\n\nvar StringBuilder_1 = require(\"../../../../util/StringBuilder\");\n\nvar AI01AndOtherAIs =\n/** @class */\nfunction (_super) {\n  __extends(AI01AndOtherAIs, _super); //the second one is the encodation method, and the other two are for the variable length\n\n\n  function AI01AndOtherAIs(information) {\n    return _super.call(this, information) || this;\n  }\n\n  AI01AndOtherAIs.prototype.parseInformation = function () {\n    var buff = new StringBuilder_1.default();\n    buff.append(\"(01)\");\n    var initialGtinPosition = buff.length();\n    var firstGtinDigit = this.getGeneralDecoder().extractNumericValueFromBitArray(AI01AndOtherAIs.HEADER_SIZE, 4);\n    buff.append(firstGtinDigit);\n    this.encodeCompressedGtinWithoutAI(buff, AI01AndOtherAIs.HEADER_SIZE + 4, initialGtinPosition);\n    return this.getGeneralDecoder().decodeAllCodes(buff, AI01AndOtherAIs.HEADER_SIZE + 44);\n  };\n\n  AI01AndOtherAIs.HEADER_SIZE = 1 + 1 + 2; //first bit encodes the linkage flag,\n\n  return AI01AndOtherAIs;\n}(AI01decoder_1.default);\n\nexports.default = AI01AndOtherAIs;","map":null,"metadata":{},"sourceType":"script"}