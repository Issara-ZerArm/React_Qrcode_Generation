{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.oned {*/\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n\nvar DecodeHintType_1 = require(\"../DecodeHintType\");\n\nvar Result_1 = require(\"../Result\");\n\nvar ResultPoint_1 = require(\"../ResultPoint\");\n\nvar OneDReader_1 = require(\"./OneDReader\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n\nvar FormatException_1 = require(\"../FormatException\");\n\nvar ChecksumException_1 = require(\"../ChecksumException\");\n/**\n * <p>Decodes Code 128 barcodes.</p>\n *\n * @author Sean Owen\n */\n\n\nvar Code128Reader =\n/** @class */\nfunction (_super) {\n  __extends(Code128Reader, _super);\n\n  function Code128Reader() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Code128Reader.findStartPattern = function (row) {\n    var width = row.getSize();\n    var rowOffset = row.getNextSet(0);\n    var counterPosition = 0;\n    var counters = [0, 0, 0, 0, 0, 0];\n    var patternStart = rowOffset;\n    var isWhite = false;\n    var patternLength = 6;\n\n    for (var i = rowOffset; i < width; i++) {\n      if (row.get(i) !== isWhite) {\n        counters[counterPosition]++;\n      } else {\n        if (counterPosition === patternLength - 1) {\n          var bestVariance = Code128Reader.MAX_AVG_VARIANCE;\n          var bestMatch = -1;\n\n          for (var startCode = Code128Reader.CODE_START_A; startCode <= Code128Reader.CODE_START_C; startCode++) {\n            var variance = OneDReader_1.default.patternMatchVariance(counters, Code128Reader.CODE_PATTERNS[startCode], Code128Reader.MAX_INDIVIDUAL_VARIANCE);\n\n            if (variance < bestVariance) {\n              bestVariance = variance;\n              bestMatch = startCode;\n            }\n          } // Look for whitespace before start pattern, >= 50% of width of start pattern\n\n\n          if (bestMatch >= 0 && row.isRange(Math.max(0, patternStart - (i - patternStart) / 2), patternStart, false)) {\n            return [patternStart, i, bestMatch];\n          }\n\n          patternStart += counters[0] + counters[1];\n          counters.splice(0, 2);\n          counters[counterPosition - 1] = 0;\n          counters[counterPosition] = 0;\n          counterPosition--;\n        } else {\n          counterPosition++;\n        }\n\n        counters[counterPosition] = 1;\n        isWhite = !isWhite;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  };\n\n  Code128Reader.decodeCode = function (row, counters, rowOffset) {\n    OneDReader_1.default.recordPattern(row, rowOffset, counters);\n    var bestVariance = Code128Reader.MAX_AVG_VARIANCE; // worst variance we'll accept\n\n    var bestMatch = -1;\n\n    for (var d = 0; d < Code128Reader.CODE_PATTERNS.length; d++) {\n      var pattern = Code128Reader.CODE_PATTERNS[d];\n      var variance = this.patternMatchVariance(counters, pattern, Code128Reader.MAX_INDIVIDUAL_VARIANCE);\n\n      if (variance < bestVariance) {\n        bestVariance = variance;\n        bestMatch = d;\n      }\n    } // TODO We're overlooking the fact that the STOP pattern has 7 values, not 6.\n\n\n    if (bestMatch >= 0) {\n      return bestMatch;\n    } else {\n      throw new NotFoundException_1.default();\n    }\n  };\n\n  Code128Reader.prototype.decodeRow = function (rowNumber, row, hints) {\n    var convertFNC1 = hints && hints.get(DecodeHintType_1.default.ASSUME_GS1) === true;\n    var startPatternInfo = Code128Reader.findStartPattern(row);\n    var startCode = startPatternInfo[2];\n    var currentRawCodesIndex = 0;\n    var rawCodes = new Uint8Array(20);\n    rawCodes[currentRawCodesIndex++] = startCode;\n    var codeSet;\n\n    switch (startCode) {\n      case Code128Reader.CODE_START_A:\n        codeSet = Code128Reader.CODE_CODE_A;\n        break;\n\n      case Code128Reader.CODE_START_B:\n        codeSet = Code128Reader.CODE_CODE_B;\n        break;\n\n      case Code128Reader.CODE_START_C:\n        codeSet = Code128Reader.CODE_CODE_C;\n        break;\n\n      default:\n        throw new FormatException_1.default();\n    }\n\n    var done = false;\n    var isNextShifted = false;\n    var result = '';\n    var lastStart = startPatternInfo[0];\n    var nextStart = startPatternInfo[1];\n    var counters = [0, 0, 0, 0, 0, 0];\n    var lastCode = 0;\n    var code = 0;\n    var checksumTotal = startCode;\n    var multiplier = 0;\n    var lastCharacterWasPrintable = true;\n    var upperMode = false;\n    var shiftUpperMode = false;\n\n    while (!done) {\n      var unshift = isNextShifted;\n      isNextShifted = false; // Save off last code\n\n      lastCode = code; // Decode another code from image\n\n      code = Code128Reader.decodeCode(row, counters, nextStart);\n      rawCodes[currentRawCodesIndex++] = code; // Remember whether the last code was printable or not (excluding CODE_STOP)\n\n      if (code !== Code128Reader.CODE_STOP) {\n        lastCharacterWasPrintable = true;\n      } // Add to checksum computation (if not CODE_STOP of course)\n\n\n      if (code !== Code128Reader.CODE_STOP) {\n        multiplier++;\n        checksumTotal += multiplier * code;\n      } // Advance to where the next code will to start\n\n\n      lastStart = nextStart;\n      nextStart += counters.reduce(function (previous, current) {\n        return previous + current;\n      }, 0); // Take care of illegal start codes\n\n      switch (code) {\n        case Code128Reader.CODE_START_A:\n        case Code128Reader.CODE_START_B:\n        case Code128Reader.CODE_START_C:\n          throw new FormatException_1.default();\n      }\n\n      switch (codeSet) {\n        case Code128Reader.CODE_CODE_A:\n          if (code < 64) {\n            if (shiftUpperMode === upperMode) {\n              result += String.fromCharCode(' '.charCodeAt(0) + code);\n            } else {\n              result += String.fromCharCode(' '.charCodeAt(0) + code + 128);\n            }\n\n            shiftUpperMode = false;\n          } else if (code < 96) {\n            if (shiftUpperMode === upperMode) {\n              result += String.fromCharCode(code - 64);\n            } else {\n              result += String.fromCharCode(code + 64);\n            }\n\n            shiftUpperMode = false;\n          } else {\n            // Don't let CODE_STOP, which always appears, affect whether whether we think the last\n            // code was printable or not.\n            if (code !== Code128Reader.CODE_STOP) {\n              lastCharacterWasPrintable = false;\n            }\n\n            switch (code) {\n              case Code128Reader.CODE_FNC_1:\n                if (convertFNC1) {\n                  if (result.length === 0) {\n                    // GS1 specification 5.4.3.7. and 5.4.6.4. If the first char after the start code\n                    // is FNC1 then this is GS1-128. We add the symbology identifier.\n                    result += ']C1';\n                  } else {\n                    // GS1 specification 5.4.7.5. Every subsequent FNC1 is returned as ASCII 29 (GS)\n                    result += String.fromCharCode(29);\n                  }\n                }\n\n                break;\n\n              case Code128Reader.CODE_FNC_2:\n              case Code128Reader.CODE_FNC_3:\n                // do nothing?\n                break;\n\n              case Code128Reader.CODE_FNC_4_A:\n                if (!upperMode && shiftUpperMode) {\n                  upperMode = true;\n                  shiftUpperMode = false;\n                } else if (upperMode && shiftUpperMode) {\n                  upperMode = false;\n                  shiftUpperMode = false;\n                } else {\n                  shiftUpperMode = true;\n                }\n\n                break;\n\n              case Code128Reader.CODE_SHIFT:\n                isNextShifted = true;\n                codeSet = Code128Reader.CODE_CODE_B;\n                break;\n\n              case Code128Reader.CODE_CODE_B:\n                codeSet = Code128Reader.CODE_CODE_B;\n                break;\n\n              case Code128Reader.CODE_CODE_C:\n                codeSet = Code128Reader.CODE_CODE_C;\n                break;\n\n              case Code128Reader.CODE_STOP:\n                done = true;\n                break;\n            }\n          }\n\n          break;\n\n        case Code128Reader.CODE_CODE_B:\n          if (code < 96) {\n            if (shiftUpperMode === upperMode) {\n              result += String.fromCharCode(' '.charCodeAt(0) + code);\n            } else {\n              result += String.fromCharCode(' '.charCodeAt(0) + code + 128);\n            }\n\n            shiftUpperMode = false;\n          } else {\n            if (code !== Code128Reader.CODE_STOP) {\n              lastCharacterWasPrintable = false;\n            }\n\n            switch (code) {\n              case Code128Reader.CODE_FNC_1:\n                if (convertFNC1) {\n                  if (result.length === 0) {\n                    // GS1 specification 5.4.3.7. and 5.4.6.4. If the first char after the start code\n                    // is FNC1 then this is GS1-128. We add the symbology identifier.\n                    result += ']C1';\n                  } else {\n                    // GS1 specification 5.4.7.5. Every subsequent FNC1 is returned as ASCII 29 (GS)\n                    result += String.fromCharCode(29);\n                  }\n                }\n\n                break;\n\n              case Code128Reader.CODE_FNC_2:\n              case Code128Reader.CODE_FNC_3:\n                // do nothing?\n                break;\n\n              case Code128Reader.CODE_FNC_4_B:\n                if (!upperMode && shiftUpperMode) {\n                  upperMode = true;\n                  shiftUpperMode = false;\n                } else if (upperMode && shiftUpperMode) {\n                  upperMode = false;\n                  shiftUpperMode = false;\n                } else {\n                  shiftUpperMode = true;\n                }\n\n                break;\n\n              case Code128Reader.CODE_SHIFT:\n                isNextShifted = true;\n                codeSet = Code128Reader.CODE_CODE_A;\n                break;\n\n              case Code128Reader.CODE_CODE_A:\n                codeSet = Code128Reader.CODE_CODE_A;\n                break;\n\n              case Code128Reader.CODE_CODE_C:\n                codeSet = Code128Reader.CODE_CODE_C;\n                break;\n\n              case Code128Reader.CODE_STOP:\n                done = true;\n                break;\n            }\n          }\n\n          break;\n\n        case Code128Reader.CODE_CODE_C:\n          if (code < 100) {\n            if (code < 10) {\n              result += '0';\n            }\n\n            result += code;\n          } else {\n            if (code !== Code128Reader.CODE_STOP) {\n              lastCharacterWasPrintable = false;\n            }\n\n            switch (code) {\n              case Code128Reader.CODE_FNC_1:\n                if (convertFNC1) {\n                  if (result.length === 0) {\n                    // GS1 specification 5.4.3.7. and 5.4.6.4. If the first char after the start code\n                    // is FNC1 then this is GS1-128. We add the symbology identifier.\n                    result += ']C1';\n                  } else {\n                    // GS1 specification 5.4.7.5. Every subsequent FNC1 is returned as ASCII 29 (GS)\n                    result += String.fromCharCode(29);\n                  }\n                }\n\n                break;\n\n              case Code128Reader.CODE_CODE_A:\n                codeSet = Code128Reader.CODE_CODE_A;\n                break;\n\n              case Code128Reader.CODE_CODE_B:\n                codeSet = Code128Reader.CODE_CODE_B;\n                break;\n\n              case Code128Reader.CODE_STOP:\n                done = true;\n                break;\n            }\n          }\n\n          break;\n      } // Unshift back to another code set if we were shifted\n\n\n      if (unshift) {\n        codeSet = codeSet === Code128Reader.CODE_CODE_A ? Code128Reader.CODE_CODE_B : Code128Reader.CODE_CODE_A;\n      }\n    }\n\n    var lastPatternSize = nextStart - lastStart; // Check for ample whitespace following pattern, but, to do this we first need to remember that\n    // we fudged decoding CODE_STOP since it actually has 7 bars, not 6. There is a black bar left\n    // to read off. Would be slightly better to properly read. Here we just skip it:\n\n    nextStart = row.getNextUnset(nextStart);\n\n    if (!row.isRange(nextStart, Math.min(row.getSize(), nextStart + (nextStart - lastStart) / 2), false)) {\n      throw new NotFoundException_1.default();\n    } // Pull out from sum the value of the penultimate check code\n\n\n    checksumTotal -= multiplier * lastCode; // lastCode is the checksum then:\n\n    if (checksumTotal % 103 !== lastCode) {\n      throw new ChecksumException_1.default();\n    } // Need to pull out the check digits from string\n\n\n    var resultLength = result.length;\n\n    if (resultLength === 0) {\n      // false positive\n      throw new NotFoundException_1.default();\n    } // Only bother if the result had at least one character, and if the checksum digit happened to\n    // be a printable character. If it was just interpreted as a control code, nothing to remove.\n\n\n    if (resultLength > 0 && lastCharacterWasPrintable) {\n      if (codeSet === Code128Reader.CODE_CODE_C) {\n        result = result.substring(0, resultLength - 2);\n      } else {\n        result = result.substring(0, resultLength - 1);\n      }\n    }\n\n    var left = (startPatternInfo[1] + startPatternInfo[0]) / 2.0;\n    var right = lastStart + lastPatternSize / 2.0;\n    var rawCodesSize = rawCodes.length;\n    var rawBytes = new Uint8Array(rawCodesSize);\n\n    for (var i = 0; i < rawCodesSize; i++) {\n      rawBytes[i] = rawCodes[i];\n    }\n\n    var points = [new ResultPoint_1.default(left, rowNumber), new ResultPoint_1.default(right, rowNumber)];\n    return new Result_1.default(result, rawBytes, 0, points, BarcodeFormat_1.default.CODE_128, new Date().getTime());\n  };\n\n  Code128Reader.CODE_PATTERNS = [[2, 1, 2, 2, 2, 2], [2, 2, 2, 1, 2, 2], [2, 2, 2, 2, 2, 1], [1, 2, 1, 2, 2, 3], [1, 2, 1, 3, 2, 2], [1, 3, 1, 2, 2, 2], [1, 2, 2, 2, 1, 3], [1, 2, 2, 3, 1, 2], [1, 3, 2, 2, 1, 2], [2, 2, 1, 2, 1, 3], [2, 2, 1, 3, 1, 2], [2, 3, 1, 2, 1, 2], [1, 1, 2, 2, 3, 2], [1, 2, 2, 1, 3, 2], [1, 2, 2, 2, 3, 1], [1, 1, 3, 2, 2, 2], [1, 2, 3, 1, 2, 2], [1, 2, 3, 2, 2, 1], [2, 2, 3, 2, 1, 1], [2, 2, 1, 1, 3, 2], [2, 2, 1, 2, 3, 1], [2, 1, 3, 2, 1, 2], [2, 2, 3, 1, 1, 2], [3, 1, 2, 1, 3, 1], [3, 1, 1, 2, 2, 2], [3, 2, 1, 1, 2, 2], [3, 2, 1, 2, 2, 1], [3, 1, 2, 2, 1, 2], [3, 2, 2, 1, 1, 2], [3, 2, 2, 2, 1, 1], [2, 1, 2, 1, 2, 3], [2, 1, 2, 3, 2, 1], [2, 3, 2, 1, 2, 1], [1, 1, 1, 3, 2, 3], [1, 3, 1, 1, 2, 3], [1, 3, 1, 3, 2, 1], [1, 1, 2, 3, 1, 3], [1, 3, 2, 1, 1, 3], [1, 3, 2, 3, 1, 1], [2, 1, 1, 3, 1, 3], [2, 3, 1, 1, 1, 3], [2, 3, 1, 3, 1, 1], [1, 1, 2, 1, 3, 3], [1, 1, 2, 3, 3, 1], [1, 3, 2, 1, 3, 1], [1, 1, 3, 1, 2, 3], [1, 1, 3, 3, 2, 1], [1, 3, 3, 1, 2, 1], [3, 1, 3, 1, 2, 1], [2, 1, 1, 3, 3, 1], [2, 3, 1, 1, 3, 1], [2, 1, 3, 1, 1, 3], [2, 1, 3, 3, 1, 1], [2, 1, 3, 1, 3, 1], [3, 1, 1, 1, 2, 3], [3, 1, 1, 3, 2, 1], [3, 3, 1, 1, 2, 1], [3, 1, 2, 1, 1, 3], [3, 1, 2, 3, 1, 1], [3, 3, 2, 1, 1, 1], [3, 1, 4, 1, 1, 1], [2, 2, 1, 4, 1, 1], [4, 3, 1, 1, 1, 1], [1, 1, 1, 2, 2, 4], [1, 1, 1, 4, 2, 2], [1, 2, 1, 1, 2, 4], [1, 2, 1, 4, 2, 1], [1, 4, 1, 1, 2, 2], [1, 4, 1, 2, 2, 1], [1, 1, 2, 2, 1, 4], [1, 1, 2, 4, 1, 2], [1, 2, 2, 1, 1, 4], [1, 2, 2, 4, 1, 1], [1, 4, 2, 1, 1, 2], [1, 4, 2, 2, 1, 1], [2, 4, 1, 2, 1, 1], [2, 2, 1, 1, 1, 4], [4, 1, 3, 1, 1, 1], [2, 4, 1, 1, 1, 2], [1, 3, 4, 1, 1, 1], [1, 1, 1, 2, 4, 2], [1, 2, 1, 1, 4, 2], [1, 2, 1, 2, 4, 1], [1, 1, 4, 2, 1, 2], [1, 2, 4, 1, 1, 2], [1, 2, 4, 2, 1, 1], [4, 1, 1, 2, 1, 2], [4, 2, 1, 1, 1, 2], [4, 2, 1, 2, 1, 1], [2, 1, 2, 1, 4, 1], [2, 1, 4, 1, 2, 1], [4, 1, 2, 1, 2, 1], [1, 1, 1, 1, 4, 3], [1, 1, 1, 3, 4, 1], [1, 3, 1, 1, 4, 1], [1, 1, 4, 1, 1, 3], [1, 1, 4, 3, 1, 1], [4, 1, 1, 1, 1, 3], [4, 1, 1, 3, 1, 1], [1, 1, 3, 1, 4, 1], [1, 1, 4, 1, 3, 1], [3, 1, 1, 1, 4, 1], [4, 1, 1, 1, 3, 1], [2, 1, 1, 4, 1, 2], [2, 1, 1, 2, 1, 4], [2, 1, 1, 2, 3, 2], [2, 3, 3, 1, 1, 1, 2]];\n  Code128Reader.MAX_AVG_VARIANCE = 0.25;\n  Code128Reader.MAX_INDIVIDUAL_VARIANCE = 0.7;\n  Code128Reader.CODE_SHIFT = 98;\n  Code128Reader.CODE_CODE_C = 99;\n  Code128Reader.CODE_CODE_B = 100;\n  Code128Reader.CODE_CODE_A = 101;\n  Code128Reader.CODE_FNC_1 = 102;\n  Code128Reader.CODE_FNC_2 = 97;\n  Code128Reader.CODE_FNC_3 = 96;\n  Code128Reader.CODE_FNC_4_A = 101;\n  Code128Reader.CODE_FNC_4_B = 100;\n  Code128Reader.CODE_START_A = 103;\n  Code128Reader.CODE_START_B = 104;\n  Code128Reader.CODE_START_C = 105;\n  Code128Reader.CODE_STOP = 106;\n  return Code128Reader;\n}(OneDReader_1.default);\n\nexports.default = Code128Reader;","map":{"version":3,"mappings":"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","names":["__extends","Code128Reader","row","width","getSize","rowOffset","getNextSet","counterPosition","counters","patternStart","isWhite","patternLength","i","get","bestVariance","MAX_AVG_VARIANCE","bestMatch","startCode","CODE_START_A","CODE_START_C","variance","OneDReader_1","patternMatchVariance","CODE_PATTERNS","MAX_INDIVIDUAL_VARIANCE","isRange","Math","max","splice","NotFoundException_1","recordPattern","d","length","pattern","rowNumber","hints","convertFNC1","DecodeHintType_1","ASSUME_GS1","startPatternInfo","findStartPattern","currentRawCodesIndex","rawCodes","Uint8Array","codeSet","CODE_CODE_A","CODE_START_B","CODE_CODE_B","CODE_CODE_C","FormatException_1","done","isNextShifted","result","lastStart","nextStart","lastCode","code","checksumTotal","multiplier","lastCharacterWasPrintable","upperMode","shiftUpperMode","unshift","decodeCode","CODE_STOP","reduce","previous","current","String","fromCharCode","charCodeAt","CODE_FNC_1","CODE_FNC_2","CODE_FNC_3","CODE_FNC_4_A","CODE_SHIFT","CODE_FNC_4_B","lastPatternSize","getNextUnset","min","ChecksumException_1","resultLength","substring","left","right","rawCodesSize","rawBytes","points","ResultPoint_1","Result_1","BarcodeFormat_1","CODE_128","Date","getTime"],"sources":["../../../src/core/oned/Code128Reader.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}