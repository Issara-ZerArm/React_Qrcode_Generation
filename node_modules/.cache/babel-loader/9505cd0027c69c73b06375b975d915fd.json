{"ast":null,"code":"\"use strict\";\n/*\n * Copyright (C) 2010 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\"); // import UPCEANReader from './UPCEANReader';\n\n\nvar AbstractUPCEANReader_1 = require(\"./AbstractUPCEANReader\");\n\nvar Result_1 = require(\"../Result\");\n\nvar ResultPoint_1 = require(\"../ResultPoint\");\n\nvar ResultMetadataType_1 = require(\"../ResultMetadataType\");\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/**\n * @see UPCEANExtension2Support\n */\n\n\nvar UPCEANExtension5Support =\n/** @class */\nfunction () {\n  function UPCEANExtension5Support() {\n    this.CHECK_DIGIT_ENCODINGS = [0x18, 0x14, 0x12, 0x11, 0x0C, 0x06, 0x03, 0x0A, 0x09, 0x05];\n    this.decodeMiddleCounters = [0, 0, 0, 0];\n    this.decodeRowStringBuffer = '';\n  }\n\n  UPCEANExtension5Support.prototype.decodeRow = function (rowNumber, row, extensionStartRange) {\n    var result = this.decodeRowStringBuffer;\n    var end = this.decodeMiddle(row, extensionStartRange, result);\n    var resultString = result.toString();\n    var extensionData = UPCEANExtension5Support.parseExtensionString(resultString);\n    var resultPoints = [new ResultPoint_1.default((extensionStartRange[0] + extensionStartRange[1]) / 2.0, rowNumber), new ResultPoint_1.default(end, rowNumber)];\n    var extensionResult = new Result_1.default(resultString, null, 0, resultPoints, BarcodeFormat_1.default.UPC_EAN_EXTENSION, new Date().getTime());\n\n    if (extensionData != null) {\n      extensionResult.putAllMetadata(extensionData);\n    }\n\n    return extensionResult;\n  };\n\n  UPCEANExtension5Support.prototype.decodeMiddle = function (row, startRange, resultString) {\n    var e_1, _a;\n\n    var counters = this.decodeMiddleCounters;\n    counters[0] = 0;\n    counters[1] = 0;\n    counters[2] = 0;\n    counters[3] = 0;\n    var end = row.getSize();\n    var rowOffset = startRange[1];\n    var lgPatternFound = 0;\n\n    for (var x = 0; x < 5 && rowOffset < end; x++) {\n      var bestMatch = AbstractUPCEANReader_1.default.decodeDigit(row, counters, rowOffset, AbstractUPCEANReader_1.default.L_AND_G_PATTERNS);\n      resultString += String.fromCharCode('0'.charCodeAt(0) + bestMatch % 10);\n\n      try {\n        for (var counters_1 = __values(counters), counters_1_1 = counters_1.next(); !counters_1_1.done; counters_1_1 = counters_1.next()) {\n          var counter = counters_1_1.value;\n          rowOffset += counter;\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (counters_1_1 && !counters_1_1.done && (_a = counters_1.return)) _a.call(counters_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      if (bestMatch >= 10) {\n        lgPatternFound |= 1 << 4 - x;\n      }\n\n      if (x !== 4) {\n        // Read off separator if not last\n        rowOffset = row.getNextSet(rowOffset);\n        rowOffset = row.getNextUnset(rowOffset);\n      }\n    }\n\n    if (resultString.length !== 5) {\n      throw new NotFoundException_1.default();\n    }\n\n    var checkDigit = this.determineCheckDigit(lgPatternFound);\n\n    if (UPCEANExtension5Support.extensionChecksum(resultString.toString()) !== checkDigit) {\n      throw new NotFoundException_1.default();\n    }\n\n    return rowOffset;\n  };\n\n  UPCEANExtension5Support.extensionChecksum = function (s) {\n    var length = s.length;\n    var sum = 0;\n\n    for (var i = length - 2; i >= 0; i -= 2) {\n      sum += s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n    }\n\n    sum *= 3;\n\n    for (var i = length - 1; i >= 0; i -= 2) {\n      sum += s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n    }\n\n    sum *= 3;\n    return sum % 10;\n  };\n\n  UPCEANExtension5Support.prototype.determineCheckDigit = function (lgPatternFound) {\n    for (var d = 0; d < 10; d++) {\n      if (lgPatternFound === this.CHECK_DIGIT_ENCODINGS[d]) {\n        return d;\n      }\n    }\n\n    throw new NotFoundException_1.default();\n  };\n\n  UPCEANExtension5Support.parseExtensionString = function (raw) {\n    if (raw.length !== 5) {\n      return null;\n    }\n\n    var value = UPCEANExtension5Support.parseExtension5String(raw);\n\n    if (value == null) {\n      return null;\n    }\n\n    return new Map([[ResultMetadataType_1.default.SUGGESTED_PRICE, value]]);\n  };\n\n  UPCEANExtension5Support.parseExtension5String = function (raw) {\n    var currency;\n\n    switch (raw.charAt(0)) {\n      case '0':\n        currency = 'Â£';\n        break;\n\n      case '5':\n        currency = '$';\n        break;\n\n      case '9':\n        // Reference: http://www.jollytech.com\n        switch (raw) {\n          case '90000':\n            // No suggested retail price\n            return null;\n\n          case '99991':\n            // Complementary\n            return '0.00';\n\n          case '99990':\n            return 'Used';\n        } // Otherwise... unknown currency?\n\n\n        currency = '';\n        break;\n\n      default:\n        currency = '';\n        break;\n    }\n\n    var rawAmount = parseInt(raw.substring(1));\n    var unitsString = (rawAmount / 100).toString();\n    var hundredths = rawAmount % 100;\n    var hundredthsString = hundredths < 10 ? '0' + hundredths : hundredths.toString(); // fixme\n\n    return currency + unitsString + '.' + hundredthsString;\n  };\n\n  return UPCEANExtension5Support;\n}();\n\nexports.default = UPCEANExtension5Support;","map":{"version":3,"mappings":"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","names":["UPCEANExtension5Support","rowNumber","row","extensionStartRange","result","decodeRowStringBuffer","end","decodeMiddle","resultString","toString","extensionData","parseExtensionString","resultPoints","ResultPoint_1","extensionResult","Result_1","BarcodeFormat_1","UPC_EAN_EXTENSION","Date","getTime","putAllMetadata","startRange","counters","decodeMiddleCounters","getSize","rowOffset","lgPatternFound","x","bestMatch","AbstractUPCEANReader_1","decodeDigit","L_AND_G_PATTERNS","String","fromCharCode","charCodeAt","counters_1_1","counter","getNextSet","getNextUnset","length","NotFoundException_1","checkDigit","determineCheckDigit","extensionChecksum","s","sum","i","charAt","d","CHECK_DIGIT_ENCODINGS","raw","value","parseExtension5String","Map","ResultMetadataType_1","SUGGESTED_PRICE","currency","rawAmount","parseInt","substring","unitsString","hundredths","hundredthsString"],"sources":["../../../src/core/oned/UPCEANExtension5Support.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}