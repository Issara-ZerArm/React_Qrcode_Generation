{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BrowserCodeReader_1 = require(\"./BrowserCodeReader\");\n\nvar MultiFormatReader_1 = require(\"../core/MultiFormatReader\");\n\nvar BrowserMultiFormatReader =\n/** @class */\nfunction (_super) {\n  __extends(BrowserMultiFormatReader, _super);\n\n  function BrowserMultiFormatReader(hints, timeBetweenScansMillis) {\n    if (hints === void 0) {\n      hints = null;\n    }\n\n    if (timeBetweenScansMillis === void 0) {\n      timeBetweenScansMillis = 500;\n    }\n\n    var _this = this;\n\n    var reader = new MultiFormatReader_1.default();\n    reader.setHints(hints);\n    _this = _super.call(this, reader, timeBetweenScansMillis) || this;\n    return _this;\n  }\n  /**\n   * Overwrite decodeBitmap to call decodeWithState, which will pay\n   * attention to the hints set in the constructor function\n   */\n\n\n  BrowserMultiFormatReader.prototype.decodeBitmap = function (binaryBitmap) {\n    return this.reader.decodeWithState(binaryBitmap);\n  };\n\n  return BrowserMultiFormatReader;\n}(BrowserCodeReader_1.BrowserCodeReader);\n\nexports.BrowserMultiFormatReader = BrowserMultiFormatReader;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAKA;AAAA;AAAA;AAA8CA;;AAI5C,oCACEC,KADF,EAEEC,sBAFF,EAEsC;AADpC;AAAAD;AAAsC;;AACtC;AAAAC;AAAoC;;AAFtC;;AAIE,QAAMC,MAAM,GAAG,IAAIC,2BAAJ,EAAf;AACAD,UAAM,CAACE,QAAP,CAAgBJ,KAAhB;AACAK,8BAAMH,MAAN,EAAcD,sBAAd,KAAqC,IAArC;;AACD;AAED;;;;;;AAIOK,oDAAP,UAAoBC,YAApB,EAA8C;AAC5C,WAAO,KAAKL,MAAL,CAAYM,eAAZ,CAA4BD,YAA5B,CAAP;AACD,GAFM;;AAGT;AApBA,EAA8CE,qCAA9C;;AAAaC","names":["__extends","hints","timeBetweenScansMillis","reader","MultiFormatReader_1","setHints","_this","BrowserMultiFormatReader","binaryBitmap","decodeWithState","BrowserCodeReader_1","exports"],"sources":["../../src/browser/BrowserMultiFormatReader.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}