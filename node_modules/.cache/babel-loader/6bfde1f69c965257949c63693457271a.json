{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2013 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // package com.google.zxing.pdf417.decoder;\n\n/**\n * @author Guenther Grau\n */\n\nvar Codeword =\n/** @class */\nfunction () {\n  function Codeword(startX, endX, bucket, value) {\n    this.rowNumber = Codeword.BARCODE_ROW_UNKNOWN;\n    this.startX = Math.trunc(startX);\n    this.endX = Math.trunc(endX);\n    this.bucket = Math.trunc(bucket);\n    this.value = Math.trunc(value);\n  }\n\n  Codeword.prototype.hasValidRowNumber = function () {\n    return this.isValidRowNumber(this.rowNumber);\n  };\n\n  Codeword.prototype.isValidRowNumber = function (rowNumber) {\n    return rowNumber !== Codeword.BARCODE_ROW_UNKNOWN && this.bucket === rowNumber % 3 * 3;\n  };\n\n  Codeword.prototype.setRowNumberAsRowIndicatorColumn = function () {\n    this.rowNumber = Math.trunc(Math.trunc(this.value / 30) * 3 + Math.trunc(this.bucket / 3));\n  };\n\n  Codeword.prototype.getWidth = function () {\n    return this.endX - this.startX;\n  };\n\n  Codeword.prototype.getStartX = function () {\n    return this.startX;\n  };\n\n  Codeword.prototype.getEndX = function () {\n    return this.endX;\n  };\n\n  Codeword.prototype.getBucket = function () {\n    return this.bucket;\n  };\n\n  Codeword.prototype.getValue = function () {\n    return this.value;\n  };\n\n  Codeword.prototype.getRowNumber = function () {\n    return this.rowNumber;\n  };\n\n  Codeword.prototype.setRowNumber = function (rowNumber) {\n    this.rowNumber = rowNumber;\n  }; //   @Override\n\n\n  Codeword.prototype.toString = function () {\n    return this.rowNumber + '|' + this.value;\n  };\n\n  Codeword.BARCODE_ROW_UNKNOWN = -1;\n  return Codeword;\n}();\n\nexports.default = Codeword;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;IAkBA;;AAEA;;;;AAGA;AAAA;AAAA;AAUE,oBAAYA,MAAZ,EAAyBC,IAAzB,EAAoCC,MAApC,EAAiDC,KAAjD,EAA2D;AAFnD,qBAAiBC,QAAQ,CAACC,mBAA1B;AAGN,SAAKL,MAAL,GAAcM,IAAI,CAACC,KAAL,CAAWP,MAAX,CAAd;AACA,SAAKC,IAAL,GAAYK,IAAI,CAACC,KAAL,CAAWN,IAAX,CAAZ;AACA,SAAKC,MAAL,GAAcI,IAAI,CAACC,KAAL,CAAWL,MAAX,CAAd;AACA,SAAKC,KAAL,GAAaG,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAb;AACD;;AAEDC;AACE,WAAO,KAAKI,gBAAL,CAAsB,KAAKC,SAA3B,CAAP;AACD,GAFD;;AAIAL,kDAAiBK,SAAjB,EAA+B;AAC7B,WAAOA,SAAS,KAAKL,QAAQ,CAACC,mBAAvB,IAA8C,KAAKH,MAAL,KAAiBO,SAAS,GAAG,CAAb,GAAkB,CAAvF;AACD,GAFD;;AAIAL;AACE,SAAKK,SAAL,GAAiBH,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACC,KAAL,CAAW,KAAKJ,KAAL,GAAa,EAAxB,CAAD,GAAgC,CAAhC,GAAoCG,IAAI,CAACC,KAAL,CAAW,KAAKL,MAAL,GAAc,CAAzB,CAA/C,CAAjB;AACD,GAFD;;AAIAE;AACE,WAAO,KAAKH,IAAL,GAAY,KAAKD,MAAxB;AACD,GAFD;;AAIAI;AACE,WAAO,KAAKJ,MAAZ;AACD,GAFD;;AAIAI;AACE,WAAO,KAAKH,IAAZ;AACD,GAFD;;AAIAG;AACE,WAAO,KAAKF,MAAZ;AACD,GAFD;;AAIAE;AACE,WAAO,KAAKD,KAAZ;AACD,GAFD;;AAIAC;AACE,WAAO,KAAKK,SAAZ;AACD,GAFD;;AAIAL,8CAAaK,SAAb,EAA2B;AACzB,SAAKA,SAAL,GAAiBA,SAAjB;AACD,GAFD,CArDF,CAyDA;;;AACUL,gCAAR;AACE,WAAO,KAAKK,SAAL,GAAiB,GAAjB,GAAuB,KAAKN,KAAnC;AACD,GAFO;;AAxDiBC,iCAA2B,CAAC,CAA5B;AA4D3B;AA9DA;;kBAA+BA","names":["startX","endX","bucket","value","Codeword","BARCODE_ROW_UNKNOWN","Math","trunc","isValidRowNumber","rowNumber"],"sources":["../../../../src/core/pdf417/decoder/Codeword.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}