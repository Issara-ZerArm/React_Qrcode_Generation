{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ResultPoint_1 = require(\"../../ResultPoint\");\n\nvar DetectorResult_1 = require(\"../../common/DetectorResult\");\n\nvar GridSamplerInstance_1 = require(\"../../common/GridSamplerInstance\");\n\nvar WhiteRectangleDetector_1 = require(\"../../common/detector/WhiteRectangleDetector\");\n\nvar NotFoundException_1 = require(\"../../NotFoundException\");\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * <p>Encapsulates logic that can detect a Data Matrix Code in an image, even if the Data Matrix Code\n * is rotated or skewed, or partially obscured.</p>\n *\n * @author Sean Owen\n */\n\n\nvar Detector =\n/** @class */\nfunction () {\n  function Detector(image) {\n    this.image = image;\n    this.rectangleDetector = new WhiteRectangleDetector_1.default(this.image);\n  }\n  /**\n   * <p>Detects a Data Matrix Code in an image.</p>\n   *\n   * @return {@link DetectorResult} encapsulating results of detecting a Data Matrix Code\n   * @throws NotFoundException if no Data Matrix Code can be found\n   */\n\n\n  Detector.prototype.detect = function () {\n    var cornerPoints = this.rectangleDetector.detect();\n    var points = this.detectSolid1(cornerPoints);\n    points = this.detectSolid2(points);\n    points[3] = this.correctTopRight(points);\n\n    if (!points[3]) {\n      throw new NotFoundException_1.default();\n    }\n\n    points = this.shiftToModuleCenter(points);\n    var topLeft = points[0];\n    var bottomLeft = points[1];\n    var bottomRight = points[2];\n    var topRight = points[3];\n    var dimensionTop = this.transitionsBetween(topLeft, topRight) + 1;\n    var dimensionRight = this.transitionsBetween(bottomRight, topRight) + 1;\n\n    if ((dimensionTop & 0x01) === 1) {\n      dimensionTop += 1;\n    }\n\n    if ((dimensionRight & 0x01) === 1) {\n      dimensionRight += 1;\n    }\n\n    if (4 * dimensionTop < 7 * dimensionRight && 4 * dimensionRight < 7 * dimensionTop) {\n      // The matrix is square\n      dimensionTop = dimensionRight = Math.max(dimensionTop, dimensionRight);\n    }\n\n    var bits = Detector.sampleGrid(this.image, topLeft, bottomLeft, bottomRight, topRight, dimensionTop, dimensionRight);\n    return new DetectorResult_1.default(bits, [topLeft, bottomLeft, bottomRight, topRight]);\n  };\n\n  Detector.shiftPoint = function (point, to, div) {\n    var x = (to.getX() - point.getX()) / (div + 1);\n    var y = (to.getY() - point.getY()) / (div + 1);\n    return new ResultPoint_1.default(point.getX() + x, point.getY() + y);\n  };\n\n  Detector.moveAway = function (point, fromX, fromY) {\n    var x = point.getX();\n    var y = point.getY();\n\n    if (x < fromX) {\n      x -= 1;\n    } else {\n      x += 1;\n    }\n\n    if (y < fromY) {\n      y -= 1;\n    } else {\n      y += 1;\n    }\n\n    return new ResultPoint_1.default(x, y);\n  };\n  /**\n   * Detect a solid side which has minimum transition.\n   */\n\n\n  Detector.prototype.detectSolid1 = function (cornerPoints) {\n    // 0  2\n    // 1  3\n    var pointA = cornerPoints[0];\n    var pointB = cornerPoints[1];\n    var pointC = cornerPoints[3];\n    var pointD = cornerPoints[2];\n    var trAB = this.transitionsBetween(pointA, pointB);\n    var trBC = this.transitionsBetween(pointB, pointC);\n    var trCD = this.transitionsBetween(pointC, pointD);\n    var trDA = this.transitionsBetween(pointD, pointA); // 0..3\n    // :  :\n    // 1--2\n\n    var min = trAB;\n    var points = [pointD, pointA, pointB, pointC];\n\n    if (min > trBC) {\n      min = trBC;\n      points[0] = pointA;\n      points[1] = pointB;\n      points[2] = pointC;\n      points[3] = pointD;\n    }\n\n    if (min > trCD) {\n      min = trCD;\n      points[0] = pointB;\n      points[1] = pointC;\n      points[2] = pointD;\n      points[3] = pointA;\n    }\n\n    if (min > trDA) {\n      points[0] = pointC;\n      points[1] = pointD;\n      points[2] = pointA;\n      points[3] = pointB;\n    }\n\n    return points;\n  };\n  /**\n   * Detect a second solid side next to first solid side.\n   */\n\n\n  Detector.prototype.detectSolid2 = function (points) {\n    // A..D\n    // :  :\n    // B--C\n    var pointA = points[0];\n    var pointB = points[1];\n    var pointC = points[2];\n    var pointD = points[3]; // Transition detection on the edge is not stable.\n    // To safely detect, shift the points to the module center.\n\n    var tr = this.transitionsBetween(pointA, pointD);\n    var pointBs = Detector.shiftPoint(pointB, pointC, (tr + 1) * 4);\n    var pointCs = Detector.shiftPoint(pointC, pointB, (tr + 1) * 4);\n    var trBA = this.transitionsBetween(pointBs, pointA);\n    var trCD = this.transitionsBetween(pointCs, pointD); // 0..3\n    // |  :\n    // 1--2\n\n    if (trBA < trCD) {\n      // solid sides: A-B-C\n      points[0] = pointA;\n      points[1] = pointB;\n      points[2] = pointC;\n      points[3] = pointD;\n    } else {\n      // solid sides: B-C-D\n      points[0] = pointB;\n      points[1] = pointC;\n      points[2] = pointD;\n      points[3] = pointA;\n    }\n\n    return points;\n  };\n  /**\n   * Calculates the corner position of the white top right module.\n   */\n\n\n  Detector.prototype.correctTopRight = function (points) {\n    // A..D\n    // |  :\n    // B--C\n    var pointA = points[0];\n    var pointB = points[1];\n    var pointC = points[2];\n    var pointD = points[3]; // shift points for safe transition detection.\n\n    var trTop = this.transitionsBetween(pointA, pointD);\n    var trRight = this.transitionsBetween(pointB, pointD);\n    var pointAs = Detector.shiftPoint(pointA, pointB, (trRight + 1) * 4);\n    var pointCs = Detector.shiftPoint(pointC, pointB, (trTop + 1) * 4);\n    trTop = this.transitionsBetween(pointAs, pointD);\n    trRight = this.transitionsBetween(pointCs, pointD);\n    var candidate1 = new ResultPoint_1.default(pointD.getX() + (pointC.getX() - pointB.getX()) / (trTop + 1), pointD.getY() + (pointC.getY() - pointB.getY()) / (trTop + 1));\n    var candidate2 = new ResultPoint_1.default(pointD.getX() + (pointA.getX() - pointB.getX()) / (trRight + 1), pointD.getY() + (pointA.getY() - pointB.getY()) / (trRight + 1));\n\n    if (!this.isValid(candidate1)) {\n      if (this.isValid(candidate2)) {\n        return candidate2;\n      }\n\n      return null;\n    }\n\n    if (!this.isValid(candidate2)) {\n      return candidate1;\n    }\n\n    var sumc1 = this.transitionsBetween(pointAs, candidate1) + this.transitionsBetween(pointCs, candidate1);\n    var sumc2 = this.transitionsBetween(pointAs, candidate2) + this.transitionsBetween(pointCs, candidate2);\n\n    if (sumc1 > sumc2) {\n      return candidate1;\n    } else {\n      return candidate2;\n    }\n  };\n  /**\n   * Shift the edge points to the module center.\n   */\n\n\n  Detector.prototype.shiftToModuleCenter = function (points) {\n    // A..D\n    // |  :\n    // B--C\n    var pointA = points[0];\n    var pointB = points[1];\n    var pointC = points[2];\n    var pointD = points[3]; // calculate pseudo dimensions\n\n    var dimH = this.transitionsBetween(pointA, pointD) + 1;\n    var dimV = this.transitionsBetween(pointC, pointD) + 1; // shift points for safe dimension detection\n\n    var pointAs = Detector.shiftPoint(pointA, pointB, dimV * 4);\n    var pointCs = Detector.shiftPoint(pointC, pointB, dimH * 4); //  calculate more precise dimensions\n\n    dimH = this.transitionsBetween(pointAs, pointD) + 1;\n    dimV = this.transitionsBetween(pointCs, pointD) + 1;\n\n    if ((dimH & 0x01) === 1) {\n      dimH += 1;\n    }\n\n    if ((dimV & 0x01) === 1) {\n      dimV += 1;\n    } // WhiteRectangleDetector returns points inside of the rectangle.\n    // I want points on the edges.\n\n\n    var centerX = (pointA.getX() + pointB.getX() + pointC.getX() + pointD.getX()) / 4;\n    var centerY = (pointA.getY() + pointB.getY() + pointC.getY() + pointD.getY()) / 4;\n    pointA = Detector.moveAway(pointA, centerX, centerY);\n    pointB = Detector.moveAway(pointB, centerX, centerY);\n    pointC = Detector.moveAway(pointC, centerX, centerY);\n    pointD = Detector.moveAway(pointD, centerX, centerY);\n    var pointBs;\n    var pointDs; // shift points to the center of each modules\n\n    pointAs = Detector.shiftPoint(pointA, pointB, dimV * 4);\n    pointAs = Detector.shiftPoint(pointAs, pointD, dimH * 4);\n    pointBs = Detector.shiftPoint(pointB, pointA, dimV * 4);\n    pointBs = Detector.shiftPoint(pointBs, pointC, dimH * 4);\n    pointCs = Detector.shiftPoint(pointC, pointD, dimV * 4);\n    pointCs = Detector.shiftPoint(pointCs, pointB, dimH * 4);\n    pointDs = Detector.shiftPoint(pointD, pointC, dimV * 4);\n    pointDs = Detector.shiftPoint(pointDs, pointA, dimH * 4);\n    return [pointAs, pointBs, pointCs, pointDs];\n  };\n\n  Detector.prototype.isValid = function (p) {\n    return p.getX() >= 0 && p.getX() < this.image.getWidth() && p.getY() > 0 && p.getY() < this.image.getHeight();\n  };\n\n  Detector.sampleGrid = function (image, topLeft, bottomLeft, bottomRight, topRight, dimensionX, dimensionY) {\n    var sampler = GridSamplerInstance_1.default.getInstance();\n    return sampler.sampleGrid(image, dimensionX, dimensionY, 0.5, 0.5, dimensionX - 0.5, 0.5, dimensionX - 0.5, dimensionY - 0.5, 0.5, dimensionY - 0.5, topLeft.getX(), topLeft.getY(), topRight.getX(), topRight.getY(), bottomRight.getX(), bottomRight.getY(), bottomLeft.getX(), bottomLeft.getY());\n  };\n  /**\n   * Counts the number of black/white transitions between two points, using something like Bresenham's algorithm.\n   */\n\n\n  Detector.prototype.transitionsBetween = function (from, to) {\n    // See QR Code Detector, sizeOfBlackWhiteBlackRun()\n    var fromX = Math.trunc(from.getX());\n    var fromY = Math.trunc(from.getY());\n    var toX = Math.trunc(to.getX());\n    var toY = Math.trunc(to.getY());\n    var steep = Math.abs(toY - fromY) > Math.abs(toX - fromX);\n\n    if (steep) {\n      var temp = fromX;\n      fromX = fromY;\n      fromY = temp;\n      temp = toX;\n      toX = toY;\n      toY = temp;\n    }\n\n    var dx = Math.abs(toX - fromX);\n    var dy = Math.abs(toY - fromY);\n    var error = -dx / 2;\n    var ystep = fromY < toY ? 1 : -1;\n    var xstep = fromX < toX ? 1 : -1;\n    var transitions = 0;\n    var inBlack = this.image.get(steep ? fromY : fromX, steep ? fromX : fromY);\n\n    for (var x = fromX, y = fromY; x !== toX; x += xstep) {\n      var isBlack = this.image.get(steep ? y : x, steep ? x : y);\n\n      if (isBlack !== inBlack) {\n        transitions++;\n        inBlack = isBlack;\n      }\n\n      error += dy;\n\n      if (error > 0) {\n        if (y === toY) {\n          break;\n        }\n\n        y += ystep;\n        error -= dx;\n      }\n    }\n\n    return transitions;\n  };\n\n  return Detector;\n}();\n\nexports.default = Detector;","map":{"version":3,"mappings":"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","names":["image","rectangleDetector","WhiteRectangleDetector_1","Detector","cornerPoints","detect","points","detectSolid1","detectSolid2","correctTopRight","NotFoundException_1","shiftToModuleCenter","topLeft","bottomLeft","bottomRight","topRight","dimensionTop","transitionsBetween","dimensionRight","Math","max","bits","sampleGrid","DetectorResult_1","point","to","div","x","getX","y","getY","ResultPoint_1","fromX","fromY","pointA","pointB","pointC","pointD","trAB","trBC","trCD","trDA","min","tr","pointBs","shiftPoint","pointCs","trBA","trTop","trRight","pointAs","candidate1","candidate2","isValid","sumc1","sumc2","dimH","dimV","centerX","centerY","moveAway","pointDs","p","getWidth","getHeight","dimensionX","dimensionY","sampler","GridSamplerInstance_1","getInstance","from","trunc","toX","toY","steep","abs","temp","dx","dy","error","ystep","xstep","transitions","inBlack","get","isBlack"],"sources":["../../../../src/core/datamatrix/detector/Detector.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}