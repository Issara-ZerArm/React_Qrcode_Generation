{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar AI01decoder_1 = require(\"./AI01decoder\");\n\nvar NotFoundException_1 = require(\"../../../../NotFoundException\");\n\nvar StringBuilder_1 = require(\"../../../../util/StringBuilder\");\n\nvar AI01392xDecoder =\n/** @class */\nfunction (_super) {\n  __extends(AI01392xDecoder, _super);\n\n  function AI01392xDecoder(information) {\n    return _super.call(this, information) || this;\n  }\n\n  AI01392xDecoder.prototype.parseInformation = function () {\n    if (this.getInformation().getSize() < AI01392xDecoder.HEADER_SIZE + AI01decoder_1.default.GTIN_SIZE) {\n      throw new NotFoundException_1.default();\n    }\n\n    var buf = new StringBuilder_1.default();\n    this.encodeCompressedGtin(buf, AI01392xDecoder.HEADER_SIZE);\n    var lastAIdigit = this.getGeneralDecoder().extractNumericValueFromBitArray(AI01392xDecoder.HEADER_SIZE + AI01decoder_1.default.GTIN_SIZE, AI01392xDecoder.LAST_DIGIT_SIZE);\n    buf.append(\"(392\");\n    buf.append(lastAIdigit);\n    buf.append(')');\n    var decodedInformation = this.getGeneralDecoder().decodeGeneralPurposeField(AI01392xDecoder.HEADER_SIZE + AI01decoder_1.default.GTIN_SIZE + AI01392xDecoder.LAST_DIGIT_SIZE, null);\n    buf.append(decodedInformation.getNewString());\n    return buf.toString();\n  };\n\n  AI01392xDecoder.HEADER_SIZE = 5 + 1 + 2;\n  AI01392xDecoder.LAST_DIGIT_SIZE = 2;\n  return AI01392xDecoder;\n}(AI01decoder_1.default);\n\nexports.default = AI01392xDecoder;","map":null,"metadata":{},"sourceType":"script"}