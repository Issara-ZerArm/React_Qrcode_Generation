{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2009 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing {*/\n\nvar System_1 = require(\"./util/System\");\n\nvar LuminanceSource_1 = require(\"./LuminanceSource\");\n\nvar InvertedLuminanceSource_1 = require(\"./InvertedLuminanceSource\");\n\nvar IllegalArgumentException_1 = require(\"./IllegalArgumentException\");\n/**\n * This object extends LuminanceSource around an array of YUV data returned from the camera driver,\n * with the option to crop to a rectangle within the full data. This can be used to exclude\n * superfluous pixels around the perimeter and speed up decoding.\n *\n * It works for any pixel format where the Y channel is planar and appears first, including\n * YCbCr_420_SP and YCbCr_422_SP.\n *\n * @author dswitkin@google.com (Daniel Switkin)\n */\n\n\nvar PlanarYUVLuminanceSource =\n/** @class */\nfunction (_super) {\n  __extends(PlanarYUVLuminanceSource, _super);\n\n  function PlanarYUVLuminanceSource(yuvData, dataWidth\n  /*int*/\n  , dataHeight\n  /*int*/\n  , left\n  /*int*/\n  , top\n  /*int*/\n  , width\n  /*int*/\n  , height\n  /*int*/\n  , reverseHorizontal) {\n    var _this = _super.call(this, width, height) || this;\n\n    _this.yuvData = yuvData;\n    _this.dataWidth = dataWidth;\n    _this.dataHeight = dataHeight;\n    _this.left = left;\n    _this.top = top;\n\n    if (left + width > dataWidth || top + height > dataHeight) {\n      throw new IllegalArgumentException_1.default('Crop rectangle does not fit within image data.');\n    }\n\n    if (reverseHorizontal) {\n      _this.reverseHorizontal(width, height);\n    }\n\n    return _this;\n  }\n  /*@Override*/\n\n\n  PlanarYUVLuminanceSource.prototype.getRow = function (y\n  /*int*/\n  , row) {\n    if (y < 0 || y >= this.getHeight()) {\n      throw new IllegalArgumentException_1.default('Requested row is outside the image: ' + y);\n    }\n\n    var width = this.getWidth();\n\n    if (row === null || row === undefined || row.length < width) {\n      row = new Uint8ClampedArray(width);\n    }\n\n    var offset = (y + this.top) * this.dataWidth + this.left;\n    System_1.default.arraycopy(this.yuvData, offset, row, 0, width);\n    return row;\n  };\n  /*@Override*/\n\n\n  PlanarYUVLuminanceSource.prototype.getMatrix = function () {\n    var width = this.getWidth();\n    var height = this.getHeight(); // If the caller asks for the entire underlying image, save the copy and give them the\n    // original data. The docs specifically warn that result.length must be ignored.\n\n    if (width === this.dataWidth && height === this.dataHeight) {\n      return this.yuvData;\n    }\n\n    var area = width * height;\n    var matrix = new Uint8ClampedArray(area);\n    var inputOffset = this.top * this.dataWidth + this.left; // If the width matches the full width of the underlying data, perform a single copy.\n\n    if (width === this.dataWidth) {\n      System_1.default.arraycopy(this.yuvData, inputOffset, matrix, 0, area);\n      return matrix;\n    } // Otherwise copy one cropped row at a time.\n\n\n    for (var y = 0; y < height; y++) {\n      var outputOffset = y * width;\n      System_1.default.arraycopy(this.yuvData, inputOffset, matrix, outputOffset, width);\n      inputOffset += this.dataWidth;\n    }\n\n    return matrix;\n  };\n  /*@Override*/\n\n\n  PlanarYUVLuminanceSource.prototype.isCropSupported = function () {\n    return true;\n  };\n  /*@Override*/\n\n\n  PlanarYUVLuminanceSource.prototype.crop = function (left\n  /*int*/\n  , top\n  /*int*/\n  , width\n  /*int*/\n  , height\n  /*int*/\n  ) {\n    return new PlanarYUVLuminanceSource(this.yuvData, this.dataWidth, this.dataHeight, this.left + left, this.top + top, width, height, false);\n  };\n\n  PlanarYUVLuminanceSource.prototype.renderThumbnail = function () {\n    var width = this.getWidth() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n    var height = this.getHeight() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n    var pixels = new Int32Array(width * height);\n    var yuv = this.yuvData;\n    var inputOffset = this.top * this.dataWidth + this.left;\n\n    for (var y = 0; y < height; y++) {\n      var outputOffset = y * width;\n\n      for (var x = 0; x < width; x++) {\n        var grey = yuv[inputOffset + x * PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR] & 0xff;\n        pixels[outputOffset + x] = 0xFF000000 | grey * 0x00010101;\n      }\n\n      inputOffset += this.dataWidth * PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n    }\n\n    return pixels;\n  };\n  /**\n   * @return width of image from {@link #renderThumbnail()}\n   */\n\n\n  PlanarYUVLuminanceSource.prototype.getThumbnailWidth = function () {\n    return this.getWidth() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n  };\n  /**\n   * @return height of image from {@link #renderThumbnail()}\n   */\n\n\n  PlanarYUVLuminanceSource.prototype.getThumbnailHeight = function () {\n    return this.getHeight() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n  };\n\n  PlanarYUVLuminanceSource.prototype.reverseHorizontal = function (width\n  /*int*/\n  , height\n  /*int*/\n  ) {\n    var yuvData = this.yuvData;\n\n    for (var y = 0, rowStart = this.top * this.dataWidth + this.left; y < height; y++, rowStart += this.dataWidth) {\n      var middle = rowStart + width / 2;\n\n      for (var x1 = rowStart, x2 = rowStart + width - 1; x1 < middle; x1++, x2--) {\n        var temp = yuvData[x1];\n        yuvData[x1] = yuvData[x2];\n        yuvData[x2] = temp;\n      }\n    }\n  };\n\n  PlanarYUVLuminanceSource.prototype.invert = function () {\n    return new InvertedLuminanceSource_1.default(this);\n  };\n\n  PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR = 2;\n  return PlanarYUVLuminanceSource;\n}(LuminanceSource_1.default);\n\nexports.default = PlanarYUVLuminanceSource;","map":{"version":3,"mappings":"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","names":["__extends","yuvData","dataWidth","dataHeight","left","top","width","height","reverseHorizontal","_super","_this","IllegalArgumentException_1","PlanarYUVLuminanceSource","y","row","getHeight","getWidth","undefined","length","Uint8ClampedArray","offset","System_1","arraycopy","area","matrix","inputOffset","outputOffset","THUMBNAIL_SCALE_FACTOR","pixels","Int32Array","yuv","x","grey","rowStart","middle","x1","x2","temp","InvertedLuminanceSource_1","LuminanceSource_1"],"sources":["../../src/core/PlanarYUVLuminanceSource.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}