{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar StringBuilder_1 = require(\"../../../../util/StringBuilder\");\n\nvar AbstractExpandedDecoder_1 = require(\"./AbstractExpandedDecoder\");\n\nvar AnyAIDecoder =\n/** @class */\nfunction (_super) {\n  __extends(AnyAIDecoder, _super);\n\n  function AnyAIDecoder(information) {\n    return _super.call(this, information) || this;\n  }\n\n  AnyAIDecoder.prototype.parseInformation = function () {\n    var buf = new StringBuilder_1.default();\n    return this.getGeneralDecoder().decodeAllCodes(buf, AnyAIDecoder.HEADER_SIZE);\n  };\n\n  AnyAIDecoder.HEADER_SIZE = 2 + 1 + 2;\n  return AnyAIDecoder;\n}(AbstractExpandedDecoder_1.default);\n\nexports.default = AnyAIDecoder;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AAGA;AAAA;AAAA;AAA0CA;;AAIxC,wBAAYC,WAAZ,EAAiC;WAC/BC,kBAAMD,WAAN,KAAkB;AACnB;;AAEME,4CAAP;AACE,QAAIC,GAAG,GAAG,IAAIC,uBAAJ,EAAV;AACA,WAAO,KAAKC,iBAAL,GAAyBC,cAAzB,CAAwCH,GAAxC,EAA6CD,YAAY,CAACK,WAA1D,CAAP;AACD,GAHM;;AANiBL,6BAAsB,IAAI,CAAJ,GAAQ,CAA9B;AAU1B;AAAC,CAZD,CAA0CM,iCAA1C;;kBAAqBN","names":["__extends","information","_super","AnyAIDecoder","buf","StringBuilder_1","getGeneralDecoder","decodeAllCodes","HEADER_SIZE","AbstractExpandedDecoder_1"],"sources":["../../../../../../src/core/oned/rss/expanded/decoders/AnyAIDecoder.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}