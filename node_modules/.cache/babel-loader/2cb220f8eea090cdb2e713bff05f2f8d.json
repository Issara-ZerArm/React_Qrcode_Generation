{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2007 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/**\n * Implementations of this class can, given locations of finder patterns for a QR code in an\n * image, sample the right points in the image to reconstruct the QR code, accounting for\n * perspective distortion. It is abstracted since it is relatively expensive and should be allowed\n * to take advantage of platform-specific optimized implementations, like Sun's Java Advanced\n * Imaging library, but which may not be available in other environments such as J2ME, and vice\n * versa.\n *\n * The implementation used can be controlled by calling {@link #setGridSampler(GridSampler)}\n * with an instance of a class which implements this interface.\n *\n * @author Sean Owen\n */\n\n\nvar GridSampler =\n/** @class */\nfunction () {\n  function GridSampler() {}\n  /**\n   * <p>Checks a set of points that have been transformed to sample points on an image against\n   * the image's dimensions to see if the point are even within the image.</p>\n   *\n   * <p>This method will actually \"nudge\" the endpoints back onto the image if they are found to be\n   * barely (less than 1 pixel) off the image. This accounts for imperfect detection of finder\n   * patterns in an image where the QR Code runs all the way to the image border.</p>\n   *\n   * <p>For efficiency, the method will check points from either end of the line until one is found\n   * to be within the image. Because the set of points are assumed to be linear, this is valid.</p>\n   *\n   * @param image image into which the points should map\n   * @param points actual points in x1,y1,...,xn,yn form\n   * @throws NotFoundException if an endpoint is lies outside the image boundaries\n   */\n\n\n  GridSampler.checkAndNudgePoints = function (image, points) {\n    var width = image.getWidth();\n    var height = image.getHeight(); // Check and nudge points from start until we see some that are OK:\n\n    var nudged = true;\n\n    for (var offset = 0; offset < points.length && nudged; offset += 2) {\n      var x = Math.floor(points[offset]);\n      var y = Math.floor(points[offset + 1]);\n\n      if (x < -1 || x > width || y < -1 || y > height) {\n        throw new NotFoundException_1.default();\n      }\n\n      nudged = false;\n\n      if (x === -1) {\n        points[offset] = 0.0;\n        nudged = true;\n      } else if (x === width) {\n        points[offset] = width - 1;\n        nudged = true;\n      }\n\n      if (y === -1) {\n        points[offset + 1] = 0.0;\n        nudged = true;\n      } else if (y === height) {\n        points[offset + 1] = height - 1;\n        nudged = true;\n      }\n    } // Check and nudge points from end:\n\n\n    nudged = true;\n\n    for (var offset = points.length - 2; offset >= 0 && nudged; offset -= 2) {\n      var x = Math.floor(points[offset]);\n      var y = Math.floor(points[offset + 1]);\n\n      if (x < -1 || x > width || y < -1 || y > height) {\n        throw new NotFoundException_1.default();\n      }\n\n      nudged = false;\n\n      if (x === -1) {\n        points[offset] = 0.0;\n        nudged = true;\n      } else if (x === width) {\n        points[offset] = width - 1;\n        nudged = true;\n      }\n\n      if (y === -1) {\n        points[offset + 1] = 0.0;\n        nudged = true;\n      } else if (y === height) {\n        points[offset + 1] = height - 1;\n        nudged = true;\n      }\n    }\n  };\n\n  return GridSampler;\n}();\n\nexports.default = GridSampler;","map":{"version":3,"mappings":"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","names":["GridSampler","image","points","width","getWidth","height","getHeight","nudged","offset","length","x","Math","floor","y","NotFoundException_1","exports"],"sources":["../../../src/core/common/GridSampler.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}