{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Test project\\\\Test Project\\\\react_qrcode_generation_scanner-main\\\\react_qrcode_generation_scanner-main\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, Card, CardContent, makeStyles, Grid } from '@material-ui/core';\nimport QrReader from 'react-qr-reader';\nimport Button from '@mui/material/Button';\nimport Beep from '../src/Assets/censor-beep-01.mp3';\nimport useSound from 'use-sound';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [scanResult, setScanResult] = useState('');\n  const classes = useStyles();\n  const [play] = useSound(Beep);\n\n  const handleErrorWebCam = error => {\n    console.log(error);\n  };\n\n  const handleScanWebCam = result => {\n    if (result) {\n      setScanResult(result);\n      play();\n    }\n  };\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.conatiner,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.title,\n        children: \"Qr Scan test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            '& > :not(style)': {\n              m: 1,\n              width: '25ch'\n            }\n          },\n          noValidate: true,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            label: \"Standard\",\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            children: \"Scan Qr Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          open: open,\n          onClose: handleClose,\n          \"aria-labelledby\": \"modal-modal-title\",\n          \"aria-describedby\": \"modal-modal-description\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: style,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Qr Code Scan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(QrReader, {\n                delay: 300,\n                style: {\n                  width: '100%',\n                  align: 'center'\n                },\n                onError: handleErrorWebCam,\n                onScan: handleScanWebCam\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"\\u0E1C\\u0E25\\u0E25\\u0E31\\u0E1E\\u0E17\\u0E4C: \", scanResult]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => setScanResult(\"\"),\n                children: \"Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MHJs3AXUpVxbViaPGNXbxwoX+iI=\", false, function () {\n  return [useStyles, useSound];\n});\n\n_c = App;\nconst useStyles = makeStyles(theme => ({\n  conatiner: {\n    marginTop: 10\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: '#E2E3FF',\n    color: '#00000',\n    padding: 20\n  }\n}));\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Project/Test project/Test Project/react_qrcode_generation_scanner-main/react_qrcode_generation_scanner-main/src/App.js"],"names":["React","useState","Container","Card","CardContent","makeStyles","Grid","QrReader","Button","Beep","useSound","TextField","Box","Typography","Modal","App","scanResult","setScanResult","classes","useStyles","play","handleErrorWebCam","error","console","log","handleScanWebCam","result","open","setOpen","handleOpen","handleClose","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","conatiner","title","m","align","theme","marginTop","display","justifyContent","alignItems","background","color","padding"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Container, Card, CardContent, makeStyles, Grid } from '@material-ui/core';\nimport QrReader from 'react-qr-reader';\nimport Button from '@mui/material/Button';\nimport Beep from '../src/Assets/censor-beep-01.mp3'\nimport useSound from 'use-sound';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\n\nfunction App() {\n  const [scanResult, setScanResult] = useState('');\n  const classes = useStyles();\n  const [play] = useSound(Beep);\n\n  const handleErrorWebCam = (error) => {\n    console.log(error);\n  }\n  const handleScanWebCam = (result) => {\n    if (result) {\n      setScanResult(result);\n      play()\n    }\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n  };\n  return (\n    <Container className={classes.conatiner}>\n      <Card>\n        <h2 className={classes.title}>Qr Scan test</h2>\n        <CardContent>\n        <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField id=\"standard-basic\" label=\"Standard\" variant=\"standard\" />\n      <Button variant=\"contained\">Scan Qr Code</Button>\n    </Box>\n     \n    <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n        <Grid>\n            <h3>Qr Code Scan</h3>\n            <QrReader\n              delay={300}\n              style={{ width: '100%', align: 'center' }}\n              onError={handleErrorWebCam}\n              onScan={handleScanWebCam}\n            />\n            <h3>ผลลัพท์: {scanResult}</h3>\n            <Button variant=\"contained\" onClick={() => setScanResult(\"\")}>Clear</Button>\n          </Grid>\n        </Box>\n      </Modal>\n         \n\n         \n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  conatiner: {\n    marginTop: 10\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: '#E2E3FF',\n    color: '#00000',\n    padding: 20\n  }\n\n}));\nexport default App;\n"]},"metadata":{},"sourceType":"module"}