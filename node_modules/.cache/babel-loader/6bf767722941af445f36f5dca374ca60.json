{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar library_1 = require(\"@zxing/library\");\n\nvar react_webcam_1 = __importDefault(require(\"react-webcam\"));\n\nvar BarcodeScannerComponent = function BarcodeScannerComponent(_ref) {\n  var onUpdate = _ref.onUpdate,\n      onError = _ref.onError,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"100%\" : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? \"100%\" : _ref$height,\n      _ref$facingMode = _ref.facingMode,\n      facingMode = _ref$facingMode === void 0 ? \"environment\" : _ref$facingMode,\n      torch = _ref.torch,\n      _ref$delay = _ref.delay,\n      delay = _ref$delay === void 0 ? 500 : _ref$delay,\n      videoConstraints = _ref.videoConstraints,\n      stopStream = _ref.stopStream;\n  var webcamRef = react_1.default.useRef(null);\n  var capture = react_1.default.useCallback(function () {\n    var _a;\n\n    var codeReader = new library_1.BrowserMultiFormatReader();\n    var imageSrc = (_a = webcamRef === null || webcamRef === void 0 ? void 0 : webcamRef.current) === null || _a === void 0 ? void 0 : _a.getScreenshot();\n\n    if (imageSrc) {\n      codeReader.decodeFromImage(undefined, imageSrc).then(function (result) {\n        onUpdate(null, result);\n      }).catch(function (err) {\n        onUpdate(err);\n      });\n    }\n  }, [onUpdate]);\n  react_1.default.useEffect(function () {\n    var _a, _b; // Turn on the flashlight if prop is defined and device has the capability\n\n\n    if (typeof torch === \"boolean\" && ((_a = // @ts-ignore\n    navigator === null || // @ts-ignore\n    navigator === void 0 ? void 0 : // @ts-ignore\n    navigator.mediaDevices) === null || _a === void 0 ? void 0 : _a.getSupportedConstraints().torch)) {\n      var stream = (_b = webcamRef === null || webcamRef === void 0 ? void 0 : webcamRef.current) === null || _b === void 0 ? void 0 : _b.video.srcObject;\n      var track = stream === null || stream === void 0 ? void 0 : stream.getVideoTracks()[0]; // get the active track of the stream\n\n      if (track && track.getCapabilities().torch && !track.getConstraints().torch) {\n        track.applyConstraints({\n          advanced: [{\n            torch: torch\n          }]\n        }).catch(function (err) {\n          return onUpdate(err);\n        });\n      }\n    }\n  }, [torch, onUpdate]);\n  react_1.default.useEffect(function () {\n    var _a;\n\n    if (stopStream) {\n      var stream = (_a = webcamRef === null || webcamRef === void 0 ? void 0 : webcamRef.current) === null || _a === void 0 ? void 0 : _a.video.srcObject;\n\n      if (stream) {\n        stream.getTracks().forEach(function (track) {\n          stream.removeTrack(track);\n          track.stop();\n        });\n        stream = null;\n      }\n    }\n  }, [stopStream]);\n  react_1.default.useEffect(function () {\n    var interval = setInterval(capture, delay);\n    return function () {\n      clearInterval(interval);\n    };\n  }, []);\n  return react_1.default.createElement(react_webcam_1.default, {\n    width: width,\n    height: height,\n    ref: webcamRef,\n    screenshotFormat: \"image/jpeg\",\n    videoConstraints: videoConstraints || {\n      facingMode: facingMode\n    },\n    audio: false,\n    onUserMediaError: onError\n  });\n};\n\nexports.default = BarcodeScannerComponent;","map":null,"metadata":{},"sourceType":"script"}