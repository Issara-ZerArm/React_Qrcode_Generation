{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2009 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // package com.google.zxing.pdf417;\n// import com.google.zxing.BarcodeFormat;\n\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\"); // import com.google.zxing.ChecksumException;\n\n\nvar ChecksumException_1 = require(\"../ChecksumException\"); // import com.google.zxing.FormatException;\n\n\nvar FormatException_1 = require(\"../FormatException\"); // import com.google.zxing.NotFoundException;\n\n\nvar NotFoundException_1 = require(\"../NotFoundException\"); // import com.google.zxing.Result;\n\n\nvar Result_1 = require(\"../Result\"); // import com.google.zxing.common.DecoderResult;\n// import com.google.zxing.multi.MultipleBarcodeReader;\n// import com.google.zxing.pdf417.decoder.PDF417ScanningDecoder;\n// import com.google.zxing.pdf417.detector.Detector;\n// import com.google.zxing.pdf417.detector.PDF417DetectorResult;\n\n\nvar PDF417Common_1 = require(\"./PDF417Common\");\n\nvar Integer_1 = require(\"../util/Integer\");\n\nvar ResultMetadataType_1 = require(\"../ResultMetadataType\");\n\nvar Detector_1 = require(\"./detector/Detector\");\n\nvar PDF417ScanningDecoder_1 = require(\"./decoder/PDF417ScanningDecoder\"); // import java.util.ArrayList;\n// import java.util.List;\n// import java.util.Map;\n\n/**\n * This implementation can detect and decode PDF417 codes in an image.\n *\n * @author Guenther Grau\n */\n\n\nvar PDF417Reader =\n/** @class */\nfunction () {\n  function PDF417Reader() {} // private static /*final Result[]*/ EMPTY_RESULT_ARRAY: Result[] = new Result([0]);\n\n  /**\n   * Locates and decodes a PDF417 code in an image.\n   *\n   * @return a String representing the content encoded by the PDF417 code\n   * @throws NotFoundException if a PDF417 code cannot be found,\n   * @throws FormatException if a PDF417 cannot be decoded\n   * @throws ChecksumException\n   */\n  // @Override\n\n\n  PDF417Reader.prototype.decode = function (image, hints) {\n    if (hints === void 0) {\n      hints = null;\n    }\n\n    var result = PDF417Reader.decode(image, hints, false);\n\n    if (result == null || result.length === 0 || result[0] == null) {\n      throw NotFoundException_1.default.getNotFoundInstance();\n    }\n\n    return result[0];\n  };\n  /**\n   *\n   * @param BinaryBitmap\n   * @param image\n   * @throws NotFoundException\n   */\n  //   @Override\n\n\n  PDF417Reader.prototype.decodeMultiple = function (image, hints) {\n    if (hints === void 0) {\n      hints = null;\n    }\n\n    try {\n      return PDF417Reader.decode(image, hints, true);\n    } catch (ignored) {\n      if (ignored instanceof FormatException_1.default || ignored instanceof ChecksumException_1.default) {\n        throw NotFoundException_1.default.getNotFoundInstance();\n      }\n\n      throw ignored;\n    }\n  };\n  /**\n   *\n   * @param image\n   * @param hints\n   * @param multiple\n   *\n   * @throws NotFoundException\n   * @throws FormatException√ü\n   * @throws ChecksumException\n   */\n\n\n  PDF417Reader.decode = function (image, hints, multiple) {\n    var e_1, _a;\n\n    var results = new Array();\n    var detectorResult = Detector_1.default.detectMultiple(image, hints, multiple);\n\n    try {\n      for (var _b = __values(detectorResult.getPoints()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var points = _c.value;\n        var decoderResult = PDF417ScanningDecoder_1.default.decode(detectorResult.getBits(), points[4], points[5], points[6], points[7], PDF417Reader.getMinCodewordWidth(points), PDF417Reader.getMaxCodewordWidth(points));\n        var result = new Result_1.default(decoderResult.getText(), decoderResult.getRawBytes(), undefined, points, BarcodeFormat_1.default.PDF_417);\n        result.putMetadata(ResultMetadataType_1.default.ERROR_CORRECTION_LEVEL, decoderResult.getECLevel());\n        var pdf417ResultMetadata = decoderResult.getOther();\n\n        if (pdf417ResultMetadata != null) {\n          result.putMetadata(ResultMetadataType_1.default.PDF417_EXTRA_METADATA, pdf417ResultMetadata);\n        }\n\n        results.push(result);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return results.map(function (x) {\n      return x;\n    });\n  };\n\n  PDF417Reader.getMaxWidth = function (p1, p2) {\n    if (p1 == null || p2 == null) {\n      return 0;\n    }\n\n    return Math.trunc(Math.abs(p1.getX() - p2.getX()));\n  };\n\n  PDF417Reader.getMinWidth = function (p1, p2) {\n    if (p1 == null || p2 == null) {\n      return Integer_1.default.MAX_VALUE;\n    }\n\n    return Math.trunc(Math.abs(p1.getX() - p2.getX()));\n  };\n\n  PDF417Reader.getMaxCodewordWidth = function (p) {\n    return Math.floor(Math.max(Math.max(PDF417Reader.getMaxWidth(p[0], p[4]), PDF417Reader.getMaxWidth(p[6], p[2]) * PDF417Common_1.default.MODULES_IN_CODEWORD / PDF417Common_1.default.MODULES_IN_STOP_PATTERN), Math.max(PDF417Reader.getMaxWidth(p[1], p[5]), PDF417Reader.getMaxWidth(p[7], p[3]) * PDF417Common_1.default.MODULES_IN_CODEWORD / PDF417Common_1.default.MODULES_IN_STOP_PATTERN)));\n  };\n\n  PDF417Reader.getMinCodewordWidth = function (p) {\n    return Math.floor(Math.min(Math.min(PDF417Reader.getMinWidth(p[0], p[4]), PDF417Reader.getMinWidth(p[6], p[2]) * PDF417Common_1.default.MODULES_IN_CODEWORD / PDF417Common_1.default.MODULES_IN_STOP_PATTERN), Math.min(PDF417Reader.getMinWidth(p[1], p[5]), PDF417Reader.getMinWidth(p[7], p[3]) * PDF417Common_1.default.MODULES_IN_CODEWORD / PDF417Common_1.default.MODULES_IN_STOP_PATTERN)));\n  }; // @Override\n\n\n  PDF417Reader.prototype.reset = function () {// nothing needs to be reset\n  };\n\n  return PDF417Reader;\n}();\n\nexports.default = PDF417Reader;","map":{"version":3,"mappings":"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","names":["PDF417Reader","image","hints","result","decode","length","NotFoundException_1","getNotFoundInstance","ignored","FormatException_1","ChecksumException_1","multiple","results","Array","detectorResult","Detector_1","detectMultiple","getPoints","_c","points","decoderResult","PDF417ScanningDecoder_1","getBits","getMinCodewordWidth","getMaxCodewordWidth","Result_1","getText","getRawBytes","undefined","BarcodeFormat_1","PDF_417","putMetadata","ResultMetadataType_1","ERROR_CORRECTION_LEVEL","getECLevel","pdf417ResultMetadata","getOther","PDF417_EXTRA_METADATA","push","map","p1","p2","Math","trunc","abs","getX","Integer_1","MAX_VALUE","p","floor","max","getMaxWidth","PDF417Common_1","MODULES_IN_CODEWORD","MODULES_IN_STOP_PATTERN","min","getMinWidth"],"sources":["../../../src/core/pdf417/PDF417Reader.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}