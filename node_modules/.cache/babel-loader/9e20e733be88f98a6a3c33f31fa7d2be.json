{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Test project\\\\Test Project\\\\react_qrcode_generation_scanner-main\\\\react_qrcode_generation_scanner-main\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, Card, CardContent, makeStyles, Grid } from '@material-ui/core';\nimport QrReader from 'react-qr-reader';\nimport Button from '@mui/material/Button';\nimport Beep from '../src/Assets/censor-beep-01.mp3';\nimport useSound from 'use-sound';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\nimport SendIcon from '@mui/icons-material/Send';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport FilledInput from '@mui/material/FilledInput';\nimport IconButton from '@mui/material/IconButton';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport DirectionsIcon from '@mui/icons-material/Directions';\nimport QrCode2Icon from '@mui/icons-material/QrCode2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [scanResult, setScanResult] = useState('');\n  const classes = useStyles();\n  const [play] = useSound(Beep);\n\n  const handleErrorWebCam = error => {\n    console.log(error);\n  };\n\n  const handleScanWebCam = result => {\n    if (result) {\n      play();\n      setScanResult(result);\n      setOpen(false);\n    }\n  };\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const [logs, setLog] = useState('');\n  const [stopStream, setStopStream] = useState(false);\n  const [flash, setflash] = useState(false);\n\n  const barcodeScannerComponentHandleUpdate = result => {\n    if (result) {\n      play();\n      setLog([...logs, result.text]);\n      setOpen(false);\n      setStopStream(true);\n    }\n  };\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.conatiner,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.title,\n        children: \"Qr Scan test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        component: \"form\",\n        sx: {\n          p: '2px 4px',\n          display: 'flex',\n          alignItems: 'center',\n          width: 400\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          sx: {\n            p: '10px'\n          },\n          \"aria-label\": \"menu\",\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n          sx: {\n            ml: 1,\n            flex: 1\n          },\n          placeholder: \"Search Google Maps\",\n          inputProps: {\n            'aria-label': 'search google maps'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          type: \"submit\",\n          sx: {\n            p: '10px'\n          },\n          \"aria-label\": \"search\",\n          children: /*#__PURE__*/_jsxDEV(QrCode2Icon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            height: 28,\n            m: 0.5\n          },\n          orientation: \"vertical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          sx: {\n            p: '10px'\n          },\n          \"aria-label\": \"directions\",\n          children: /*#__PURE__*/_jsxDEV(DirectionsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            '& > :not(style)': {\n              m: 1,\n              width: '25ch'\n            }\n          },\n          noValidate: true,\n          autoComplete: \"off\",\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"filled-adornment-password\",\n            value: scanResult,\n            onChange: e => setScanResult(e.target.value),\n            endAdornment: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: \"\",\n              edge: \"end\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleOpen,\n            children: \"Scan Qr Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: scanResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          open: open,\n          onClose: handleClose,\n          \"aria-labelledby\": \"modal-modal-title\",\n          \"aria-describedby\": \"modal-modal-description\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: style,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Qr Code Scan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(BarcodeScannerComponent, {\n                style: {\n                  width: '100%',\n                  align: 'center'\n                },\n                delay: 500,\n                torch: flash,\n                onUpdate: (err, result) => {\n                  if (result) {\n                    handleScanWebCam(result.text);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"\\u0E1C\\u0E25\\u0E25\\u0E31\\u0E1E\\u0E17\\u0E4C: \", scanResult]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => setScanResult(\"\"),\n                children: \"Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: () => setflash(true),\n                  children: \"On Flash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: () => setflash(false),\n                  children: \"Off Flash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Sd2RE0cSbv35GivSP/9YmGZDjKw=\", false, function () {\n  return [useStyles, useSound];\n});\n\n_c = App;\nconst useStyles = makeStyles(theme => ({\n  conatiner: {\n    marginTop: 10\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: '#E2E3FF',\n    color: '#00000',\n    padding: 20\n  }\n}));\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Project/Test project/Test Project/react_qrcode_generation_scanner-main/react_qrcode_generation_scanner-main/src/App.js"],"names":["React","useState","Container","Card","CardContent","makeStyles","Grid","QrReader","Button","Beep","useSound","TextField","Box","Typography","Modal","BarcodeScannerComponent","SendIcon","AccountCircle","InputAdornment","FormControl","FilledInput","IconButton","Paper","InputBase","Divider","MenuIcon","SearchIcon","DirectionsIcon","QrCode2Icon","App","scanResult","setScanResult","classes","useStyles","play","handleErrorWebCam","error","console","log","handleScanWebCam","result","setOpen","open","handleOpen","handleClose","logs","setLog","stopStream","setStopStream","flash","setflash","barcodeScannerComponentHandleUpdate","text","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","conatiner","title","display","alignItems","ml","flex","height","m","e","target","value","align","err","theme","marginTop","justifyContent","background","color","padding"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Container, Card, CardContent, makeStyles, Grid } from '@material-ui/core';\nimport QrReader from 'react-qr-reader';\nimport Button from '@mui/material/Button';\nimport Beep from '../src/Assets/censor-beep-01.mp3'\nimport useSound from 'use-sound';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\nimport SendIcon from '@mui/icons-material/Send';\n\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl'\nimport FilledInput from '@mui/material/FilledInput';\nimport IconButton from '@mui/material/IconButton';\n\n\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\n\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport DirectionsIcon from '@mui/icons-material/Directions';\nimport QrCode2Icon from '@mui/icons-material/QrCode2';\n\n\n\nfunction App() {\n  const [scanResult, setScanResult] = useState('');\n  const classes = useStyles();\n  const [play] = useSound(Beep);\n\n  const handleErrorWebCam = (error) => {\n    console.log(error);\n  }\n  const handleScanWebCam = (result) => {\n    if (result) {\n      play()\n      setScanResult(result);\n      setOpen(false)\n    }\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const [logs, setLog] = useState('');\n\n  const [stopStream, setStopStream] = useState(false)\n\n  const [flash, setflash] = useState(false)\n\n  const barcodeScannerComponentHandleUpdate = (result) => {\n    if (result) {\n      play()\n      setLog([...logs, result.text]);\n\n      setOpen(false)\n      setStopStream(true)\n    }\n  };\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n  };\n  return (\n    <Container className={classes.conatiner}>\n      <Card>\n        <h2 className={classes.title}>Qr Scan test</h2>\n\n        <Paper\n          component=\"form\"\n          sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: 400 }}\n        >\n          <IconButton sx={{ p: '10px' }} aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <InputBase\n            sx={{ ml: 1, flex: 1 }}\n            placeholder=\"Search Google Maps\"\n            inputProps={{ 'aria-label': 'search google maps' }}\n          />\n          <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\">\n            <QrCode2Icon />\n          </IconButton>\n          <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n          <IconButton color=\"primary\" sx={{ p: '10px' }} aria-label=\"directions\">\n            <DirectionsIcon />\n          </IconButton>\n        </Paper>\n\n        <CardContent>\n          <Box\n            component=\"form\"\n            sx={{\n              '& > :not(style)': { m: 1, width: '25ch' },\n            }}\n            noValidate\n            autoComplete=\"off\"\n            align=\"center\"\n          >\n\n            <TextField\n              id=\"filled-adornment-password\"\n              value={scanResult}\n              onChange={(e) => setScanResult(e.target.value)}\n              endAdornment={\n\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick=\"\"\n\n                  edge=\"end\"\n                >\n\n                </IconButton>\n\n              }\n            />\n            <Button variant=\"contained\" onClick={handleOpen}>Scan Qr Code</Button>\n            <p>{scanResult}</p>\n          </Box>\n\n          <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n          >\n            <Box sx={style}>\n              <Grid>\n                <h3>Qr Code Scan</h3>\n                {/* <BarcodeScannerComponent\n                  delay={300}\n                  style={{ width: '%', align: 'center' }}\n                  onError={handleErrorWebCam}\n                  onScan={handleScanWebCam}\n                /> */}\n\n                <BarcodeScannerComponent\n                  style={{ width: '100%', align: 'center' }}\n                  delay={500}\n                  torch={flash}\n                  onUpdate={(err, result) => {\n                    if (result) {\n                      handleScanWebCam(result.text);\n                    }\n\n                  }}\n                />\n\n                <h3>ผลลัพท์: {scanResult}</h3>\n                <Button variant=\"contained\" onClick={() => setScanResult(\"\")}>Clear</Button>\n                <div>\n                  <Button variant=\"contained\" onClick={() => setflash(true)}>On Flash</Button>\n                  <Button variant=\"contained\" onClick={() => setflash(false)}>Off Flash</Button>\n                </div>\n\n              </Grid>\n            </Box>\n          </Modal>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  conatiner: {\n    marginTop: 10\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: '#E2E3FF',\n    color: '#00000',\n    padding: 20\n  }\n\n}));\nexport default App;\n"]},"metadata":{},"sourceType":"module"}