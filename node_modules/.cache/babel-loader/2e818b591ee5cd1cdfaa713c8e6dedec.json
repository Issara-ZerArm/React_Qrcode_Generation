{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2007 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.common {*/\n\n/**\n * <p>This class implements a perspective transform in two dimensions. Given four source and four\n * destination points, it will compute the transformation implied between them. The code is based\n * directly upon section 3.4.2 of George Wolberg's \"Digital Image Warping\"; see pages 54-56.</p>\n *\n * @author Sean Owen\n */\n\nvar PerspectiveTransform =\n/** @class */\nfunction () {\n  function PerspectiveTransform(a11\n  /*float*/\n  , a21\n  /*float*/\n  , a31\n  /*float*/\n  , a12\n  /*float*/\n  , a22\n  /*float*/\n  , a32\n  /*float*/\n  , a13\n  /*float*/\n  , a23\n  /*float*/\n  , a33\n  /*float*/\n  ) {\n    this.a11 = a11;\n    this.a21 = a21;\n    this.a31 = a31;\n    this.a12 = a12;\n    this.a22 = a22;\n    this.a32 = a32;\n    this.a13 = a13;\n    this.a23 = a23;\n    this.a33 = a33;\n  }\n\n  PerspectiveTransform.quadrilateralToQuadrilateral = function (x0\n  /*float*/\n  , y0\n  /*float*/\n  , x1\n  /*float*/\n  , y1\n  /*float*/\n  , x2\n  /*float*/\n  , y2\n  /*float*/\n  , x3\n  /*float*/\n  , y3\n  /*float*/\n  , x0p\n  /*float*/\n  , y0p\n  /*float*/\n  , x1p\n  /*float*/\n  , y1p\n  /*float*/\n  , x2p\n  /*float*/\n  , y2p\n  /*float*/\n  , x3p\n  /*float*/\n  , y3p\n  /*float*/\n  ) {\n    var qToS = PerspectiveTransform.quadrilateralToSquare(x0, y0, x1, y1, x2, y2, x3, y3);\n    var sToQ = PerspectiveTransform.squareToQuadrilateral(x0p, y0p, x1p, y1p, x2p, y2p, x3p, y3p);\n    return sToQ.times(qToS);\n  };\n\n  PerspectiveTransform.prototype.transformPoints = function (points) {\n    var max = points.length;\n    var a11 = this.a11;\n    var a12 = this.a12;\n    var a13 = this.a13;\n    var a21 = this.a21;\n    var a22 = this.a22;\n    var a23 = this.a23;\n    var a31 = this.a31;\n    var a32 = this.a32;\n    var a33 = this.a33;\n\n    for (var i = 0; i < max; i += 2) {\n      var x = points[i];\n      var y = points[i + 1];\n      var denominator = a13 * x + a23 * y + a33;\n      points[i] = (a11 * x + a21 * y + a31) / denominator;\n      points[i + 1] = (a12 * x + a22 * y + a32) / denominator;\n    }\n  };\n\n  PerspectiveTransform.prototype.transformPointsWithValues = function (xValues, yValues) {\n    var a11 = this.a11;\n    var a12 = this.a12;\n    var a13 = this.a13;\n    var a21 = this.a21;\n    var a22 = this.a22;\n    var a23 = this.a23;\n    var a31 = this.a31;\n    var a32 = this.a32;\n    var a33 = this.a33;\n    var n = xValues.length;\n\n    for (var i = 0; i < n; i++) {\n      var x = xValues[i];\n      var y = yValues[i];\n      var denominator = a13 * x + a23 * y + a33;\n      xValues[i] = (a11 * x + a21 * y + a31) / denominator;\n      yValues[i] = (a12 * x + a22 * y + a32) / denominator;\n    }\n  };\n\n  PerspectiveTransform.squareToQuadrilateral = function (x0\n  /*float*/\n  , y0\n  /*float*/\n  , x1\n  /*float*/\n  , y1\n  /*float*/\n  , x2\n  /*float*/\n  , y2\n  /*float*/\n  , x3\n  /*float*/\n  , y3\n  /*float*/\n  ) {\n    var dx3 = x0 - x1 + x2 - x3;\n    var dy3 = y0 - y1 + y2 - y3;\n\n    if (dx3 === 0.0 && dy3 === 0.0) {\n      // Affine\n      return new PerspectiveTransform(x1 - x0, x2 - x1, x0, y1 - y0, y2 - y1, y0, 0.0, 0.0, 1.0);\n    } else {\n      var dx1 = x1 - x2;\n      var dx2 = x3 - x2;\n      var dy1 = y1 - y2;\n      var dy2 = y3 - y2;\n      var denominator = dx1 * dy2 - dx2 * dy1;\n      var a13 = (dx3 * dy2 - dx2 * dy3) / denominator;\n      var a23 = (dx1 * dy3 - dx3 * dy1) / denominator;\n      return new PerspectiveTransform(x1 - x0 + a13 * x1, x3 - x0 + a23 * x3, x0, y1 - y0 + a13 * y1, y3 - y0 + a23 * y3, y0, a13, a23, 1.0);\n    }\n  };\n\n  PerspectiveTransform.quadrilateralToSquare = function (x0\n  /*float*/\n  , y0\n  /*float*/\n  , x1\n  /*float*/\n  , y1\n  /*float*/\n  , x2\n  /*float*/\n  , y2\n  /*float*/\n  , x3\n  /*float*/\n  , y3\n  /*float*/\n  ) {\n    // Here, the adjoint serves as the inverse:\n    return PerspectiveTransform.squareToQuadrilateral(x0, y0, x1, y1, x2, y2, x3, y3).buildAdjoint();\n  };\n\n  PerspectiveTransform.prototype.buildAdjoint = function () {\n    // Adjoint is the transpose of the cofactor matrix:\n    return new PerspectiveTransform(this.a22 * this.a33 - this.a23 * this.a32, this.a23 * this.a31 - this.a21 * this.a33, this.a21 * this.a32 - this.a22 * this.a31, this.a13 * this.a32 - this.a12 * this.a33, this.a11 * this.a33 - this.a13 * this.a31, this.a12 * this.a31 - this.a11 * this.a32, this.a12 * this.a23 - this.a13 * this.a22, this.a13 * this.a21 - this.a11 * this.a23, this.a11 * this.a22 - this.a12 * this.a21);\n  };\n\n  PerspectiveTransform.prototype.times = function (other) {\n    return new PerspectiveTransform(this.a11 * other.a11 + this.a21 * other.a12 + this.a31 * other.a13, this.a11 * other.a21 + this.a21 * other.a22 + this.a31 * other.a23, this.a11 * other.a31 + this.a21 * other.a32 + this.a31 * other.a33, this.a12 * other.a11 + this.a22 * other.a12 + this.a32 * other.a13, this.a12 * other.a21 + this.a22 * other.a22 + this.a32 * other.a23, this.a12 * other.a31 + this.a22 * other.a32 + this.a32 * other.a33, this.a13 * other.a11 + this.a23 * other.a12 + this.a33 * other.a13, this.a13 * other.a21 + this.a23 * other.a22 + this.a33 * other.a23, this.a13 * other.a31 + this.a23 * other.a32 + this.a33 * other.a33);\n  };\n\n  return PerspectiveTransform;\n}();\n\nexports.default = PerspectiveTransform;","map":{"version":3,"mappings":"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","names":["a11","a21","a31","a12","a22","a32","a13","a23","a33","PerspectiveTransform","x0","y0","x1","y1","x2","y2","x3","y3","x0p","y0p","x1p","y1p","x2p","y2p","x3p","y3p","qToS","quadrilateralToSquare","sToQ","squareToQuadrilateral","times","points","max","length","i","x","y","denominator","xValues","yValues","n","dx3","dy3","dx1","dx2","dy1","dy2","buildAdjoint","other"],"sources":["../../../src/core/common/PerspectiveTransform.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}