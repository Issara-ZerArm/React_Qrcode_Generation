{"ast":null,"code":"\"use strict\";\n/*\n* Copyright 2013 ZXing authors\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*      http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // package com.google.zxing.pdf417.decoder;\n// import com.google.zxing.common.detector.MathUtils;\n\nvar MathUtils_1 = require(\"../../common/detector/MathUtils\"); // import com.google.zxing.pdf417.PDF417Common;\n\n\nvar PDF417Common_1 = require(\"../PDF417Common\");\n\nvar Float_1 = require(\"../../util/Float\");\n/**\n * @author Guenther Grau\n * @author creatale GmbH (christoph.schulz@creatale.de)\n */\n\n\nvar PDF417CodewordDecoder =\n/** @class */\nfunction () {\n  function PDF417CodewordDecoder() {}\n  /* @note\n   * this action have to be performed before first use of class\n   * - static constructor\n   * working with 32bit float (based from Java logic)\n  */\n\n\n  PDF417CodewordDecoder.initialize = function () {\n    // Pre-computes the symbol ratio table.\n    for (\n    /*int*/\n    var i = 0; i < PDF417Common_1.default.SYMBOL_TABLE.length; i++) {\n      var currentSymbol = PDF417Common_1.default.SYMBOL_TABLE[i];\n      var currentBit = currentSymbol & 0x1;\n\n      for (\n      /*int*/\n      var j = 0; j < PDF417Common_1.default.BARS_IN_MODULE; j++) {\n        var size = 0.0;\n\n        while ((currentSymbol & 0x1) === currentBit) {\n          size += 1.0;\n          currentSymbol >>= 1;\n        }\n\n        currentBit = currentSymbol & 0x1;\n\n        if (!PDF417CodewordDecoder.RATIOS_TABLE[i]) {\n          PDF417CodewordDecoder.RATIOS_TABLE[i] = new Array(PDF417Common_1.default.BARS_IN_MODULE);\n        }\n\n        PDF417CodewordDecoder.RATIOS_TABLE[i][PDF417Common_1.default.BARS_IN_MODULE - j - 1] = Math.fround(size / PDF417Common_1.default.MODULES_IN_CODEWORD);\n      }\n    }\n\n    this.bSymbolTableReady = true;\n  };\n\n  PDF417CodewordDecoder.getDecodedValue = function (moduleBitCount) {\n    var decodedValue = PDF417CodewordDecoder.getDecodedCodewordValue(PDF417CodewordDecoder.sampleBitCounts(moduleBitCount));\n\n    if (decodedValue !== -1) {\n      return decodedValue;\n    }\n\n    return PDF417CodewordDecoder.getClosestDecodedValue(moduleBitCount);\n  };\n\n  PDF417CodewordDecoder.sampleBitCounts = function (moduleBitCount) {\n    var bitCountSum = MathUtils_1.default.sum(moduleBitCount);\n    var result = new Int32Array(PDF417Common_1.default.BARS_IN_MODULE);\n    var bitCountIndex = 0;\n    var sumPreviousBits = 0;\n\n    for (\n    /*int*/\n    var i = 0; i < PDF417Common_1.default.MODULES_IN_CODEWORD; i++) {\n      var sampleIndex = bitCountSum / (2 * PDF417Common_1.default.MODULES_IN_CODEWORD) + i * bitCountSum / PDF417Common_1.default.MODULES_IN_CODEWORD;\n\n      if (sumPreviousBits + moduleBitCount[bitCountIndex] <= sampleIndex) {\n        sumPreviousBits += moduleBitCount[bitCountIndex];\n        bitCountIndex++;\n      }\n\n      result[bitCountIndex]++;\n    }\n\n    return result;\n  };\n\n  PDF417CodewordDecoder.getDecodedCodewordValue = function (moduleBitCount) {\n    var decodedValue = PDF417CodewordDecoder.getBitValue(moduleBitCount);\n    return PDF417Common_1.default.getCodeword(decodedValue) === -1 ? -1 : decodedValue;\n  };\n\n  PDF417CodewordDecoder.getBitValue = function (moduleBitCount) {\n    var result =\n    /*long*/\n    0;\n\n    for (var\n    /*int*/\n    i = 0; i < moduleBitCount.length; i++) {\n      for (\n      /*int*/\n      var bit = 0; bit < moduleBitCount[i]; bit++) {\n        result = result << 1 | (i % 2 === 0 ? 1 : 0);\n      }\n    }\n\n    return Math.trunc(result);\n  }; // working with 32bit float (as in Java)\n\n\n  PDF417CodewordDecoder.getClosestDecodedValue = function (moduleBitCount) {\n    var bitCountSum = MathUtils_1.default.sum(moduleBitCount);\n    var bitCountRatios = new Array(PDF417Common_1.default.BARS_IN_MODULE);\n\n    if (bitCountSum > 1) {\n      for (var\n      /*int*/\n      i = 0; i < bitCountRatios.length; i++) {\n        bitCountRatios[i] = Math.fround(moduleBitCount[i] / bitCountSum);\n      }\n    }\n\n    var bestMatchError = Float_1.default.MAX_VALUE;\n    var bestMatch = -1;\n\n    if (!this.bSymbolTableReady) {\n      PDF417CodewordDecoder.initialize();\n    }\n\n    for (\n    /*int*/\n    var j = 0; j < PDF417CodewordDecoder.RATIOS_TABLE.length; j++) {\n      var error = 0.0;\n      var ratioTableRow = PDF417CodewordDecoder.RATIOS_TABLE[j];\n\n      for (\n      /*int*/\n      var k = 0; k < PDF417Common_1.default.BARS_IN_MODULE; k++) {\n        var diff = Math.fround(ratioTableRow[k] - bitCountRatios[k]);\n        error += Math.fround(diff * diff);\n\n        if (error >= bestMatchError) {\n          break;\n        }\n      }\n\n      if (error < bestMatchError) {\n        bestMatchError = error;\n        bestMatch = PDF417Common_1.default.SYMBOL_TABLE[j];\n      }\n    }\n\n    return bestMatch;\n  }; // flag that the table is ready for use\n\n\n  PDF417CodewordDecoder.bSymbolTableReady = false;\n  PDF417CodewordDecoder.RATIOS_TABLE = new Array(PDF417Common_1.default.SYMBOL_TABLE.length).map(function (x) {\n    return x = new Array(PDF417Common_1.default.BARS_IN_MODULE);\n  });\n  return PDF417CodewordDecoder;\n}();\n\nexports.default = PDF417CodewordDecoder;","map":{"version":3,"mappings":"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","names":["PDF417CodewordDecoder","i","PDF417Common_1","SYMBOL_TABLE","length","currentSymbol","currentBit","j","BARS_IN_MODULE","size","RATIOS_TABLE","Array","Math","fround","MODULES_IN_CODEWORD","bSymbolTableReady","moduleBitCount","decodedValue","getDecodedCodewordValue","sampleBitCounts","getClosestDecodedValue","bitCountSum","MathUtils_1","sum","result","Int32Array","bitCountIndex","sumPreviousBits","sampleIndex","getBitValue","getCodeword","bit","trunc","bitCountRatios","bestMatchError","Float_1","MAX_VALUE","bestMatch","initialize","error","ratioTableRow","k","diff","map"],"sources":["../../../../src/core/pdf417/decoder/PDF417CodewordDecoder.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}