{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar AI01decoder_1 = require(\"./AI01decoder\");\n\nvar AI01weightDecoder =\n/** @class */\nfunction (_super) {\n  __extends(AI01weightDecoder, _super);\n\n  function AI01weightDecoder(information) {\n    return _super.call(this, information) || this;\n  }\n\n  AI01weightDecoder.prototype.encodeCompressedWeight = function (buf, currentPos, weightSize) {\n    var originalWeightNumeric = this.getGeneralDecoder().extractNumericValueFromBitArray(currentPos, weightSize);\n    this.addWeightCode(buf, originalWeightNumeric);\n    var weightNumeric = this.checkWeight(originalWeightNumeric);\n    var currentDivisor = 100000;\n\n    for (var i = 0; i < 5; ++i) {\n      if (weightNumeric / currentDivisor == 0) {\n        buf.append('0');\n      }\n\n      currentDivisor /= 10;\n    }\n\n    buf.append(weightNumeric);\n  };\n\n  return AI01weightDecoder;\n}(AI01decoder_1.default);\n\nexports.default = AI01weightDecoder;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEA;AAAA;AAAA;AAAwDA;;AAEtD,6BAAYC,WAAZ,EAAiC;WAC/BC,kBAAMD,WAAN,KAAkB;AACrB;;AAECE,iEAAuBC,GAAvB,EAA0CC,UAA1C,EAA6DC,UAA7D,EAA8E;AAC5E,QAAIC,qBAAqB,GAAG,KAAKC,iBAAL,GAAyBC,+BAAzB,CAAyDJ,UAAzD,EAAqEC,UAArE,CAA5B;AACA,SAAKI,aAAL,CAAmBN,GAAnB,EAAwBG,qBAAxB;AAEA,QAAII,aAAa,GAAG,KAAKC,WAAL,CAAiBL,qBAAjB,CAApB;AAEA,QAAIM,cAAc,GAAG,MAArB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuB,EAAEA,CAAzB,EAA4B;AAC1B,UAAIH,aAAa,GAAGE,cAAhB,IAAkC,CAAtC,EAAyC;AACvCT,WAAG,CAACW,MAAJ,CAAW,GAAX;AACD;;AACDF,oBAAc,IAAI,EAAlB;AACD;;AACDT,OAAG,CAACW,MAAJ,CAAWJ,aAAX;AACD,GAdD;;AAmBF;AAzBA,EAAwDK,qBAAxD","names":["__extends","information","_super","AI01weightDecoder","buf","currentPos","weightSize","originalWeightNumeric","getGeneralDecoder","extractNumericValueFromBitArray","addWeightCode","weightNumeric","checkWeight","currentDivisor","i","append","AI01decoder_1"],"sources":["../../../../../../src/core/oned/rss/expanded/decoders/AI01weightDecoder.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}