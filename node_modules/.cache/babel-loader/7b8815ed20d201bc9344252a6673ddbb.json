{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ts_custom_error_1 = require(\"ts-custom-error\");\n/**\n * Custom Error class of type Exception.\n */\n\n\nvar Exception =\n/** @class */\nfunction (_super) {\n  __extends(Exception, _super);\n  /**\n   * Allows Exception to be constructed directly\n   * with some message and prototype definition.\n   */\n\n\n  function Exception(message) {\n    if (message === void 0) {\n      message = undefined;\n    }\n\n    var _this = _super.call(this, message) || this;\n\n    _this.message = message;\n    return _this;\n  }\n\n  return Exception;\n}(ts_custom_error_1.CustomError);\n\nexports.default = Exception;","map":null,"metadata":{},"sourceType":"script"}