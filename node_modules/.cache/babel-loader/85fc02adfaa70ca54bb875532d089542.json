{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2009 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar LuminanceSource_1 = require(\"./LuminanceSource\");\n/*namespace com.google.zxing {*/\n\n/**\n * A wrapper implementation of {@link LuminanceSource} which inverts the luminances it returns -- black becomes\n * white and vice versa, and each value becomes (255-value).\n *\n * @author Sean Owen\n */\n\n\nvar InvertedLuminanceSource =\n/** @class */\nfunction (_super) {\n  __extends(InvertedLuminanceSource, _super);\n\n  function InvertedLuminanceSource(delegate) {\n    var _this = _super.call(this, delegate.getWidth(), delegate.getHeight()) || this;\n\n    _this.delegate = delegate;\n    return _this;\n  }\n  /*@Override*/\n\n\n  InvertedLuminanceSource.prototype.getRow = function (y\n  /*int*/\n  , row) {\n    var sourceRow = this.delegate.getRow(y, row);\n    var width = this.getWidth();\n\n    for (var i = 0; i < width; i++) {\n      sourceRow[i] =\n      /*(byte)*/\n      255 - (sourceRow[i] & 0xFF);\n    }\n\n    return sourceRow;\n  };\n  /*@Override*/\n\n\n  InvertedLuminanceSource.prototype.getMatrix = function () {\n    var matrix = this.delegate.getMatrix();\n    var length = this.getWidth() * this.getHeight();\n    var invertedMatrix = new Uint8ClampedArray(length);\n\n    for (var i = 0; i < length; i++) {\n      invertedMatrix[i] =\n      /*(byte)*/\n      255 - (matrix[i] & 0xFF);\n    }\n\n    return invertedMatrix;\n  };\n  /*@Override*/\n\n\n  InvertedLuminanceSource.prototype.isCropSupported = function () {\n    return this.delegate.isCropSupported();\n  };\n  /*@Override*/\n\n\n  InvertedLuminanceSource.prototype.crop = function (left\n  /*int*/\n  , top\n  /*int*/\n  , width\n  /*int*/\n  , height\n  /*int*/\n  ) {\n    return new InvertedLuminanceSource(this.delegate.crop(left, top, width, height));\n  };\n  /*@Override*/\n\n\n  InvertedLuminanceSource.prototype.isRotateSupported = function () {\n    return this.delegate.isRotateSupported();\n  };\n  /**\n   * @return original delegate {@link LuminanceSource} since invert undoes itself\n   */\n\n  /*@Override*/\n\n\n  InvertedLuminanceSource.prototype.invert = function () {\n    return this.delegate;\n  };\n  /*@Override*/\n\n\n  InvertedLuminanceSource.prototype.rotateCounterClockwise = function () {\n    return new InvertedLuminanceSource(this.delegate.rotateCounterClockwise());\n  };\n  /*@Override*/\n\n\n  InvertedLuminanceSource.prototype.rotateCounterClockwise45 = function () {\n    return new InvertedLuminanceSource(this.delegate.rotateCounterClockwise45());\n  };\n\n  return InvertedLuminanceSource;\n}(LuminanceSource_1.default);\n\nexports.default = InvertedLuminanceSource;","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;AAEA;;AAEA;;;;;;;;AAMA;AAAA;AAAA;AAAqDA;;AAEjD,mCAA2BC,QAA3B,EAAoD;AAApD,gBACIC,kBAAMD,QAAQ,CAACE,QAAT,EAAN,EAA2BF,QAAQ,CAACG,SAAT,EAA3B,KAAgD,IADpD;;AAA2BC;;AAE1B;AAED;;;AACOC,6CAAP,UAAcC;AAAU;AAAxB,IAAiCC,GAAjC,EAAwD;AACpD,QAAMC,SAAS,GAAG,KAAKR,QAAL,CAAcS,MAAd,CAAqBH,CAArB,EAAwBC,GAAxB,CAAlB;AACA,QAAMG,KAAK,GAAmB,KAAKR,QAAL,EAA9B;;AACA,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAApB,EAA2BC,CAAC,EAA5B,EAAgC;AAC5BH,eAAS,CAACG,CAAD,CAAT;AAAe;AAAY,aAAOH,SAAS,CAACG,CAAD,CAAT,GAAe,IAAtB,CAA3B;AACH;;AACD,WAAOH,SAAP;AACH,GAPM;AASP;;;AACOH,gDAAP;AAEI,QAAMO,MAAM,GAAsB,KAAKZ,QAAL,CAAca,SAAd,EAAlC;AACA,QAAMC,MAAM,GAAmB,KAAKZ,QAAL,KAAkB,KAAKC,SAAL,EAAjD;AACA,QAAMY,cAAc,GAAG,IAAIC,iBAAJ,CAAsBF,MAAtB,CAAvB;;AAEA,SAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,MAApB,EAA4BH,CAAC,EAA7B,EAAiC;AAC7BI,oBAAc,CAACJ,CAAD,CAAd;AAAoB;AAAY,aAAOC,MAAM,CAACD,CAAD,CAAN,GAAY,IAAnB,CAAhC;AACH;;AAED,WAAOI,cAAP;AACH,GAXM;AAaP;;;AACOV,sDAAP;AACI,WAAO,KAAKL,QAAL,CAAciB,eAAd,EAAP;AACH,GAFM;AAIP;;;AACOZ,2CAAP,UAAYa;AAAa;AAAzB,IAAkCC;AAAY;AAA9C,IAAuDT;AAAc;AAArE,IAA8EU;AAAe;AAA7F,IAAoG;AAChG,WAAO,IAAIf,uBAAJ,CAA4B,KAAKL,QAAL,CAAcqB,IAAd,CAAmBH,IAAnB,EAAyBC,GAAzB,EAA8BT,KAA9B,EAAqCU,MAArC,CAA5B,CAAP;AACH,GAFM;AAIP;;;AACOf,wDAAP;AACI,WAAO,KAAKL,QAAL,CAAcsB,iBAAd,EAAP;AACH,GAFM;AAIP;;;;AAGA;;;AACOjB,6CAAP;AACI,WAAO,KAAKL,QAAZ;AACH,GAFM;AAIP;;;AACOK,6DAAP;AACI,WAAO,IAAIA,uBAAJ,CAA4B,KAAKL,QAAL,CAAcuB,sBAAd,EAA5B,CAAP;AACH,GAFM;AAIP;;;AACOlB,+DAAP;AACI,WAAO,IAAIA,uBAAJ,CAA4B,KAAKL,QAAL,CAAcwB,wBAAd,EAA5B,CAAP;AACH,GAFM;;AAIX;AA/DA,EAAqDC,yBAArD","names":["__extends","delegate","_super","getWidth","getHeight","_this","InvertedLuminanceSource","y","row","sourceRow","getRow","width","i","matrix","getMatrix","length","invertedMatrix","Uint8ClampedArray","isCropSupported","left","top","height","crop","isRotateSupported","rotateCounterClockwise","rotateCounterClockwise45","LuminanceSource_1"],"sources":["../../src/core/InvertedLuminanceSource.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}